{"ast":null,"code":"import _slicedToArray from \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"simple-peer\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./videochatstyles.css\";\nimport { triggerAsyncId } from \"async_hooks\";\nlet client = {};\nvar peer;\n\nconst Videochat = () => {\n  const _useState = useState({\n    clientID: -1\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        clientInfo = _useState2[0],\n        setClientInfo = _useState2[1];\n\n  var str = null;\n  var clientID;\n  const socket = socketIOClient(\"http://127.0.0.1:5000\"); //   var peer = new Peer({\n  //     initiator: true,\n  //     trickle: false\n  //     //   stream: stream\n  //   });\n\n  const onsubmit = async e => {\n    e.preventDefault();\n    document.querySelector(\"#yourID\").value = \"\";\n    var id = Math.floor(Math.random() * 999999); // console.log(id);\n\n    document.getElementById(\"clientID\").textContent = \"ClientID: \" + id; // var text = document.getElementById(\"connectingID\").textContent;\n\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: false\n    }).then(stream => {\n      peer = new Peer({\n        initiator: window.location.hash === \"#init\",\n        trickle: false,\n        stream: stream\n      });\n    }); // peer = new Peer({\n    //   initiator: window.location.hash === \"#init\",\n    //   trickle: false\n    //   //   stream: stream\n    // });\n\n    console.log(peer);\n    peer.on(\"error\", function (err) {\n      console.log(\"error\", err);\n    });\n    peer.on(\"signal\", function (data) {\n      console.log(\"SIGNAL\", JSON.stringify(data));\n      document.querySelector(\"#yourID\").value = JSON.stringify(data);\n    });\n    peer.on(\"data\", data => {\n      console.log(\"HEL\" + data);\n      document.getElementById(\"reading\").value = data;\n    });\n    peer.on(\"stream\", stream => {\n      var vid = document.getElementById(\"peervid\");\n      vid.srcObject = stream;\n      vid.play();\n    });\n  };\n\n  const startChat = async e => {\n    e.preventDefault();\n    var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n    console.log(peer); // console.log\n\n    peer.signal(otherID);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: false\n    }).then(stream => {\n      peer.stream = stream; // var vid = document.getElementById(\"peervid\");\n      // vid.srcObject = stream;\n      // vid.play();\n    });\n  };\n\n  const sendTextMessage = async e => {\n    e.preventDefault();\n    var message = document.getElementById(\"message\").value;\n    peer.send(message);\n  }; //   const startVideoChat = async e => {\n  //     e.preventDefault();\n  //     navigator.mediaDevices\n  //       .getUserMedia({ video: true, audio: true })\n  //       .then(stream => {\n  //         document.querySelector(\"#yourID\").value = \"\";\n  //         var id = Math.floor(Math.random() * 999999);\n  //         // console.log(id);\n  //         document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n  //         // var text = document.getElementById(\"connectingID\").textContent;\n  //         // var peer = new Peer({\n  //         //   initiator: window.location.hash === \"#init\",\n  //         //   trickle: false,\n  //         //   stream: stream\n  //         // });\n  //       });\n  //     peer.on(\"stream\", stream => {\n  //       var vid = document.getElementById(\"peervid\");\n  //       vid.srcObj = stream;\n  //       vid.play();\n  //     });\n  //   };\n\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onsubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Get Info\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => startChat(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter the ID to connect with your friend\",\n    name: \"name\",\n    id: \"connectingID\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"clientID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Your ID: \")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"IDPeer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Your Token: \"), React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"yourID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Create Connection\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => sendTextMessage(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"messageLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Write Your Message: \"), React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Send Text Message\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Start Video Chat\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"msgbox\",\n    class: \"message-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"reading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"block_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"video-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    id: \"peervid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"video-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }))));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js"],"names":["React","Fragment","useState","useEffect","Peer","socketIOClient","triggerAsyncId","client","peer","Videochat","clientID","clientInfo","setClientInfo","str","socket","onsubmit","e","preventDefault","document","querySelector","value","id","Math","floor","random","getElementById","textContent","navigator","mediaDevices","getUserMedia","video","audio","then","stream","initiator","window","location","hash","trickle","console","log","on","err","data","JSON","stringify","vid","srcObject","play","startChat","otherID","parse","signal","sendTextMessage","message","send"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,uBAAP;AACA,SAASC,cAAT,QAA+B,aAA/B;AAEA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,IAAJ;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACcP,QAAQ,CAAC;AAC3CQ,IAAAA,QAAQ,EAAE,CAAC;AADgC,GAAD,CADtB;AAAA;AAAA,QACfC,UADe;AAAA,QACHC,aADG;;AAKtB,MAAIC,GAAG,GAAG,IAAV;AACA,MAAIH,QAAJ;AACA,QAAMI,MAAM,GAAGT,cAAc,CAAC,uBAAD,CAA7B,CAPsB,CAStB;AACA;AACA;AACA;AACA;;AAEA,QAAMU,QAAQ,GAAG,MAAMC,CAAN,IAAW;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCC,KAAlC,GAA0C,EAA1C;AACA,QAAIC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAT,CAH0B,CAI1B;;AACAN,IAAAA,QAAQ,CAACO,cAAT,CAAwB,UAAxB,EAAoCC,WAApC,GAAkD,eAAeL,EAAjE,CAL0B,CAO1B;;AACAM,IAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KADhB,EAEGC,IAFH,CAEQC,MAAM,IAAI;AACdzB,MAAAA,IAAI,GAAG,IAAIJ,IAAJ,CAAS;AACd8B,QAAAA,SAAS,EAAEC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,KAAyB,OADtB;AAEdC,QAAAA,OAAO,EAAE,KAFK;AAGdL,QAAAA,MAAM,EAAEA;AAHM,OAAT,CAAP;AAKD,KARH,EAR0B,CAiB1B;AACA;AACA;AACA;AACA;;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYhC,IAAZ;AACAA,IAAAA,IAAI,CAACiC,EAAL,CAAQ,OAAR,EAAiB,UAASC,GAAT,EAAc;AAC7BH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,GAArB;AACD,KAFD;AAIAlC,IAAAA,IAAI,CAACiC,EAAL,CAAQ,QAAR,EAAkB,UAASE,IAAT,EAAe;AAC/BJ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAtB;AACAzB,MAAAA,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCC,KAAlC,GAA0CwB,IAAI,CAACC,SAAL,CAAeF,IAAf,CAA1C;AACD,KAHD;AAKAnC,IAAAA,IAAI,CAACiC,EAAL,CAAQ,MAAR,EAAgBE,IAAI,IAAI;AACtBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQG,IAApB;AACAzB,MAAAA,QAAQ,CAACO,cAAT,CAAwB,SAAxB,EAAmCL,KAAnC,GAA2CuB,IAA3C;AACD,KAHD;AAKAnC,IAAAA,IAAI,CAACiC,EAAL,CAAQ,QAAR,EAAkBR,MAAM,IAAI;AAC1B,UAAIa,GAAG,GAAG5B,QAAQ,CAACO,cAAT,CAAwB,SAAxB,CAAV;AACAqB,MAAAA,GAAG,CAACC,SAAJ,GAAgBd,MAAhB;AACAa,MAAAA,GAAG,CAACE,IAAJ;AACD,KAJD;AAKD,GA1CD;;AA4CA,QAAMC,SAAS,GAAG,MAAMjC,CAAN,IAAW;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIiC,OAAO,GAAGN,IAAI,CAACO,KAAL,CAAWjC,QAAQ,CAACO,cAAT,CAAwB,cAAxB,EAAwCL,KAAnD,CAAd;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYhC,IAAZ,EAH2B,CAI3B;;AACAA,IAAAA,IAAI,CAAC4C,MAAL,CAAYF,OAAZ;AACAvB,IAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KADhB,EAEGC,IAFH,CAEQC,MAAM,IAAI;AACdzB,MAAAA,IAAI,CAACyB,MAAL,GAAcA,MAAd,CADc,CAEd;AACA;AACA;AACD,KAPH;AAQD,GAdD;;AAgBA,QAAMoB,eAAe,GAAG,MAAMrC,CAAN,IAAW;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIqC,OAAO,GAAGpC,QAAQ,CAACO,cAAT,CAAwB,SAAxB,EAAmCL,KAAjD;AACAZ,IAAAA,IAAI,CAAC+C,IAAL,CAAUD,OAAV;AACD,GAJD,CA3EsB,CAgFtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEtC,CAAC,IAAID,QAAQ,CAACC,CAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEA,CAAC,IAAIiC,SAAS,CAACjC,CAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,0CAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,EAAE,EAAC,cAJL;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAVF,EAaE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,EAAE,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAU,IAAA,KAAK,EAAC,cAAhB;AAA+B,IAAA,IAAI,EAAC,GAApC;AAAwC,IAAA,EAAE,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbF,EAkBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,KAAK,EAAC,mBAHR;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CATF,EAmCE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEA,CAAC,IAAIqC,eAAe,CAACrC,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,EAAE,EAAC,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAU,IAAA,KAAK,EAAC,cAAhB;AAA+B,IAAA,IAAI,EAAC,GAApC;AAAwC,IAAA,EAAE,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,KAAK,EAAC,mBAHR;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAnCF,EA+CE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,KAAK,EAAC,kBAHR;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA/CF,CAFF,EAgEE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAiB,IAAA,KAAK,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,KAAK,EAAC,cAAhB;AAA+B,IAAA,IAAI,EAAC,GAApC;AAAwC,IAAA,EAAE,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhEF,EAmEE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,EAAE,EAAC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CAnEF,CADF;AA8ED,CAtLD;;AAwLA,eAAeP,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"simple-peer\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./videochatstyles.css\";\nimport { triggerAsyncId } from \"async_hooks\";\n\nlet client = {};\nvar peer;\nconst Videochat = () => {\n  const [clientInfo, setClientInfo] = useState({\n    clientID: -1\n  });\n\n  var str = null;\n  var clientID;\n  const socket = socketIOClient(\"http://127.0.0.1:5000\");\n\n  //   var peer = new Peer({\n  //     initiator: true,\n  //     trickle: false\n  //     //   stream: stream\n  //   });\n\n  const onsubmit = async e => {\n    e.preventDefault();\n    document.querySelector(\"#yourID\").value = \"\";\n    var id = Math.floor(Math.random() * 999999);\n    // console.log(id);\n    document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n\n    // var text = document.getElementById(\"connectingID\").textContent;\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: false })\n      .then(stream => {\n        peer = new Peer({\n          initiator: window.location.hash === \"#init\",\n          trickle: false,\n          stream: stream\n        });\n      });\n    // peer = new Peer({\n    //   initiator: window.location.hash === \"#init\",\n    //   trickle: false\n    //   //   stream: stream\n    // });\n    console.log(peer);\n    peer.on(\"error\", function(err) {\n      console.log(\"error\", err);\n    });\n\n    peer.on(\"signal\", function(data) {\n      console.log(\"SIGNAL\", JSON.stringify(data));\n      document.querySelector(\"#yourID\").value = JSON.stringify(data);\n    });\n\n    peer.on(\"data\", data => {\n      console.log(\"HEL\" + data);\n      document.getElementById(\"reading\").value = data;\n    });\n\n    peer.on(\"stream\", stream => {\n      var vid = document.getElementById(\"peervid\");\n      vid.srcObject = stream;\n      vid.play();\n    });\n  };\n\n  const startChat = async e => {\n    e.preventDefault();\n    var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n    console.log(peer);\n    // console.log\n    peer.signal(otherID);\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: false })\n      .then(stream => {\n        peer.stream = stream;\n        // var vid = document.getElementById(\"peervid\");\n        // vid.srcObject = stream;\n        // vid.play();\n      });\n  };\n\n  const sendTextMessage = async e => {\n    e.preventDefault();\n    var message = document.getElementById(\"message\").value;\n    peer.send(message);\n  };\n  //   const startVideoChat = async e => {\n  //     e.preventDefault();\n  //     navigator.mediaDevices\n  //       .getUserMedia({ video: true, audio: true })\n  //       .then(stream => {\n  //         document.querySelector(\"#yourID\").value = \"\";\n  //         var id = Math.floor(Math.random() * 999999);\n  //         // console.log(id);\n  //         document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n\n  //         // var text = document.getElementById(\"connectingID\").textContent;\n  //         // var peer = new Peer({\n  //         //   initiator: window.location.hash === \"#init\",\n  //         //   trickle: false,\n  //         //   stream: stream\n  //         // });\n  //       });\n  //     peer.on(\"stream\", stream => {\n  //       var vid = document.getElementById(\"peervid\");\n  //       vid.srcObj = stream;\n  //       vid.play();\n  //     });\n  //   };\n\n  return (\n    <Fragment>\n      {/* <button onClick={() => handleNewMessage()}>Emit new message</button> */}\n      <div>\n        <form className=\"form\" onSubmit={e => onsubmit(e)}>\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Get Info\"\n            required\n          />\n        </form>\n        <form className=\"form\" onSubmit={e => startChat(e)}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter the ID to connect with your friend\"\n              name=\"name\"\n              id=\"connectingID\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label id=\"clientID\">Your ID: </label>\n          </div>\n          <div className=\"form-group\">\n            <label id=\"IDPeer\">Your Token: </label>\n            <textarea class=\"form-control\" rows=\"5\" id=\"yourID\" />\n          </div>\n\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Create Connection\"\n            required\n          />\n        </form>\n\n        <form className=\"form\" onSubmit={e => sendTextMessage(e)}>\n          <div className=\"form-group\">\n            <label id=\"messageLabel\">Write Your Message: </label>\n            <textarea class=\"form-control\" rows=\"5\" id=\"message\" />\n          </div>\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Send Text Message\"\n            required\n          />\n        </form>\n        <form className=\"form\">\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Start Video Chat\"\n            required\n          />\n        </form>\n      </div>\n\n      {/* <div className=\"container parent-box row \">\n        <div className=\"col-sm-4 d-flex justify-content-center video-box\" />{\" \"}\n        <div className=\"col-sm-4 d-flex justify-content-center video-box\" />\n      </div> */}\n\n      <div id=\"msgbox\" class=\"message-box\">\n        <textarea class=\"form-control\" rows=\"5\" id=\"reading\" />\n      </div>\n      <div id=\"block_container\">\n        <div className=\"video-box\">\n          <video id=\"peervid\" />\n        </div>\n        <div className=\"video-box\">\n          <video />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}