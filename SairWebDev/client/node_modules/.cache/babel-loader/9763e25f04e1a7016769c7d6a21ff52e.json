{"ast":null,"code":"'use strict';\n\nconst Namespace = require('./namespace');\n\nlet count = 0;\n\nclass ParentNamespace extends Namespace {\n  constructor(server) {\n    super(server, '/_' + count++);\n    this.children = new Set();\n  }\n\n  initAdapter() {}\n\n  emit() {\n    const args = Array.prototype.slice.call(arguments);\n    this.children.forEach(nsp => {\n      nsp.rooms = this.rooms;\n      nsp.flags = this.flags;\n      nsp.emit.apply(nsp, args);\n    });\n    this.rooms = [];\n    this.flags = {};\n  }\n\n  createChild(name) {\n    const namespace = new Namespace(this.server, name);\n    namespace.fns = this.fns.slice(0);\n    this.listeners('connect').forEach(listener => namespace.on('connect', listener));\n    this.listeners('connection').forEach(listener => namespace.on('connection', listener));\n    this.children.add(namespace);\n    this.server.nsps[name] = namespace;\n    return namespace;\n  }\n\n}\n\nmodule.exports = ParentNamespace;","map":null,"metadata":{},"sourceType":"script"}