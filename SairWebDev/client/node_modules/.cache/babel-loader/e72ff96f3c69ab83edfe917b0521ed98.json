{"ast":null,"code":"var _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochat.js\";\nimport React, { Fragment, useState, useEffect } from \"react\"; // let Peer = require(\"simple-peer\");\n// import * as Peer from \"simple-peer\";\n// import socketIOClient from \"socket.io-client\";\n// const video = document.querySelector(\"video\");\n// let client = {};\n// We can also pass an object with width and height for the video parameter of the getUSerMedia\n\nconst Videochat = () => {\n  //   const [socketinfo, setsocketinfo] = useState({\n  //     response: \"false\",\n  //     endpoint: \"http://127.0.0.1:5000\"\n  //   });\n  //   const socket = socketIOClient(socketinfo.endpoint);\n  var str = null;\n  navigator.mediaDevices.getUserMedia({\n    video: true,\n    audio: true\n  }).then(stream => {\n    // notify backend\n    str = stream;\n  }).catch(err => document.write(err));\n  useEffect(() => {\n    // const video = document.querySelector(\"video\");\n    // video.srcObject = str;\n    // video.play();\n    const p = document.querySelector(\"p\");\n    p.textContent = \"Here\";\n    const video = document.querySelector(\"video\");\n    console.log(\"Should start\");\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row h-100 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Gekk\"), React.createElement(\"div\", {\n    className: \"col-12 col-6 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"embed-responsive embed-responseive-16by9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    className: \"embed-responsive-item\",\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))))));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochat.js"],"names":["React","Fragment","useState","useEffect","Videochat","str","navigator","mediaDevices","getUserMedia","video","audio","then","stream","catch","err","document","write","p","querySelector","textContent","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD,C,CAEA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,SAAS,GAAG,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,MAAIC,GAAG,GAAG,IAAV;AACAC,EAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GADhB,EAEGC,IAFH,CAEQC,MAAM,IAAI;AACd;AACAP,IAAAA,GAAG,GAAGO,MAAN;AACD,GALH,EAMGC,KANH,CAMSC,GAAG,IAAIC,QAAQ,CAACC,KAAT,CAAeF,GAAf,CANhB;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA,UAAMc,CAAC,GAAGF,QAAQ,CAACG,aAAT,CAAuB,GAAvB,CAAV;AACAD,IAAAA,CAAC,CAACE,WAAF,GAAgB,MAAhB;AACA,UAAMV,KAAK,GAAGM,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,GARQ,EAQN,EARM,CAAT;AASA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,uBAAjB;AAAyC,IAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,CADF,CADF,CADF;AAeD,CAtCD;;AAwCA,eAAejB,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n\n// let Peer = require(\"simple-peer\");\n// import * as Peer from \"simple-peer\";\n// import socketIOClient from \"socket.io-client\";\n// const video = document.querySelector(\"video\");\n// let client = {};\n\n// We can also pass an object with width and height for the video parameter of the getUSerMedia\nconst Videochat = () => {\n  //   const [socketinfo, setsocketinfo] = useState({\n  //     response: \"false\",\n  //     endpoint: \"http://127.0.0.1:5000\"\n  //   });\n  //   const socket = socketIOClient(socketinfo.endpoint);\n  var str = null;\n  navigator.mediaDevices\n    .getUserMedia({ video: true, audio: true })\n    .then(stream => {\n      // notify backend\n      str = stream;\n    })\n    .catch(err => document.write(err));\n  useEffect(() => {\n    // const video = document.querySelector(\"video\");\n    // video.srcObject = str;\n    // video.play();\n    const p = document.querySelector(\"p\");\n    p.textContent = \"Here\";\n    const video = document.querySelector(\"video\");\n    console.log(\"Should start\");\n  }, []);\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className=\"row h-100 w-100\">\n          <p>Gekk</p>\n          <div className=\"col-12 col-6 d-flex justify-content-center\">\n            <div className=\"embed-responsive embed-responseive-16by9\">\n              <video className=\"embed-responsive-item\" muted />\n              {/* We muted the above video as we dont want to hear our own voice  also the above raios and sizes fix the video to cover the entire screen*/}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}