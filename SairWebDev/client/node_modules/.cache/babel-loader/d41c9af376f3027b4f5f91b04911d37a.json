{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar t = function (e, n) {\n  return (t = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (t, e) {\n    t.__proto__ = e;\n  } || function (t, e) {\n    for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);\n  })(e, n);\n};\n\nfunction e(e, n) {\n  function r() {\n    this.constructor = e;\n  }\n\n  t(e, n), e.prototype = null === n ? Object.create(n) : (r.prototype = n.prototype, new r());\n}\n\nvar n = function () {\n  return (n = Object.assign || function (t) {\n    for (var e, n = 1, r = arguments.length; n < r; n++) for (var o in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);\n\n    return t;\n  }).apply(this, arguments);\n};\n\nfunction r(t, e, n, r) {\n  return new (n || (n = Promise))(function (o, a) {\n    function i(t) {\n      try {\n        u(r.next(t));\n      } catch (t) {\n        a(t);\n      }\n    }\n\n    function s(t) {\n      try {\n        u(r.throw(t));\n      } catch (t) {\n        a(t);\n      }\n    }\n\n    function u(t) {\n      t.done ? o(t.value) : new n(function (e) {\n        e(t.value);\n      }).then(i, s);\n    }\n\n    u((r = r.apply(t, e || [])).next());\n  });\n}\n\nfunction o(t, e) {\n  var n,\n      r,\n      o,\n      a,\n      i = {\n    label: 0,\n    sent: function () {\n      if (1 & o[0]) throw o[1];\n      return o[1];\n    },\n    trys: [],\n    ops: []\n  };\n  return a = {\n    next: s(0),\n    throw: s(1),\n    return: s(2)\n  }, \"function\" == typeof Symbol && (a[Symbol.iterator] = function () {\n    return this;\n  }), a;\n\n  function s(a) {\n    return function (s) {\n      return function (a) {\n        if (n) throw new TypeError(\"Generator is already executing.\");\n\n        for (; i;) try {\n          if (n = 1, r && (o = 2 & a[0] ? r.return : a[0] ? r.throw || ((o = r.return) && o.call(r), 0) : r.next) && !(o = o.call(r, a[1])).done) return o;\n\n          switch (r = 0, o && (a = [2 & a[0], o.value]), a[0]) {\n            case 0:\n            case 1:\n              o = a;\n              break;\n\n            case 4:\n              return i.label++, {\n                value: a[1],\n                done: !1\n              };\n\n            case 5:\n              i.label++, r = a[1], a = [0];\n              continue;\n\n            case 7:\n              a = i.ops.pop(), i.trys.pop();\n              continue;\n\n            default:\n              if (!(o = (o = i.trys).length > 0 && o[o.length - 1]) && (6 === a[0] || 2 === a[0])) {\n                i = 0;\n                continue;\n              }\n\n              if (3 === a[0] && (!o || a[1] > o[0] && a[1] < o[3])) {\n                i.label = a[1];\n                break;\n              }\n\n              if (6 === a[0] && i.label < o[1]) {\n                i.label = o[1], o = a;\n                break;\n              }\n\n              if (o && i.label < o[2]) {\n                i.label = o[2], i.ops.push(a);\n                break;\n              }\n\n              o[2] && i.ops.pop(), i.trys.pop();\n              continue;\n          }\n\n          a = e.call(t, i);\n        } catch (t) {\n          a = [6, t], r = 0;\n        } finally {\n          n = o = 0;\n        }\n\n        if (5 & a[0]) throw a[1];\n        return {\n          value: a[0] ? a[1] : void 0,\n          done: !0\n        };\n      }([a, s]);\n    };\n  }\n}\n\nvar a = function () {\n  function t(t) {\n    this.global = t, this.flags = {}, this.flagRegistry = {}, this.urlFlags = {}, this.populateURLFlags();\n  }\n\n  return t.prototype.setPlatform = function (t, e) {\n    null != this.platform && console.warn(\"Platform \" + this.platformName + \" has already been set. Overwriting the platform with \" + e + \".\"), this.platformName = t, this.platform = e;\n  }, t.prototype.registerFlag = function (t, e, n) {\n    if (this.flagRegistry[t] = {\n      evaluationFn: e,\n      setHook: n\n    }, null != this.urlFlags[t]) {\n      var r = this.urlFlags[t];\n      console.warn(\"Setting feature override from URL \" + t + \": \" + r + \".\"), this.set(t, r);\n    }\n  }, t.prototype.get = function (t) {\n    return t in this.flags ? this.flags[t] : (this.flags[t] = this.evaluateFlag(t), this.flags[t]);\n  }, t.prototype.getNumber = function (t) {\n    return this.get(t);\n  }, t.prototype.getBool = function (t) {\n    return this.get(t);\n  }, t.prototype.getFlags = function () {\n    return this.flags;\n  }, Object.defineProperty(t.prototype, \"features\", {\n    get: function () {\n      return this.flags;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), t.prototype.set = function (t, e) {\n    if (null == this.flagRegistry[t]) throw new Error(\"Cannot set flag \" + t + \" as it has not been registered.\");\n    this.flags[t] = e, null != this.flagRegistry[t].setHook && this.flagRegistry[t].setHook(e);\n  }, t.prototype.evaluateFlag = function (t) {\n    if (null == this.flagRegistry[t]) throw new Error(\"Cannot evaluate flag '\" + t + \"': no evaluation function found.\");\n    return this.flagRegistry[t].evaluationFn();\n  }, t.prototype.setFlags = function (t) {\n    this.flags = Object.assign({}, t);\n  }, t.prototype.reset = function () {\n    this.flags = {}, this.urlFlags = {}, this.populateURLFlags();\n  }, t.prototype.populateURLFlags = function () {\n    var t = this;\n\n    if (void 0 !== this.global && void 0 !== this.global.location && void 0 !== this.global.location.search) {\n      var e = i(this.global.location.search);\n      if (\"tfjsflags\" in e) e.tfjsflags.split(\",\").forEach(function (e) {\n        var n = e.split(\":\"),\n            r = n[0],\n            o = n[1];\n\n        t.urlFlags[r] = function (t, e) {\n          if (\"true\" === (e = e.toLowerCase()) || \"false\" === e) return \"true\" === e;\n          if (\"\" + +e === e) return +e;\n          throw new Error(\"Could not parse value flag value \" + e + \" for flag \" + t + \".\");\n        }(r, o);\n      });\n    }\n  }, t;\n}();\n\nfunction i(t) {\n  var e = {};\n  return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function (t) {\n    for (var n = [], r = 1; r < arguments.length; r++) n[r - 1] = arguments[r];\n\n    return function (t, e, n) {\n      t[decodeURIComponent(e)] = decodeURIComponent(n || \"\");\n    }(e, n[0], n[1]), n.join(\"=\");\n  }), e;\n}\n\nvar s = null;\n\nfunction u(t) {\n  s = t;\n}\n\nvar l = Object.freeze({\n  Environment: a,\n  getQueryParams: i,\n\n  get ENV() {\n    return s;\n  },\n\n  setEnvironmentGlobal: u\n});\n\nfunction c(t) {\n  for (var e = t.length, n = 0, r = 0; e > 0;) r = Math.random() * e | 0, n = t[--e], t[e] = t[r], t[r] = n;\n}\n\nfunction h(t, e, n) {\n  return Math.max(t, Math.min(e, n));\n}\n\nfunction p(t) {\n  return t % 2 == 0 ? t : t + 1;\n}\n\nfunction f(t) {\n  for (var e = 0, n = 0; n < t.length; n++) e += t[n];\n\n  return e;\n}\n\nfunction d(t, e) {\n  if (!t) throw new Error(\"string\" == typeof e ? e : e());\n}\n\nfunction v(t, e, n) {\n  void 0 === n && (n = \"\"), d(x(t, e), function () {\n    return n + \" Shapes \" + t + \" and \" + e + \" must match\";\n  });\n}\n\nfunction m(t) {\n  d(null != t, function () {\n    return \"The input to the tensor constructor must be a non-null value.\";\n  });\n}\n\nfunction g(t, e, n) {\n  if (void 0 === e && (e = []), void 0 === n && (n = !1), null == e && (e = []), Array.isArray(t) || M(t) && !n) for (var r = 0; r < t.length; ++r) g(t[r], e, n);else e.push(t);\n  return e;\n}\n\nfunction y(t) {\n  if (0 === t.length) return 1;\n\n  for (var e = t[0], n = 1; n < t.length; n++) e *= t[n];\n\n  return e;\n}\n\nfunction x(t, e) {\n  if (t === e) return !0;\n  if (null == t || null == e) return !1;\n  if (t.length !== e.length) return !1;\n\n  for (var n = 0; n < t.length; n++) if (t[n] !== e[n]) return !1;\n\n  return !0;\n}\n\nfunction b(t) {\n  return t % 1 == 0;\n}\n\nfunction w(t) {\n  if (null != Math.tanh) return Math.tanh(t);\n  if (t === 1 / 0) return 1;\n  if (t === -1 / 0) return -1;\n  var e = Math.exp(2 * t);\n  return (e - 1) / (e + 1);\n}\n\nfunction C(t) {\n  var e = Math.ceil(Math.sqrt(t));\n  return [e, Math.ceil(t / e)];\n}\n\nfunction E(t, e) {\n  return e <= t.length ? t : t + \" \".repeat(e - t.length);\n}\n\nfunction R(t, e, n) {\n  return void 0 === e && (e = function (t) {\n    return 0;\n  }), new Promise(function (r, o) {\n    var a = 0,\n        i = function () {\n      if (t()) r();else {\n        var s = e(++a);\n        null != n && a >= n ? o() : setTimeout(i, s);\n      }\n    };\n\n    i();\n  });\n}\n\nfunction I(t, e) {\n  for (var n = 1, r = -1, o = 0; o < t.length; ++o) if (t[o] >= 0) n *= t[o];else if (-1 === t[o]) {\n    if (-1 !== r) throw Error(\"Shapes can only have 1 implicit size. Found -1 at dim \" + r + \" and dim \" + o);\n    r = o;\n  } else if (t[o] < 0) throw Error(\"Shapes can not be < 0. Found \" + t[o] + \" at dim \" + o);\n\n  if (-1 === r) {\n    if (e > 0 && e !== n) throw Error(\"Size(\" + e + \") must match the product of shape \" + t);\n    return t;\n  }\n\n  if (0 === n) throw Error(\"Cannot infer the missing size in [\" + t + \"] when there are 0 elements\");\n  if (e % n != 0) throw Error(\"The implicit shape can't be a fractional number. Got \" + e + \" / \" + n);\n  var a = t.slice();\n  return a[r] = e / n, a;\n}\n\nfunction S(t, e) {\n  var n = e.length;\n  return d((t = null == t ? e.map(function (t, e) {\n    return e;\n  }) : [].concat(t)).every(function (t) {\n    return t >= -n && t < n;\n  }), function () {\n    return \"All values in axis param must be in range [-\" + n + \", \" + n + \") but got axis \" + t;\n  }), d(t.every(function (t) {\n    return b(t);\n  }), function () {\n    return \"All values in axis param must be integers but got axis \" + t;\n  }), t.map(function (t) {\n    return t < 0 ? n + t : t;\n  });\n}\n\nfunction N(t, e) {\n  for (var n = [], r = [], o = null == e ? null : S(e, t).sort(), a = 0, i = 0; i < t.length; ++i) {\n    if (null != o) {\n      if (o[a] === i && 1 !== t[i]) throw new Error(\"Can't squeeze axis \" + i + \" since its dim '\" + t[i] + \"' is not 1\");\n      (null == o[a] || o[a] > i) && 1 === t[i] && (n.push(t[i]), r.push(i)), o[a] <= i && a++;\n    }\n\n    1 !== t[i] && (n.push(t[i]), r.push(i));\n  }\n\n  return {\n    newShape: n,\n    keptDims: r\n  };\n}\n\nfunction k(t, e) {\n  var n = null;\n  if (null == t || \"float32\" === t) n = new Float32Array(e);else if (\"int32\" === t) n = new Int32Array(e);else {\n    if (\"bool\" !== t) throw new Error(\"Unknown data type \" + t);\n    n = new Uint8Array(e);\n  }\n  return n;\n}\n\nfunction A(t, e) {\n  var n = null;\n  if (null == t || \"float32\" === t) n = new Float32Array(e);else if (\"int32\" === t) n = new Int32Array(e);else if (\"bool\" === t) n = new Uint8Array(e);else {\n    if (\"string\" !== t) throw new Error(\"Unknown data type \" + t);\n    n = new Array(e);\n  }\n  return n;\n}\n\nfunction T(t, e, n) {\n  if (\"float32\" === e) for (var r = 0; r < t.length; r++) {\n    var o = t[r];\n    if (isNaN(o) || !isFinite(o)) throw Error(\"The result of the '\" + n + \"' is \" + o + \".\");\n  }\n}\n\nfunction D(t, e) {\n  for (var n = 0; n < t.length; n++) {\n    var r = t[n];\n    if (isNaN(r) || !isFinite(r)) throw Error(\"A tensor of type \" + e + \" being uploaded contains \" + r + \".\");\n  }\n}\n\nfunction _(t) {\n  return \"bool\" === t || \"complex64\" === t || \"float32\" === t || \"int32\" === t || \"string\" === t;\n}\n\nfunction O(t, e) {\n  return \"complex64\" !== e && (\"float32\" !== e || \"complex64\" === t) && (\"int32\" !== e || \"float32\" === t || \"complex64\" === t) && (\"bool\" !== e || \"bool\" !== t);\n}\n\nfunction M(t) {\n  return t instanceof Float32Array || t instanceof Int32Array || t instanceof Uint8Array;\n}\n\nfunction F(t) {\n  if (\"float32\" === t || \"int32\" === t) return 4;\n  if (\"complex64\" === t) return 8;\n  if (\"bool\" === t) return 1;\n  throw new Error(\"Unknown dtype \" + t);\n}\n\nfunction B(t) {\n  if (null == t) return 0;\n  var e = 0;\n  return t.forEach(function (t) {\n    return e += t.length;\n  }), e;\n}\n\nfunction P(t) {\n  return \"string\" == typeof t || t instanceof String;\n}\n\nfunction L(t) {\n  return \"boolean\" == typeof t;\n}\n\nfunction W(t) {\n  return \"number\" == typeof t;\n}\n\nfunction U(t) {\n  return Array.isArray(t) ? U(t[0]) : t instanceof Float32Array ? \"float32\" : t instanceof Int32Array || t instanceof Uint8Array ? \"int32\" : W(t) ? \"float32\" : P(t) ? \"string\" : L(t) ? \"bool\" : \"float32\";\n}\n\nfunction z(t) {\n  return !!(t && t.constructor && t.call && t.apply);\n}\n\nfunction V(t, e) {\n  for (var n = e; n < t; ++n) if (t % n == 0) return n;\n\n  return t;\n}\n\nfunction G(t) {\n  var e = t.length;\n  if (e < 2) return [];\n  var n = new Array(e - 1);\n  n[e - 2] = t[e - 1];\n\n  for (var r = e - 3; r >= 0; --r) n[r] = n[r + 1] * t[r + 1];\n\n  return n;\n}\n\nfunction q(t, e, n) {\n  if (\"string\" === e) throw new Error(\"Cannot convert a string[] to a TypedArray\");\n  if (Array.isArray(t) && (t = g(t)), n && D(t, e), function (t, e) {\n    return t instanceof Float32Array && \"float32\" === e || t instanceof Int32Array && \"int32\" === e || t instanceof Uint8Array && \"bool\" === e;\n  }(t, e)) return t;\n  if (null == e || \"float32\" === e || \"complex64\" === e) return new Float32Array(t);\n  if (\"int32\" === e) return new Int32Array(t);\n\n  if (\"bool\" === e) {\n    for (var r = new Uint8Array(t.length), o = 0; o < r.length; ++o) 0 !== Math.round(t[o]) && (r[o] = 1);\n\n    return r;\n  }\n\n  throw new Error(\"Unknown data type \" + e);\n}\n\nfunction H(t, e) {\n  if (0 === t.length) return e[0];\n  var n = t.reduce(function (t, e) {\n    return t * e;\n  });\n  if (0 === n) return [];\n  if (n !== e.length) throw new Error(\"[\" + t + \"] does not match the input size.\");\n  return function t(e, n, r) {\n    var o = new Array();\n    if (1 === n.length) for (var a = n[0], i = 0; i < a; i++) o[i] = r[e + i];else {\n      a = n[0];\n      var s = n.slice(1),\n          u = s.reduce(function (t, e) {\n        return t * e;\n      });\n\n      for (i = 0; i < a; i++) o[i] = t(e + i * u, s, r);\n    }\n    return o;\n  }(0, t, e);\n}\n\nfunction $(t, e) {\n  for (var n = j(t, e), r = 0; r < n.length; r++) n[r] = 1;\n\n  return n;\n}\n\nfunction j(t, e) {\n  if (null == e || \"float32\" === e || \"complex64\" === e) return new Float32Array(t);\n  if (\"int32\" === e) return new Int32Array(t);\n  if (\"bool\" === e) return new Uint8Array(t);\n  throw new Error(\"Unknown data type \" + e);\n}\n\nfunction K() {\n  return s.platform.now();\n}\n\nfunction X(t) {\n  t.forEach(function (e) {\n    d(Number.isInteger(e) && e >= 0, function () {\n      return \"Tensor must have a shape comprised of positive integers but got shape [\" + t + \"].\";\n    });\n  });\n}\n\nfunction Y(t, e) {\n  return s.platform.fetch(t, e);\n}\n\nfunction Q(t, e) {\n  return void 0 === e && (e = \"utf-8\"), e = e || \"utf-8\", s.platform.encode(t, e);\n}\n\nfunction J(t, e) {\n  return void 0 === e && (e = \"utf-8\"), e = e || \"utf-8\", s.platform.decode(t, e);\n}\n\nvar Z = Object.freeze({\n  shuffle: c,\n  clamp: h,\n  nearestLargerEven: p,\n  sum: f,\n  randUniform: function (t, e) {\n    var n = Math.random();\n    return e * n + (1 - n) * t;\n  },\n  distSquared: function (t, e) {\n    for (var n = 0, r = 0; r < t.length; r++) {\n      var o = Number(t[r]) - Number(e[r]);\n      n += o * o;\n    }\n\n    return n;\n  },\n  assert: d,\n  assertShapesMatch: v,\n  assertNonNull: m,\n  flatten: g,\n  sizeFromShape: y,\n  isScalarShape: function (t) {\n    return 0 === t.length;\n  },\n  arraysEqual: x,\n  isInt: b,\n  tanh: w,\n  sizeToSquarishShape: C,\n  createShuffledIndices: function (t) {\n    for (var e = new Uint32Array(t), n = 0; n < t; ++n) e[n] = n;\n\n    return c(e), e;\n  },\n  rightPad: E,\n  repeatedTry: R,\n  inferFromImplicitShape: I,\n  parseAxisParam: S,\n  squeezeShape: N,\n  getTypedArrayFromDType: k,\n  getArrayFromDType: A,\n  checkComputationForErrors: T,\n  checkConversionForErrors: D,\n  isValidDtype: _,\n  hasEncodingLoss: O,\n  isTypedArray: M,\n  bytesPerElement: F,\n  bytesFromStringArray: B,\n  isString: P,\n  isBoolean: L,\n  isNumber: W,\n  inferDtype: U,\n  isFunction: z,\n  nearestDivisor: V,\n  computeStrides: G,\n  toTypedArray: q,\n  toNestedArray: H,\n  makeOnesTypedArray: $,\n  makeZerosTypedArray: j,\n  now: K,\n  assertNonNegativeIntegerDimensions: X,\n  fetch: Y,\n  encodeString: Q,\n  decodeString: J\n}),\n    tt = function () {\n  function t(t, e) {\n    this.backendTimer = t, this.logger = e, null == e && (this.logger = new et());\n  }\n\n  return t.prototype.profileKernel = function (t, e) {\n    var n,\n        r = this,\n        o = this.backendTimer.time(function () {\n      n = e();\n    });\n    return (Array.isArray(n) ? n : [n]).forEach(function (e) {\n      var n = e.dataSync();\n      T(n, e.dtype, t), o.then(function (o) {\n        var a = \"\";\n        null != o.getExtraProfileInfo && (a = o.getExtraProfileInfo()), r.logger.logKernelProfile(t, e, n, o.kernelMs, a);\n      });\n    }), n;\n  }, t;\n}(),\n    et = function () {\n  function t() {}\n\n  return t.prototype.logKernelProfile = function (t, e, n, r, o) {\n    var a = E(r + \"ms\", 9),\n        i = E(t, 25),\n        s = e.rank,\n        u = e.size,\n        l = E(e.shape.toString(), 14);\n    console.log(\"%c\" + i + \"\\t%c\" + a + \"\\t%c\" + s + \"D \" + l + \"\\t%c\" + u + \"\\t%c\" + o, \"font-weight:bold\", \"color:red\", \"color:blue\", \"color: orange\", \"color: green\");\n  }, t;\n}(),\n    nt = 20,\n    rt = 3,\n    ot = 7;\n\nfunction at(t, e, n, r) {\n  var o = G(e),\n      a = function (t, e, n, r) {\n    var o = y(e),\n        a = r[r.length - 1],\n        i = new Array(a).fill(0),\n        s = e.length,\n        u = \"complex64\" === n ? ut(t) : t;\n    if (s > 1) for (var l = 0; l < o / a; l++) for (var c = l * a, h = 0; h < a; h++) i[h] = Math.max(i[h], it(u[c + h], 0, n).length);\n    return i;\n  }(t, e, n, o),\n      i = e.length,\n      s = function t(e, n, r, o, a, i) {\n    void 0 === i && (i = !0);\n    var s = \"complex64\" === r ? 2 : 1;\n    var u = n[0];\n    var l = n.length;\n\n    if (0 === l) {\n      if (\"complex64\" === r) {\n        var c = ut(e);\n        return [it(c[0], 0, r)];\n      }\n\n      return \"bool\" === r ? [st(e[0])] : [e[0].toString()];\n    }\n\n    if (1 === l) {\n      if (u > nt) {\n        var h = rt * s,\n            p = Array.from(e.slice(0, h)),\n            f = Array.from(e.slice(u - rt * s, u));\n        return \"complex64\" === r && (p = ut(p), f = ut(f)), [\"[\" + p.map(function (t, e) {\n          return it(t, a[e], r);\n        }).join(\", \") + \", ..., \" + f.map(function (t, e) {\n          return it(t, a[u - rt + e], r);\n        }).join(\", \") + \"]\"];\n      }\n\n      var d = \"complex64\" === r ? ut(e) : Array.from(e);\n      return [\"[\" + d.map(function (t, e) {\n        return it(t, a[e], r);\n      }).join(\", \") + \"]\"];\n    }\n\n    var v = n.slice(1);\n    var m = o.slice(1);\n    var g = o[0] * s;\n    var y = [];\n\n    if (u > nt) {\n      for (var x = 0; x < rt; x++) {\n        var b = x * g,\n            w = b + g;\n        y.push.apply(y, t(e.slice(b, w), v, r, m, a, !1));\n      }\n\n      y.push(\"...\");\n\n      for (var x = u - rt; x < u; x++) {\n        var b = x * g,\n            w = b + g;\n        y.push.apply(y, t(e.slice(b, w), v, r, m, a, x === u - 1));\n      }\n    } else for (var x = 0; x < u; x++) {\n      var b = x * g,\n          w = b + g;\n      y.push.apply(y, t(e.slice(b, w), v, r, m, a, x === u - 1));\n    }\n\n    var C = 2 === l ? \",\" : \"\";\n    y[0] = \"[\" + y[0] + C;\n\n    for (var x = 1; x < y.length - 1; x++) y[x] = \" \" + y[x] + C;\n\n    var E = \",\\n\";\n\n    for (var x = 2; x < l; x++) E += \"\\n\";\n\n    y[y.length - 1] = \" \" + y[y.length - 1] + \"]\" + (i ? \"\" : E);\n    return y;\n  }(t, e, n, o, a),\n      u = [\"Tensor\"];\n\n  return r && (u.push(\"  dtype: \" + n), u.push(\"  rank: \" + i), u.push(\"  shape: [\" + e + \"]\"), u.push(\"  values:\")), u.push(s.map(function (t) {\n    return \"    \" + t;\n  }).join(\"\\n\")), u.join(\"\\n\");\n}\n\nfunction it(t, e, n) {\n  return E(Array.isArray(t) ? parseFloat(t[0].toFixed(ot)) + \" + \" + parseFloat(t[1].toFixed(ot)) + \"j\" : P(t) ? \"'\" + t + \"'\" : \"bool\" === n ? st(t) : parseFloat(t.toFixed(ot)).toString(), e);\n}\n\nfunction st(t) {\n  return 0 === t ? \"false\" : \"true\";\n}\n\nfunction ut(t) {\n  for (var e = [], n = 0; n < t.length; n += 2) e.push([t[n], t[n + 1]]);\n\n  return e;\n}\n\nvar lt = function () {\n  function t(t, e, n) {\n    var r = this;\n\n    if (this.dtype = e, this.shape = t.slice(), this.size = y(t), null != n) {\n      var o = n.length;\n      d(o === this.size, function () {\n        return \"Length of values '\" + o + \"' does not match the size inferred by the shape '\" + r.size + \"'.\";\n      });\n    }\n\n    if (\"complex64\" === e) throw new Error(\"complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).\");\n    this.values = n || A(e, this.size), this.strides = G(t);\n  }\n\n  return t.prototype.set = function (t) {\n    for (var e = this, n = [], r = 1; r < arguments.length; r++) n[r - 1] = arguments[r];\n\n    0 === n.length && (n = [0]), d(n.length === this.rank, function () {\n      return \"The number of provided coordinates (\" + n.length + \") must match the rank (\" + e.rank + \")\";\n    });\n    var o = this.locToIndex(n);\n    this.values[o] = t;\n  }, t.prototype.get = function () {\n    for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n\n    0 === t.length && (t = [0]);\n\n    for (var n = 0, r = 0, o = t; r < o.length; r++) {\n      var a = o[r];\n\n      if (a < 0 || a >= this.shape[n]) {\n        var i = \"Requested out of range element at \" + t + \".   Buffer shape=\" + this.shape;\n        throw new Error(i);\n      }\n\n      n++;\n    }\n\n    for (var s = t[t.length - 1], u = 0; u < t.length - 1; ++u) s += this.strides[u] * t[u];\n\n    return this.values[s];\n  }, t.prototype.locToIndex = function (t) {\n    if (0 === this.rank) return 0;\n    if (1 === this.rank) return t[0];\n\n    for (var e = t[t.length - 1], n = 0; n < t.length - 1; ++n) e += this.strides[n] * t[n];\n\n    return e;\n  }, t.prototype.indexToLoc = function (t) {\n    if (0 === this.rank) return [];\n    if (1 === this.rank) return [t];\n\n    for (var e = new Array(this.shape.length), n = 0; n < e.length - 1; ++n) e[n] = Math.floor(t / this.strides[n]), t -= e[n] * this.strides[n];\n\n    return e[e.length - 1] = t, e;\n  }, Object.defineProperty(t.prototype, \"rank\", {\n    get: function () {\n      return this.shape.length;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), t.prototype.toTensor = function () {\n    return ft.make(this.shape, {\n      values: this.values\n    }, this.dtype);\n  }, t;\n}(),\n    ct = null,\n    ht = null,\n    pt = null;\n\nvar ft = function () {\n  function t(t, e, n, r, o) {\n    this.kept = !1, this.isDisposedInternal = !1, this.shape = t.slice(), this.dtype = e || \"float32\", this.size = y(t), this.strides = G(t), this.dataId = null != r ? r : {}, this.id = ct().nextTensorId(), this.rankType = this.rank < 5 ? this.rank.toString() : \"higher\", ct().registerTensor(this, o), null != n && ct().write(o, this.dataId, n);\n  }\n\n  return t.make = function (e, n, r, o) {\n    var a = n.values;\n    return null != n.values && \"string\" === r && P(n.values[0]) && (a = n.values.map(function (t) {\n      return Q(t);\n    })), new t(e, r, a, n.dataId, o);\n  }, t.prototype.flatten = function () {\n    return this.throwIfDisposed(), this.as1D();\n  }, t.prototype.asScalar = function () {\n    return this.throwIfDisposed(), d(1 === this.size, function () {\n      return \"The array must have only 1 element.\";\n    }), this.reshape([]);\n  }, t.prototype.as1D = function () {\n    return this.throwIfDisposed(), this.reshape([this.size]);\n  }, t.prototype.as2D = function (t, e) {\n    return this.throwIfDisposed(), this.reshape([t, e]);\n  }, t.prototype.as3D = function (t, e, n) {\n    return this.throwIfDisposed(), this.reshape([t, e, n]);\n  }, t.prototype.as4D = function (t, e, n, r) {\n    return this.throwIfDisposed(), this.reshape([t, e, n, r]);\n  }, t.prototype.as5D = function (t, e, n, r, o) {\n    return this.throwIfDisposed(), this.reshape([t, e, n, r, o]);\n  }, t.prototype.asType = function (t) {\n    return this.throwIfDisposed(), ht.cast(this, t);\n  }, Object.defineProperty(t.prototype, \"rank\", {\n    get: function () {\n      return this.shape.length;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), t.prototype.buffer = function () {\n    return r(this, void 0, void 0, function () {\n      var t;\n      return o(this, function (e) {\n        switch (e.label) {\n          case 0:\n            return [4, this.data()];\n\n          case 1:\n            return t = e.sent(), [2, ht.buffer(this.shape, this.dtype, t)];\n        }\n      });\n    });\n  }, t.prototype.bufferSync = function () {\n    return ht.buffer(this.shape, this.dtype, this.dataSync());\n  }, t.prototype.array = function () {\n    return r(this, void 0, void 0, function () {\n      var t;\n      return o(this, function (e) {\n        switch (e.label) {\n          case 0:\n            return [4, this.data()];\n\n          case 1:\n            return t = e.sent(), [2, H(this.shape, t)];\n        }\n      });\n    });\n  }, t.prototype.arraySync = function () {\n    return H(this.shape, this.dataSync());\n  }, t.prototype.data = function () {\n    return r(this, void 0, void 0, function () {\n      var t, e;\n      return o(this, function (n) {\n        switch (n.label) {\n          case 0:\n            return this.throwIfDisposed(), t = ct().read(this.dataId), \"string\" !== this.dtype ? [3, 2] : [4, t];\n\n          case 1:\n            e = n.sent();\n\n            try {\n              return [2, e.map(function (t) {\n                return J(t);\n              })];\n            } catch (t) {\n              throw new Error(\"Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().\");\n            }\n\n            n.label = 2;\n\n          case 2:\n            return [2, t];\n        }\n      });\n    });\n  }, t.prototype.dataSync = function () {\n    this.throwIfDisposed();\n    var t = ct().readSync(this.dataId);\n    if (\"string\" === this.dtype) try {\n      return t.map(function (t) {\n        return J(t);\n      });\n    } catch (t) {\n      throw new Error(\"Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().\");\n    }\n    return t;\n  }, t.prototype.bytes = function () {\n    return r(this, void 0, void 0, function () {\n      var t;\n      return o(this, function (e) {\n        switch (e.label) {\n          case 0:\n            return this.throwIfDisposed(), [4, ct().read(this.dataId)];\n\n          case 1:\n            return t = e.sent(), \"string\" === this.dtype ? [2, t] : [2, new Uint8Array(t.buffer)];\n        }\n      });\n    });\n  }, t.prototype.dispose = function () {\n    this.isDisposed || (ct().disposeTensor(this), this.isDisposedInternal = !0);\n  }, Object.defineProperty(t.prototype, \"isDisposed\", {\n    get: function () {\n      return this.isDisposedInternal;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), t.prototype.throwIfDisposed = function () {\n    if (this.isDisposed) throw new Error(\"Tensor is disposed.\");\n  }, t.prototype.toFloat = function () {\n    return this.asType(\"float32\");\n  }, t.prototype.toInt = function () {\n    return this.asType(\"int32\");\n  }, t.prototype.toBool = function () {\n    return this.asType(\"bool\");\n  }, t.prototype.print = function (t) {\n    return void 0 === t && (t = !1), ht.print(this, t);\n  }, t.prototype.reshape = function (t) {\n    return this.throwIfDisposed(), ht.reshape(this, t);\n  }, t.prototype.reshapeAs = function (t) {\n    return this.throwIfDisposed(), this.reshape(t.shape);\n  }, t.prototype.expandDims = function (t) {\n    return void 0 === t && (t = 0), ht.expandDims(this, t);\n  }, t.prototype.cumsum = function (t, e, n) {\n    return void 0 === t && (t = 0), void 0 === e && (e = !1), void 0 === n && (n = !1), ht.cumsum(this, t, e, n);\n  }, t.prototype.squeeze = function (t) {\n    return this.throwIfDisposed(), ht.squeeze(this, t);\n  }, t.prototype.clone = function () {\n    return this.throwIfDisposed(), ht.clone(this);\n  }, t.prototype.oneHot = function (t, e, n) {\n    return this.throwIfDisposed(), ht.oneHot(this, t, e, n);\n  }, t.prototype.toString = function (t) {\n    return void 0 === t && (t = !1), at(this.dataSync(), this.shape, this.dtype, t);\n  }, t.prototype.tile = function (t) {\n    return this.throwIfDisposed(), ht.tile(this, t);\n  }, t.prototype.gather = function (t, e) {\n    return void 0 === e && (e = 0), this.throwIfDisposed(), ht.gather(this, t, e);\n  }, t.prototype.matMul = function (t, e, n) {\n    return void 0 === e && (e = !1), void 0 === n && (n = !1), this.throwIfDisposed(), ht.matMul(this, t, e, n);\n  }, t.prototype.dot = function (t) {\n    return this.throwIfDisposed(), ht.dot(this, t);\n  }, t.prototype.norm = function (t, e, n) {\n    return void 0 === t && (t = \"euclidean\"), void 0 === e && (e = null), void 0 === n && (n = !1), this.throwIfDisposed(), ht.norm(this, t, e, n);\n  }, t.prototype.slice = function (t, e) {\n    return this.throwIfDisposed(), ht.slice(this, t, e);\n  }, t.prototype.reverse = function (t) {\n    return this.throwIfDisposed(), ht.reverse(this, t);\n  }, t.prototype.concat = function (e, n) {\n    return void 0 === n && (n = 0), this.throwIfDisposed(), e instanceof t && (e = [e]), ht.concat([this].concat(e), n);\n  }, t.prototype.split = function (t, e) {\n    return void 0 === e && (e = 0), this.throwIfDisposed(), ht.split(this, t, e);\n  }, t.prototype.stack = function (t, e) {\n    return void 0 === e && (e = 0), ht.stack([this, t], e);\n  }, t.prototype.unstack = function (t) {\n    return void 0 === t && (t = 0), ht.unstack(this, t);\n  }, t.prototype.pad = function (t, e) {\n    return void 0 === e && (e = 0), ht.pad(this, t, e);\n  }, t.prototype.batchNormalization = function (t, e, n, r, o) {\n    return void 0 === n && (n = .001), pt(\"tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon\"), this.batchNorm(t, e, o, r, n);\n  }, t.prototype.batchNorm = function (t, e, n, r, o) {\n    return void 0 === o && (o = .001), this.throwIfDisposed(), ht.batchNorm(this, t, e, n, r, o);\n  }, t.prototype.all = function (t, e) {\n    return void 0 === t && (t = null), void 0 === e && (e = !1), this.throwIfDisposed(), ht.all(this, t, e);\n  }, t.prototype.any = function (t, e) {\n    return void 0 === t && (t = null), void 0 === e && (e = !1), this.throwIfDisposed(), ht.any(this, t, e);\n  }, t.prototype.logSumExp = function (t, e) {\n    return void 0 === t && (t = null), void 0 === e && (e = !1), this.throwIfDisposed(), ht.logSumExp(this, t, e);\n  }, t.prototype.sum = function (t, e) {\n    return void 0 === t && (t = null), void 0 === e && (e = !1), this.throwIfDisposed(), ht.sum(this, t, e);\n  }, t.prototype.prod = function (t, e) {\n    return void 0 === t && (t = null), void 0 === e && (e = !1), this.throwIfDisposed(), ht.prod(this, t, e);\n  }, t.prototype.mean = function (t, e) {\n    return void 0 === t && (t = null), void 0 === e && (e = !1), this.throwIfDisposed(), ht.mean(this, t, e);\n  }, t.prototype.min = function (t, e) {\n    return void 0 === t && (t = null), void 0 === e && (e = !1), this.throwIfDisposed(), ht.min(this, t, e);\n  }, t.prototype.max = function (t, e) {\n    return void 0 === t && (t = null), void 0 === e && (e = !1), this.throwIfDisposed(), ht.max(this, t, e);\n  }, t.prototype.argMin = function (t) {\n    return void 0 === t && (t = null), this.throwIfDisposed(), ht.argMin(this, t);\n  }, t.prototype.argMax = function (t) {\n    return void 0 === t && (t = null), this.throwIfDisposed(), ht.argMax(this, t);\n  }, t.prototype.cast = function (t) {\n    return this.throwIfDisposed(), ht.cast(this, t);\n  }, t.prototype.add = function (t) {\n    return this.throwIfDisposed(), ht.add(this, t);\n  }, t.prototype.addStrict = function (t) {\n    return this.throwIfDisposed(), ht.addStrict(this, t);\n  }, t.prototype.atan2 = function (t) {\n    return this.throwIfDisposed(), ht.atan2(this, t);\n  }, t.prototype.sub = function (t) {\n    return this.throwIfDisposed(), ht.sub(this, t);\n  }, t.prototype.subStrict = function (t) {\n    return this.throwIfDisposed(), ht.subStrict(this, t);\n  }, t.prototype.pow = function (t) {\n    return this.throwIfDisposed(), ht.pow(this, t);\n  }, t.prototype.powStrict = function (t) {\n    return this.throwIfDisposed(), ht.powStrict(this, t);\n  }, t.prototype.mul = function (t) {\n    return this.throwIfDisposed(), ht.mul(this, t);\n  }, t.prototype.mulStrict = function (t) {\n    return this.throwIfDisposed(), ht.mulStrict(this, t);\n  }, t.prototype.div = function (t) {\n    return this.throwIfDisposed(), ht.div(this, t);\n  }, t.prototype.floorDiv = function (t) {\n    return this.throwIfDisposed(), ht.floorDiv(this, t);\n  }, t.prototype.divStrict = function (t) {\n    return this.throwIfDisposed(), ht.divStrict(this, t);\n  }, t.prototype.minimum = function (t) {\n    return this.throwIfDisposed(), ht.minimum(this, t);\n  }, t.prototype.minimumStrict = function (t) {\n    return this.throwIfDisposed(), ht.minimumStrict(this, t);\n  }, t.prototype.maximum = function (t) {\n    return this.throwIfDisposed(), ht.maximum(this, t);\n  }, t.prototype.maximumStrict = function (t) {\n    return this.throwIfDisposed(), ht.maximumStrict(this, t);\n  }, t.prototype.mod = function (t) {\n    return this.throwIfDisposed(), ht.mod(this, t);\n  }, t.prototype.modStrict = function (t) {\n    return this.throwIfDisposed(), ht.modStrict(this, t);\n  }, t.prototype.squaredDifference = function (t) {\n    return this.throwIfDisposed(), ht.squaredDifference(this, t);\n  }, t.prototype.squaredDifferenceStrict = function (t) {\n    return this.throwIfDisposed(), ht.squaredDifferenceStrict(this, t);\n  }, t.prototype.transpose = function (t) {\n    return this.throwIfDisposed(), ht.transpose(this, t);\n  }, t.prototype.notEqual = function (t) {\n    return this.throwIfDisposed(), ht.notEqual(this, t);\n  }, t.prototype.notEqualStrict = function (t) {\n    return this.throwIfDisposed(), ht.notEqualStrict(this, t);\n  }, t.prototype.less = function (t) {\n    return this.throwIfDisposed(), ht.less(this, t);\n  }, t.prototype.lessStrict = function (t) {\n    return this.throwIfDisposed(), ht.lessStrict(this, t);\n  }, t.prototype.equal = function (t) {\n    return this.throwIfDisposed(), ht.equal(this, t);\n  }, t.prototype.equalStrict = function (t) {\n    return this.throwIfDisposed(), ht.equalStrict(this, t);\n  }, t.prototype.lessEqual = function (t) {\n    return this.throwIfDisposed(), ht.lessEqual(this, t);\n  }, t.prototype.lessEqualStrict = function (t) {\n    return this.throwIfDisposed(), ht.lessEqualStrict(this, t);\n  }, t.prototype.greater = function (t) {\n    return this.throwIfDisposed(), ht.greater(this, t);\n  }, t.prototype.greaterStrict = function (t) {\n    return this.throwIfDisposed(), ht.greaterStrict(this, t);\n  }, t.prototype.greaterEqual = function (t) {\n    return this.throwIfDisposed(), ht.greaterEqual(this, t);\n  }, t.prototype.greaterEqualStrict = function (t) {\n    return this.throwIfDisposed(), ht.greaterEqualStrict(this, t);\n  }, t.prototype.logicalAnd = function (t) {\n    return this.throwIfDisposed(), ht.logicalAnd(this, t);\n  }, t.prototype.logicalOr = function (t) {\n    return this.throwIfDisposed(), ht.logicalOr(this, t);\n  }, t.prototype.logicalNot = function () {\n    return this.throwIfDisposed(), ht.logicalNot(this);\n  }, t.prototype.logicalXor = function (t) {\n    return this.throwIfDisposed(), ht.logicalXor(this, t);\n  }, t.prototype.where = function (t, e) {\n    return this.throwIfDisposed(), ht.where(t, this, e);\n  }, t.prototype.neg = function () {\n    return this.throwIfDisposed(), ht.neg(this);\n  }, t.prototype.ceil = function () {\n    return this.throwIfDisposed(), ht.ceil(this);\n  }, t.prototype.floor = function () {\n    return this.throwIfDisposed(), ht.floor(this);\n  }, t.prototype.sign = function () {\n    return this.throwIfDisposed(), ht.sign(this);\n  }, t.prototype.isNaN = function () {\n    return this.throwIfDisposed(), ht.isNaN(this);\n  }, t.prototype.isInf = function () {\n    return this.throwIfDisposed(), ht.isInf(this);\n  }, t.prototype.isFinite = function () {\n    return this.throwIfDisposed(), ht.isFinite(this);\n  }, t.prototype.exp = function () {\n    return this.throwIfDisposed(), ht.exp(this);\n  }, t.prototype.expm1 = function () {\n    return this.throwIfDisposed(), ht.expm1(this);\n  }, t.prototype.log = function () {\n    return this.throwIfDisposed(), ht.log(this);\n  }, t.prototype.log1p = function () {\n    return this.throwIfDisposed(), ht.log1p(this);\n  }, t.prototype.sqrt = function () {\n    return this.throwIfDisposed(), ht.sqrt(this);\n  }, t.prototype.rsqrt = function () {\n    return this.throwIfDisposed(), ht.rsqrt(this);\n  }, t.prototype.square = function () {\n    return this.throwIfDisposed(), ht.square(this);\n  }, t.prototype.reciprocal = function () {\n    return this.throwIfDisposed(), ht.reciprocal(this);\n  }, t.prototype.abs = function () {\n    return this.throwIfDisposed(), ht.abs(this);\n  }, t.prototype.clipByValue = function (t, e) {\n    return this.throwIfDisposed(), ht.clipByValue(this, t, e);\n  }, t.prototype.relu = function () {\n    return this.throwIfDisposed(), ht.relu(this);\n  }, t.prototype.elu = function () {\n    return this.throwIfDisposed(), ht.elu(this);\n  }, t.prototype.selu = function () {\n    return this.throwIfDisposed(), ht.selu(this);\n  }, t.prototype.leakyRelu = function (t) {\n    return void 0 === t && (t = .2), this.throwIfDisposed(), ht.leakyRelu(this, t);\n  }, t.prototype.prelu = function (t) {\n    return this.throwIfDisposed(), ht.prelu(this, t);\n  }, t.prototype.sigmoid = function () {\n    return this.throwIfDisposed(), ht.sigmoid(this);\n  }, t.prototype.logSigmoid = function () {\n    return this.throwIfDisposed(), ht.logSigmoid(this);\n  }, t.prototype.softplus = function () {\n    return this.throwIfDisposed(), ht.softplus(this);\n  }, t.prototype.zerosLike = function () {\n    return this.throwIfDisposed(), ht.zerosLike(this);\n  }, t.prototype.onesLike = function () {\n    return this.throwIfDisposed(), ht.onesLike(this);\n  }, t.prototype.sin = function () {\n    return this.throwIfDisposed(), ht.sin(this);\n  }, t.prototype.cos = function () {\n    return this.throwIfDisposed(), ht.cos(this);\n  }, t.prototype.tan = function () {\n    return this.throwIfDisposed(), ht.tan(this);\n  }, t.prototype.asin = function () {\n    return this.throwIfDisposed(), ht.asin(this);\n  }, t.prototype.acos = function () {\n    return this.throwIfDisposed(), ht.acos(this);\n  }, t.prototype.atan = function () {\n    return this.throwIfDisposed(), ht.atan(this);\n  }, t.prototype.sinh = function () {\n    return this.throwIfDisposed(), ht.sinh(this);\n  }, t.prototype.cosh = function () {\n    return this.throwIfDisposed(), ht.cosh(this);\n  }, t.prototype.tanh = function () {\n    return this.throwIfDisposed(), ht.tanh(this);\n  }, t.prototype.asinh = function () {\n    return this.throwIfDisposed(), ht.asinh(this);\n  }, t.prototype.acosh = function () {\n    return this.throwIfDisposed(), ht.acosh(this);\n  }, t.prototype.atanh = function () {\n    return this.throwIfDisposed(), ht.atanh(this);\n  }, t.prototype.erf = function () {\n    return this.throwIfDisposed(), ht.erf(this);\n  }, t.prototype.round = function () {\n    return this.throwIfDisposed(), ht.round(this);\n  }, t.prototype.step = function (t) {\n    return void 0 === t && (t = 0), this.throwIfDisposed(), ht.step(this, t);\n  }, t.prototype.softmax = function (t) {\n    return void 0 === t && (t = -1), this.throwIfDisposed(), ht.softmax(this, t);\n  }, t.prototype.logSoftmax = function (t) {\n    return void 0 === t && (t = -1), this.throwIfDisposed(), ht.logSoftmax(this, t);\n  }, t.prototype.resizeBilinear = function (t, e) {\n    return void 0 === e && (e = !1), this.throwIfDisposed(), ht.image.resizeBilinear(this, t, e);\n  }, t.prototype.resizeNearestNeighbor = function (t, e) {\n    return void 0 === e && (e = !1), this.throwIfDisposed(), ht.image.resizeNearestNeighbor(this, t, e);\n  }, t.prototype.conv1d = function (t, e, n, r, o, a) {\n    return void 0 === r && (r = \"NWC\"), void 0 === o && (o = 1), this.throwIfDisposed(), ht.conv1d(this, t, e, n, r, o, a);\n  }, t.prototype.conv2d = function (t, e, n, r, o, a) {\n    return void 0 === r && (r = \"NHWC\"), void 0 === o && (o = [1, 1]), this.throwIfDisposed(), ht.conv2d(this, t, e, n, r, o, a);\n  }, t.prototype.conv2dTranspose = function (t, e, n, r, o) {\n    return this.throwIfDisposed(), ht.conv2dTranspose(this, t, e, n, r, o);\n  }, t.prototype.depthwiseConv2D = function (t, e, n, r, o, a) {\n    return void 0 === r && (r = \"NHWC\"), void 0 === o && (o = [1, 1]), this.throwIfDisposed(), ht.depthwiseConv2d(this, t, e, n, r, o, a);\n  }, t.prototype.separableConv2d = function (t, e, n, r, o, a) {\n    return void 0 === o && (o = [1, 1]), void 0 === a && (a = \"NHWC\"), this.throwIfDisposed(), ht.separableConv2d(this, t, e, n, r, o, a);\n  }, t.prototype.avgPool = function (t, e, n, r) {\n    return this.throwIfDisposed(), ht.avgPool(this, t, e, n, r);\n  }, t.prototype.maxPool = function (t, e, n, r) {\n    return this.throwIfDisposed(), ht.maxPool(this, t, e, n, r);\n  }, t.prototype.localResponseNormalization = function (t, e, n, r) {\n    return void 0 === t && (t = 5), void 0 === e && (e = 1), void 0 === n && (n = 1), void 0 === r && (r = .5), ht.localResponseNormalization(this, t, e, n, r);\n  }, t.prototype.pool = function (t, e, n, r, o) {\n    return this.throwIfDisposed(), ht.pool(this, t, e, n, r, o);\n  }, t.prototype.variable = function (t, e, n) {\n    return void 0 === t && (t = !0), this.throwIfDisposed(), dt.variable(this, t, e, n);\n  }, t.prototype.unsortedSegmentSum = function (t, e) {\n    return this.throwIfDisposed(), ht.unsortedSegmentSum(this, t, e);\n  }, t.prototype.batchToSpaceND = function (t, e) {\n    return this.throwIfDisposed(), ht.batchToSpaceND(this, t, e);\n  }, t.prototype.spaceToBatchND = function (t, e) {\n    return this.throwIfDisposed(), ht.spaceToBatchND(this, t, e);\n  }, t.prototype.topk = function (t, e) {\n    return void 0 === t && (t = 1), void 0 === e && (e = !0), this.throwIfDisposed(), ht.topk(this, t, e);\n  }, t.prototype.stridedSlice = function (t, e, n, r, o, a, i, s) {\n    return void 0 === r && (r = 0), void 0 === o && (o = 0), void 0 === a && (a = 0), void 0 === i && (i = 0), void 0 === s && (s = 0), this.throwIfDisposed(), ht.stridedSlice(this, t, e, n, r, o, a, i, s);\n  }, t.prototype.depthToSpace = function (t, e) {\n    return this.throwIfDisposed(), ht.depthToSpace(this, t, e);\n  }, t.prototype.fft = function () {\n    return this.throwIfDisposed(), ht.spectral.fft(this);\n  }, t.prototype.ifft = function () {\n    return this.throwIfDisposed(), ht.spectral.ifft(this);\n  }, t.prototype.rfft = function () {\n    return this.throwIfDisposed(), ht.spectral.rfft(this);\n  }, t.prototype.irfft = function () {\n    return this.throwIfDisposed(), ht.spectral.irfft(this);\n  }, t;\n}();\n\nObject.defineProperty(ft, Symbol.hasInstance, {\n  value: function (t) {\n    return !!t && null != t.dataId && null != t.shape && null != t.dtype;\n  }\n});\n\nvar dt = function (t) {\n  function n(e, n, r) {\n    void 0 === n && (n = !0);\n    var o = t.call(this, e.shape, e.dtype, null, e.dataId) || this;\n    o.trainable = n, o.name = r, null == o.name && (o.name = ct().nextVariableId().toString());\n\n    try {\n      ct().registerVariable(o);\n    } catch (t) {\n      throw ct().disposeTensor(o), t;\n    }\n\n    return o;\n  }\n\n  return e(n, t), n.variable = function (t, e, r, o) {\n    return void 0 === e && (e = !0), null != o && o !== t.dtype && (t = t.asType(o)), new n(t, e, r);\n  }, n.prototype.assign = function (t) {\n    if (t.dtype !== this.dtype) throw new Error(\"dtype of the new value (\" + t.dtype + \") and previous value (\" + this.dtype + \") must match\");\n    if (!x(t.shape, this.shape)) throw new Error(\"shape of the new value (\" + t.shape + \") and previous value (\" + this.shape + \") must match\");\n    ct().disposeTensor(this), this.dataId = t.dataId, ct().registerTensor(this);\n  }, n.prototype.dispose = function () {\n    ct().disposeVariable(this), this.isDisposedInternal = !0;\n  }, n;\n}(ft);\n\nObject.defineProperty(dt, Symbol.hasInstance, {\n  value: function (t) {\n    return t instanceof ft && null != t.assign && t.assign instanceof Function;\n  }\n});\nvar vt,\n    mt,\n    gt,\n    yt,\n    xt,\n    bt = dt.variable;\n!function (t) {\n  t.R0 = \"R0\", t.R1 = \"R1\", t.R2 = \"R2\", t.R3 = \"R3\", t.R4 = \"R4\", t.R5 = \"R5\", t.R6 = \"R6\";\n}(vt || (vt = {})), function (t) {\n  t.float32 = \"float32\", t.int32 = \"int32\", t.bool = \"int32\", t.complex64 = \"complex64\";\n}(mt || (mt = {})), function (t) {\n  t.float32 = \"float32\", t.int32 = \"int32\", t.bool = \"bool\", t.complex64 = \"complex64\";\n}(gt || (gt = {})), function (t) {\n  t.float32 = \"float32\", t.int32 = \"float32\", t.bool = \"float32\", t.complex64 = \"complex64\";\n}(yt || (yt = {})), function (t) {\n  t.float32 = \"complex64\", t.int32 = \"complex64\", t.bool = \"complex64\", t.complex64 = \"complex64\";\n}(xt || (xt = {}));\nvar wt = {\n  float32: yt,\n  int32: mt,\n  bool: gt,\n  complex64: xt\n};\n\nfunction Ct(t, e) {\n  if (\"string\" === t || \"string\" === e) {\n    if (\"string\" === t && \"string\" === e) return \"string\";\n    throw new Error(\"Can not upcast \" + t + \" with \" + e);\n  }\n\n  return wt[t][e];\n}\n\nfunction Et(t) {\n  return Ct(t, \"int32\");\n}\n\nfunction Rt(t, e) {\n  if (t.dtype === e.dtype) return [t, e];\n  var n = Ct(t.dtype, e.dtype);\n  return [t.cast(n), e.cast(n)];\n}\n\nfunction It(t, e) {\n  d(t.dtype === e.dtype, function () {\n    return \"The dtypes of the first(\" + t.dtype + \") and second(\" + e.dtype + \") input must match\";\n  });\n}\n\nfunction St(t) {\n  var e = [];\n  return function t(e, n, r) {\n    if (null == e) return;\n    if (e instanceof ft) return void n.push(e);\n    if (o = e, !Array.isArray(o) && \"object\" != typeof o) return;\n    var o;\n    var a = e;\n\n    for (var i in a) {\n      var s = a[i];\n      r.has(s) || (r.add(s), t(s, n, r));\n    }\n  }(t, e, new Set()), e;\n}\n\nvar Nt,\n    kt = Object.freeze({\n  makeTypesMatch: Rt,\n  assertTypesMatch: It,\n  isTensorInList: function (t, e) {\n    for (var n = 0; n < e.length; n++) if (e[n].id === t.id) return !0;\n\n    return !1;\n  },\n  getTensorsInContainer: St\n}),\n    At = function () {\n  function t() {\n    this.registeredVariables = {}, this.nextTapeNodeId = 0, this.numBytes = 0, this.numTensors = 0, this.numStringTensors = 0, this.numDataBuffers = 0, this.gradientDepth = 0, this.kernelDepth = 0, this.scopeStack = [], this.nextScopeId = 0, this.tensorInfo = new WeakMap(), this.profiling = !1, this.activeProfile = {\n      newBytes: 0,\n      newTensors: 0,\n      peakBytes: 0,\n      kernels: [],\n      result: null\n    };\n  }\n\n  return t.prototype.dispose = function () {\n    for (var t in this.registeredVariables) this.registeredVariables[t].dispose();\n  }, t;\n}(),\n    Tt = function () {\n  function t(t) {\n    this.ENV = t, this.registry = {}, this.registryFactory = {}, this.pendingBackendInitId = 0, this.state = new At();\n  }\n\n  return t.prototype.ready = function () {\n    return r(this, void 0, void 0, function () {\n      var t, e, n;\n      return o(this, function (r) {\n        switch (r.label) {\n          case 0:\n            if (null != this.pendingBackendInit) return [2, this.pendingBackendInit.then(function () {})];\n            if (null != this.backendInstance) return [2];\n            t = this.getSortedBackends(), e = 0, r.label = 1;\n\n          case 1:\n            return e < t.length ? (n = t[e], [4, this.initializeBackend(n).success]) : [3, 5];\n\n          case 2:\n            return r.sent() ? [4, this.setBackend(n)] : [3, 4];\n\n          case 3:\n            return r.sent(), [2];\n\n          case 4:\n            return e++, [3, 1];\n\n          case 5:\n            throw new Error(\"Could not initialize any backends, all backend initializations failed.\");\n        }\n      });\n    });\n  }, Object.defineProperty(t.prototype, \"backend\", {\n    get: function () {\n      if (null != this.pendingBackendInit) throw new Error(\"Backend '\" + this.backendName + \"' has not yet been initialized. Make sure to await tf.ready() before calling other methods\");\n\n      if (null == this.backendInstance) {\n        var t = this.initializeBackendsAndReturnBest(),\n            e = t.name;\n        if (t.asyncInit) throw new Error(\"The highest priority backend '\" + e + \"' has not yet been initialized. Make sure to await tf.ready() before calling other methods\");\n        this.setBackend(e);\n      }\n\n      return this.backendInstance;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), t.prototype.backendNames = function () {\n    return Object.keys(this.registryFactory);\n  }, t.prototype.findBackend = function (t) {\n    if (!(t in this.registry)) {\n      if (!(t in this.registryFactory)) return null;\n      if (this.initializeBackend(t).asyncInit) return null;\n    }\n\n    return this.registry[t];\n  }, t.prototype.findBackendFactory = function (t) {\n    return t in this.registryFactory ? this.registryFactory[t].factory : null;\n  }, t.prototype.registerBackend = function (t, e, n) {\n    return void 0 === n && (n = 1), t in this.registryFactory ? (console.warn(t + \" backend was already registered. Reusing existing backend factory.\"), !1) : (this.registryFactory[t] = {\n      factory: e,\n      priority: n\n    }, !0);\n  }, t.prototype.setBackend = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e, n, r;\n      return o(this, function (o) {\n        switch (o.label) {\n          case 0:\n            if (null == this.registryFactory[t]) throw new Error(\"Backend name '\" + t + \"' not found in registry\");\n            return this.backendName = t, null != this.registry[t] ? [3, 4] : (this.backendInstance = null, e = this.initializeBackend(t), n = e.success, e.asyncInit ? [4, n] : [3, 2]);\n\n          case 1:\n            return r = o.sent(), [3, 3];\n\n          case 2:\n            r = n, o.label = 3;\n\n          case 3:\n            if (!r) return [2, !1];\n            o.label = 4;\n\n          case 4:\n            return this.backendInstance = this.registry[t], this.profiler = new tt(this.backendInstance), [2, !0];\n        }\n      });\n    });\n  }, t.prototype.initializeBackend = function (t) {\n    var e = this,\n        n = this.registryFactory[t];\n    if (null == n) throw new Error(\"Cannot initialize backend \" + t + \", no registration found.\");\n\n    try {\n      var r = n.factory();\n\n      if (Promise.resolve(r) === r) {\n        var o = ++this.pendingBackendInitId,\n            a = r.then(function (n) {\n          return !(o < e.pendingBackendInitId) && (e.registry[t] = n, e.pendingBackendInit = null, !0);\n        }).catch(function (n) {\n          return !(o < e.pendingBackendInitId) && (e.pendingBackendInit = null, console.warn(\"Initialization of backend \" + t + \" failed\"), console.warn(n.stack || n.message), !1);\n        });\n        return this.pendingBackendInit = a, {\n          success: a,\n          asyncInit: !0\n        };\n      }\n\n      return this.registry[t] = r, {\n        success: !0,\n        asyncInit: !1\n      };\n    } catch (e) {\n      return console.warn(\"Initialization of backend \" + t + \" failed\"), console.warn(e.stack || e.message), {\n        success: !1,\n        asyncInit: !1\n      };\n    }\n  }, t.prototype.removeBackend = function (t) {\n    if (!(t in this.registryFactory)) throw new Error(t + \" backend not found in registry\");\n    this.backendName === t && null != this.pendingBackendInit && this.pendingBackendInitId++, t in this.registry && (this.registry[t].dispose(), delete this.registry[t]), delete this.registryFactory[t], this.backendName === t && (this.pendingBackendInit = null, this.backendName = null, this.backendInstance = null);\n  }, t.prototype.getSortedBackends = function () {\n    var t = this;\n    if (0 === Object.keys(this.registryFactory).length) throw new Error(\"No backend found in registry.\");\n    return Object.keys(this.registryFactory).sort(function (e, n) {\n      return t.registryFactory[n].priority - t.registryFactory[e].priority;\n    });\n  }, t.prototype.initializeBackendsAndReturnBest = function () {\n    for (var t = this.getSortedBackends(), e = 0; e < t.length; e++) {\n      var n = t[e],\n          r = this.initializeBackend(n),\n          o = r.success,\n          a = r.asyncInit;\n      if (a || o) return {\n        name: n,\n        asyncInit: a\n      };\n    }\n\n    throw new Error(\"Could not initialize any backends, all backend initializations failed.\");\n  }, t.prototype.moveData = function (t, e) {\n    this.write(t, e, this.readSync(e));\n  }, t.prototype.tidy = function (t, e) {\n    var n,\n        r = this,\n        o = null;\n\n    if (null == e) {\n      if (\"function\" != typeof t) throw new Error(\"Please provide a function to tidy()\");\n      e = t;\n    } else {\n      if (\"string\" != typeof t && !(t instanceof String)) throw new Error(\"When calling with two arguments, the first argument to tidy() must be a string\");\n      if (\"function\" != typeof e) throw new Error(\"When calling with two arguments, the 2nd argument to tidy() must be a function\");\n      o = t;\n    }\n\n    return this.scopedRun(function () {\n      return r.startScope(o);\n    }, function () {\n      return r.endScope(n);\n    }, function () {\n      return (n = e()) instanceof Promise && console.error(\"Cannot return a Promise inside of tidy.\"), n;\n    });\n  }, t.prototype.scopedRun = function (t, e, n) {\n    t();\n\n    try {\n      var r = n();\n      return e(), r;\n    } catch (t) {\n      throw e(), t;\n    }\n  }, t.prototype.nextTensorId = function () {\n    return t.nextTensorId++;\n  }, t.prototype.nextVariableId = function () {\n    return t.nextVariableId++;\n  }, t.prototype.clone = function (t) {\n    var e = ft.make(t.shape, {\n      dataId: t.dataId\n    }, t.dtype);\n    return this.addTapeNode([t], e, function (t) {\n      return [t.toFloat()];\n    }), e;\n  }, t.prototype.runKernel = function (t, e, n) {\n    var r,\n        o = this,\n        a = [],\n        i = this.isTapeOn(),\n        s = null != this.state.activeScope ? this.state.activeScope.name : \"\",\n        u = function (t) {\n      i && (a = t.map(function (t) {\n        return o.keep(o.clone(t));\n      }));\n    },\n        l = this.state.numBytes,\n        c = this.state.numTensors;\n\n    if (this.scopedRun(function () {\n      return o.state.kernelDepth++;\n    }, function () {\n      return o.state.kernelDepth--;\n    }, function () {\n      r = o.ENV.getBool(\"DEBUG\") ? o.profiler.profileKernel(s, function () {\n        return t(o.backend, u);\n      }) : t(o.backend, u);\n    }), i) {\n      var h = {\n        id: this.state.nextTapeNodeId++,\n        name: s,\n        inputs: e,\n        outputs: Array.isArray(r) ? r : [r],\n        saved: a\n      };\n      null != n && (h.gradient = function (t) {\n        return n(t, a);\n      }), this.state.activeTape.push(h);\n    }\n\n    return this.state.profiling && this.state.activeProfile.kernels.push({\n      name: s,\n      bytesAdded: this.state.numBytes - l,\n      totalBytesSnapshot: this.state.numBytes,\n      tensorsAdded: this.state.numTensors - c,\n      totalTensorsSnapshot: this.state.numTensors,\n      inputShapes: Object.keys(e).map(function (t) {\n        return e[t].shape;\n      }),\n      outputShape: Array.isArray(r) ? r.map(function (t) {\n        return t.shape;\n      }) : r.shape\n    }), r;\n  }, t.prototype.registerTensor = function (t, e) {\n    var n = this.state.tensorInfo.has(t.dataId) ? this.state.tensorInfo.get(t.dataId).refCount : 0;\n\n    if (this.state.numTensors++, \"string\" === t.dtype && this.state.numStringTensors++, 0 === n) {\n      this.state.numDataBuffers++;\n      var r = 0;\n      \"complex64\" !== t.dtype && \"string\" !== t.dtype && (r = t.size * F(t.dtype)), this.state.tensorInfo.set(t.dataId, {\n        backend: null != e ? e : this.backend,\n        dtype: t.dtype,\n        shape: t.shape,\n        bytes: r,\n        refCount: 0\n      }), this.state.numBytes += r, null != e ? e.register(t.dataId, t.shape, t.dtype) : this.backend.register(t.dataId, t.shape, t.dtype);\n    }\n\n    this.state.tensorInfo.get(t.dataId).refCount++, t instanceof dt || this.track(t);\n  }, t.prototype.registerVariable = function (t) {\n    if (null != this.state.registeredVariables[t.name]) throw new Error(\"Variable with name \" + t.name + \" was already registered\");\n    this.state.registeredVariables[t.name] = t;\n  }, t.prototype.disposeTensor = function (t) {\n    if (this.state.tensorInfo.has(t.dataId)) {\n      this.state.numTensors--, \"string\" === t.dtype && this.state.numStringTensors--;\n      var e = this.state.tensorInfo.get(t.dataId);\n      e.refCount <= 1 ? (\"complex64\" !== t.dtype && (this.state.numBytes -= e.bytes), this.state.numDataBuffers--, e.backend.disposeData(t.dataId), this.state.tensorInfo.delete(t.dataId)) : this.state.tensorInfo.get(t.dataId).refCount--;\n    }\n  }, t.prototype.disposeVariables = function () {\n    for (var t in this.state.registeredVariables) {\n      var e = this.state.registeredVariables[t];\n      this.disposeVariable(e);\n    }\n  }, t.prototype.disposeVariable = function (t) {\n    this.disposeTensor(t), null != this.state.registeredVariables[t.name] && delete this.state.registeredVariables[t.name];\n  }, t.prototype.memory = function () {\n    var t = this.backend.memory();\n    return t.numTensors = this.state.numTensors, t.numDataBuffers = this.state.numDataBuffers, t.numBytes = this.state.numBytes, this.state.numStringTensors > 0 && (t.unreliable = !0, null == t.reasons && (t.reasons = []), t.reasons.push(\"Memory usage by string tensors is approximate (2 bytes per character)\")), t;\n  }, t.prototype.profile = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e, n;\n      return o(this, function (r) {\n        return this.state.profiling = !0, e = this.state.numBytes, n = this.state.numTensors, this.state.activeProfile.kernels = [], this.state.activeProfile.result = t(), this.state.profiling = !1, this.state.activeProfile.peakBytes = Math.max.apply(Math, this.state.activeProfile.kernels.map(function (t) {\n          return t.totalBytesSnapshot;\n        })), this.state.activeProfile.newBytes = this.state.numBytes - e, this.state.activeProfile.newTensors = this.state.numTensors - n, [2, this.state.activeProfile];\n      });\n    });\n  }, t.prototype.isTapeOn = function () {\n    return this.state.gradientDepth > 0 && 0 === this.state.kernelDepth;\n  }, t.prototype.addTapeNode = function (t, e, n) {\n    var r = {};\n    t.forEach(function (t, e) {\n      r[e] = t;\n    });\n    var o = {\n      id: this.state.nextTapeNodeId++,\n      name: this.state.activeScope.name,\n      inputs: r,\n      outputs: [e],\n      gradient: function (t) {\n        var e = n(t),\n            r = {};\n        return e.forEach(function (t, e) {\n          r[e] = function () {\n            return t;\n          };\n        }), r;\n      }\n    };\n    this.state.activeTape.push(o);\n  }, t.prototype.keep = function (t) {\n    return t.kept = !0, t;\n  }, t.prototype.startTape = function () {\n    0 === this.state.gradientDepth && (this.state.activeTape = []), this.state.gradientDepth++;\n  }, t.prototype.endTape = function () {\n    this.state.gradientDepth--;\n  }, t.prototype.startScope = function (t) {\n    var e = {\n      track: [],\n      name: \"unnamed scope\",\n      id: this.state.nextScopeId++\n    };\n    t && (e.name = t), this.state.scopeStack.push(e), this.state.activeScope = e;\n  }, t.prototype.endScope = function (t) {\n    for (var e = this, n = St(t), r = new Set(n.map(function (t) {\n      return t.id;\n    })), o = 0; o < this.state.activeScope.track.length; o++) {\n      var a = this.state.activeScope.track[o];\n      a.kept || r.has(a.id) || a.dispose();\n    }\n\n    var i = this.state.scopeStack.pop();\n    this.state.activeScope = 0 === this.state.scopeStack.length ? null : this.state.scopeStack[this.state.scopeStack.length - 1], n.forEach(function (t) {\n      t.kept || t.scopeId !== i.id || e.track(t);\n    });\n  }, t.prototype.gradients = function (t, e, n, r) {\n    var o = this;\n    if (void 0 === r && (r = !1), d(e.length > 0, function () {\n      return \"gradients() received an empty list of xs.\";\n    }), null != n && \"float32\" !== n.dtype) throw new Error(\"dy must have 'float32' dtype, but has '\" + n.dtype + \"'\");\n    var a = this.scopedRun(function () {\n      return o.startTape();\n    }, function () {\n      return o.endTape();\n    }, function () {\n      return o.tidy(\"forward\", t);\n    });\n    d(a instanceof ft, function () {\n      return \"The result y returned by f() must be a tensor.\";\n    });\n\n    var i = function (t, e, n) {\n      for (var r = {}, o = {}, a = 0; a < e.length; a++) r[e[a].id] = !0;\n\n      for (a = 0; a < t.length; a++) {\n        var i = (d = t[a]).inputs;\n\n        for (var s in i) {\n          for (var u = i[s], l = !1, c = 0; c < e.length; c++) if (r[u.id]) {\n            d.outputs.forEach(function (t) {\n              return r[t.id] = !0;\n            }), l = !0, o[d.id] = !0;\n            break;\n          }\n\n          if (l) break;\n        }\n      }\n\n      var h = {};\n      h[n.id] = !0;\n      var p = {};\n\n      for (a = t.length - 1; a >= 0; a--) for (i = (d = t[a]).inputs, c = 0; c < d.outputs.length; c++) if (h[d.outputs[c].id]) {\n        for (var s in i) h[i[s].id] = !0, p[d.id] = !0;\n\n        break;\n      }\n\n      var f = [];\n\n      for (a = 0; a < t.length; a++) {\n        var d;\n\n        if (o[(d = t[a]).id] && p[d.id]) {\n          var v = {};\n\n          for (var s in d.inputs) {\n            var m = d.inputs[s];\n            r[m.id] && (v[s] = m);\n          }\n\n          var g = Object.assign({}, d);\n          g.inputs = v, g.outputs = d.outputs, f.push(g);\n        }\n      }\n\n      return f;\n    }(this.state.activeTape, e, a);\n\n    if (!r && 0 === i.length && e.length > 0) throw new Error(\"Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.\");\n    return this.tidy(\"backward\", function () {\n      var t,\n          r,\n          s = {};\n      s[a.id] = null == n ? (t = a.shape, r = $(y(t), \"float32\"), ft.make(t, {\n        values: r\n      })) : n, function (t, e, n) {\n        for (var r = function (r) {\n          var o = e[r],\n              a = [];\n          if (o.outputs.forEach(function (e) {\n            var n = t[e.id];\n            if (null != n) a.push(n);else {\n              var r = ft.make(e.shape, {\n                values: j(e.size, e.dtype)\n              }, e.dtype);\n              a.push(r);\n            }\n          }), null == o.gradient) throw new Error(\"Cannot compute gradient: gradient function not found for \" + o.name + \".\");\n\n          var i = o.gradient(1 === o.outputs.length ? a[0] : a),\n              s = function (e) {\n            if (!(e in i)) throw new Error(\"Cannot backprop through input \" + e + \". Available gradients found: \" + Object.keys(i) + \".\");\n            var r = n(function () {\n              return i[e]();\n            });\n            if (\"float32\" !== r.dtype) throw new Error(\"Error in gradient for op \" + o.name + \". The gradient of input \" + e + \" must have 'float32' dtype, but has '\" + r.dtype + \"'\");\n            var a = o.inputs[e];\n            if (!x(r.shape, a.shape)) throw new Error(\"Error in gradient for op \" + o.name + \". The gradient of input '\" + e + \"' has shape '\" + r.shape + \"', which does not match the shape of the input '\" + a.shape + \"'\");\n            if (null == t[a.id]) t[a.id] = r;else {\n              var s = t[a.id];\n              t[a.id] = s.add(r), s.dispose();\n            }\n          };\n\n          for (var u in o.inputs) s(u);\n        }, o = e.length - 1; o >= 0; o--) r(o);\n      }(s, i, function (t) {\n        return o.tidy(t);\n      });\n      var u = e.map(function (t) {\n        return s[t.id];\n      });\n      return 0 === o.state.gradientDepth && (o.state.activeTape.forEach(function (t) {\n        for (var e in t.saved) t.saved[e].dispose();\n      }), o.state.activeTape = null), {\n        value: a,\n        grads: u\n      };\n    });\n  }, t.prototype.customGrad = function (t) {\n    var e = this;\n    return d(z(t), function () {\n      return \"The f passed in customGrad(f) must be a function.\";\n    }), function () {\n      for (var n, r = [], o = 0; o < arguments.length; o++) r[o] = arguments[o];\n\n      d(r.every(function (t) {\n        return t instanceof ft;\n      }), function () {\n        return \"The args passed in customGrad(f)(x1, x2,...) must all be tensors\";\n      });\n      var a = {};\n      return r.forEach(function (t, e) {\n        a[e] = t;\n      }), e.runKernel(function (e, o) {\n        return d((n = t.apply(void 0, r.concat([o]))).value instanceof ft, function () {\n          return \"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor\";\n        }), d(z(n.gradFunc), function () {\n          return \"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.\";\n        }), n.value;\n      }, a, function (t, e) {\n        var o = n.gradFunc(t, e),\n            a = Array.isArray(o) ? o : [o];\n        d(a.length === r.length, function () {\n          return \"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).\";\n        }), d(a.every(function (t) {\n          return t instanceof ft;\n        }), function () {\n          return \"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.\";\n        });\n        var i = {};\n        return a.forEach(function (t, e) {\n          i[e] = function () {\n            return t;\n          };\n        }), i;\n      });\n    };\n  }, t.prototype.write = function (t, e, n) {\n    var r = this.state.tensorInfo.get(e),\n        o = r.backend;\n\n    if (t = t || this.backend, \"string\" === r.dtype) {\n      var a = B(n);\n      this.state.numBytes += a - r.bytes, r.bytes = a;\n    }\n\n    t !== o && (o.disposeData(e), r.backend = t, t.register(e, r.shape, r.dtype)), t.write(e, n);\n  }, t.prototype.readSync = function (t) {\n    return this.state.tensorInfo.get(t).backend.readSync(t);\n  }, t.prototype.read = function (t) {\n    return this.state.tensorInfo.get(t).backend.read(t);\n  }, t.prototype.fromPixels = function (t, e) {\n    return this.backend.fromPixels(t, e);\n  }, t.prototype.time = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e, n;\n      return o(this, function (r) {\n        switch (r.label) {\n          case 0:\n            return e = K(), [4, this.backend.time(t)];\n\n          case 1:\n            return (n = r.sent()).wallMs = K() - e, [2, n];\n        }\n      });\n    });\n  }, t.prototype.track = function (t) {\n    return null != this.state.activeScope && (t.scopeId = this.state.activeScope.id, this.state.activeScope.track.push(t)), t;\n  }, Object.defineProperty(t.prototype, \"registeredVariables\", {\n    get: function () {\n      return this.state.registeredVariables;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), t.prototype.reset = function () {\n    for (var t in this.pendingBackendInitId++, this.state.dispose(), this.ENV.reset(), this.state = new At(), this.registry) this.registry[t].dispose(), delete this.registry[t];\n\n    this.backendName = null, this.backendInstance = null, this.pendingBackendInit = null;\n  }, t.nextTensorId = 0, t.nextVariableId = 0, t;\n}();\n\nvar Dt = function () {\n  var t = function () {\n    if (null == Nt) {\n      var t = void 0;\n      if (\"undefined\" != typeof window) t = window;else if (\"undefined\" != typeof global) t = global;else if (\"undefined\" != typeof process) t = process;else {\n        if (\"undefined\" == typeof self) throw new Error(\"Could not find a global object\");\n        t = self;\n      }\n      Nt = t;\n    }\n\n    return Nt;\n  }();\n\n  if (null == t._tfengine) {\n    var e = new a(t);\n    t._tfengine = new Tt(e);\n  }\n\n  return u(t._tfengine.ENV), ct = function () {\n    return t._tfengine;\n  }, t._tfengine;\n}();\n\nfunction _t() {\n  return \"undefined\" != typeof window && null != window.document || \"undefined\" != typeof WorkerGlobalScope;\n}\n\ns.registerFlag(\"DEBUG\", function () {\n  return !1;\n}, function (t) {\n  t && console.warn(\"Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.\");\n}), s.registerFlag(\"IS_BROWSER\", function () {\n  return _t();\n}), s.registerFlag(\"IS_NODE\", function () {\n  return \"undefined\" != typeof process && void 0 !== process.versions && void 0 !== process.versions.node;\n}), s.registerFlag(\"IS_CHROME\", function () {\n  return \"undefined\" != typeof navigator && null != navigator && null != navigator.userAgent && /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n}), s.registerFlag(\"PROD\", function () {\n  return !1;\n}), s.registerFlag(\"TENSORLIKE_CHECK_SHAPE_CONSISTENCY\", function () {\n  return s.getBool(\"DEBUG\");\n}), s.registerFlag(\"DEPRECATION_WARNINGS_ENABLED\", function () {\n  return !0;\n}), s.registerFlag(\"IS_TEST\", function () {\n  return !1;\n});\nvar Ot = {},\n    Mt = {\n  alpha: !1,\n  antialias: !1,\n  premultipliedAlpha: !1,\n  preserveDrawingBuffer: !1,\n  depth: !1,\n  stencil: !1,\n  failIfMajorPerformanceCaveat: !0\n};\n\nfunction Ft(t, e) {\n  Ot[t] = e;\n}\n\nfunction Bt(t) {\n  t in Ot || (Ot[t] = function (t) {\n    if (1 !== t && 2 !== t) throw new Error(\"Cannot get WebGL rendering context, WebGL is disabled.\");\n    var e = Pt(t);\n    if (e.addEventListener(\"webglcontextlost\", function (e) {\n      e.preventDefault(), delete Ot[t];\n    }, !1), 1 === t) return e.getContext(\"webgl\", Mt) || e.getContext(\"experimental-webgl\", Mt);\n    return e.getContext(\"webgl2\", Mt);\n  }(t));\n  var e = Ot[t];\n  return e.isContextLost() ? (delete Ot[t], Bt(t)) : (e.disable(e.DEPTH_TEST), e.disable(e.STENCIL_TEST), e.disable(e.BLEND), e.disable(e.DITHER), e.disable(e.POLYGON_OFFSET_FILL), e.disable(e.SAMPLE_COVERAGE), e.enable(e.SCISSOR_TEST), e.enable(e.CULL_FACE), e.cullFace(e.BACK), Ot[t]);\n}\n\nfunction Pt(t) {\n  if (\"undefined\" != typeof OffscreenCanvas && 2 === t) return new OffscreenCanvas(300, 150);\n  if (\"undefined\" != typeof document) return document.createElement(\"canvas\");\n  throw new Error(\"Cannot create a canvas in this context\");\n}\n\nfunction Lt(t, e, n) {\n  var r = n();\n  return e && function (t) {\n    var e = t.getError();\n    if (e !== t.NO_ERROR) throw new Error(\"WebGL Error: \" + Vt(t, e));\n  }(t), r;\n}\n\nvar Wt = 5.96e-8,\n    Ut = 65504;\n\nfunction zt(t) {\n  return !!(s.getBool(\"WEBGL_RENDER_FLOAT32_ENABLED\") || 0 === t || Wt < Math.abs(t) && Math.abs(t) < Ut);\n}\n\nfunction Vt(t, e) {\n  switch (e) {\n    case t.NO_ERROR:\n      return \"NO_ERROR\";\n\n    case t.INVALID_ENUM:\n      return \"INVALID_ENUM\";\n\n    case t.INVALID_VALUE:\n      return \"INVALID_VALUE\";\n\n    case t.INVALID_OPERATION:\n      return \"INVALID_OPERATION\";\n\n    case t.INVALID_FRAMEBUFFER_OPERATION:\n      return \"INVALID_FRAMEBUFFER_OPERATION\";\n\n    case t.OUT_OF_MEMORY:\n      return \"OUT_OF_MEMORY\";\n\n    case t.CONTEXT_LOST_WEBGL:\n      return \"CONTEXT_LOST_WEBGL\";\n\n    default:\n      return \"Unknown error code \" + e;\n  }\n}\n\nfunction Gt(t, e, n) {\n  return pe(t, e, function () {\n    return t.getExtension(n);\n  }, 'Extension \"' + n + '\" not supported on this browser.');\n}\n\nfunction qt(t, e, n) {\n  var r = pe(t, e, function () {\n    return t.createShader(t.VERTEX_SHADER);\n  }, \"Unable to create vertex WebGLShader.\");\n  if (Lt(t, e, function () {\n    return t.shaderSource(r, n);\n  }), Lt(t, e, function () {\n    return t.compileShader(r);\n  }), !1 === t.getShaderParameter(r, t.COMPILE_STATUS)) throw console.log(t.getShaderInfoLog(r)), new Error(\"Failed to compile vertex shader.\");\n  return r;\n}\n\nfunction Ht(t, e, n) {\n  var r = pe(t, e, function () {\n    return t.createShader(t.FRAGMENT_SHADER);\n  }, \"Unable to create fragment WebGLShader.\");\n  if (Lt(t, e, function () {\n    return t.shaderSource(r, n);\n  }), Lt(t, e, function () {\n    return t.compileShader(r);\n  }), !1 === t.getShaderParameter(r, t.COMPILE_STATUS)) throw function (t, e) {\n    var n = Kt.exec(e);\n    if (null == n) return console.log(\"Couldn't parse line number in error: \" + e), void console.log(t);\n\n    for (var r = +n[1], o = t.split(\"\\n\"), a = o.length.toString().length + 2, i = o.map(function (t, e) {\n      return E((e + 1).toString(), a) + t;\n    }), s = 0, u = 0; u < i.length; u++) s = Math.max(i[u].length, s);\n\n    var l = i.slice(0, r - 1),\n        c = i.slice(r - 1, r),\n        h = i.slice(r);\n    console.log(l.join(\"\\n\")), console.log(e.split(\"\\n\")[0]), console.log(\"%c \" + E(c[0], s), \"border:1px solid red; background-color:#e3d2d2; color:#a61717\"), console.log(h.join(\"\\n\"));\n  }(n, t.getShaderInfoLog(r)), new Error(\"Failed to compile fragment shader.\");\n  return r;\n}\n\nvar $t,\n    jt,\n    Kt = /ERROR: [0-9]+:([0-9]+):/g;\n\nfunction Xt(t, e) {\n  return pe(t, e, function () {\n    return t.createProgram();\n  }, \"Unable to create WebGLProgram.\");\n}\n\nfunction Yt(t, e, n) {\n  if (Lt(t, e, function () {\n    return t.linkProgram(n);\n  }), !1 === t.getProgramParameter(n, t.LINK_STATUS)) throw console.log(t.getProgramInfoLog(n)), new Error(\"Failed to link vertex and fragment shaders.\");\n}\n\nfunction Qt(t, e, n) {\n  if (Lt(t, e, function () {\n    return t.validateProgram(n);\n  }), !1 === t.getProgramParameter(n, t.VALIDATE_STATUS)) throw console.log(t.getProgramInfoLog(n)), new Error(\"Shader program validation failed.\");\n}\n\nfunction Jt(t, e, n) {\n  var r = pe(t, e, function () {\n    return t.createBuffer();\n  }, \"Unable to create WebGLBuffer\");\n  return Lt(t, e, function () {\n    return t.bindBuffer(t.ARRAY_BUFFER, r);\n  }), Lt(t, e, function () {\n    return t.bufferData(t.ARRAY_BUFFER, n, t.STATIC_DRAW);\n  }), r;\n}\n\nfunction Zt(t, e, n) {\n  var r = pe(t, e, function () {\n    return t.createBuffer();\n  }, \"Unable to create WebGLBuffer\");\n  return Lt(t, e, function () {\n    return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, r);\n  }), Lt(t, e, function () {\n    return t.bufferData(t.ELEMENT_ARRAY_BUFFER, n, t.STATIC_DRAW);\n  }), r;\n}\n\nfunction te(t, e) {\n  return pe(t, e, function () {\n    return t.createTexture();\n  }, \"Unable to create WebGLTexture.\");\n}\n\nfunction ee(t, e) {\n  var n = s.getNumber(\"WEBGL_MAX_TEXTURE_SIZE\");\n\n  if (t <= 0 || e <= 0) {\n    var r = \"[\" + t + \"x\" + e + \"]\";\n    throw new Error(\"Requested texture size \" + r + \" is invalid.\");\n  }\n\n  if (t > n || e > n) {\n    r = \"[\" + t + \"x\" + e + \"]\";\n    throw new Error(\"Requested texture size \" + r + \" greater than WebGL maximum on this browser / GPU \" + (\"[\" + n + \"x\" + n + \"]\") + \".\");\n  }\n}\n\nfunction ne(t, e) {\n  return pe(t, e, function () {\n    return t.createFramebuffer();\n  }, \"Unable to create WebGLFramebuffer.\");\n}\n\nfunction re(t, e, n, r, o, a, i, s) {\n  var u = t.getAttribLocation(n, r);\n  return -1 !== u && (Lt(t, e, function () {\n    return t.bindBuffer(t.ARRAY_BUFFER, o);\n  }), Lt(t, e, function () {\n    return t.vertexAttribPointer(u, a, t.FLOAT, !1, i, s);\n  }), Lt(t, e, function () {\n    return t.enableVertexAttribArray(u);\n  }), !0);\n}\n\nfunction oe(t, e, n, r) {\n  fe(t, r), Lt(t, e, function () {\n    return t.activeTexture(t.TEXTURE0 + r);\n  }), Lt(t, e, function () {\n    return t.bindTexture(t.TEXTURE_2D, n);\n  });\n}\n\nfunction ae(t, e, n, r) {\n  return pe(t, e, function () {\n    return t.getUniformLocation(n, r);\n  }, 'uniform \"' + r + '\" not present in program.');\n}\n\nfunction ie(t, e, n) {\n  return t.getUniformLocation(e, n);\n}\n\nfunction se(t, e, n, r, o, a) {\n  Lt(t, e, function () {\n    return oe(t, e, r, a);\n  }), Lt(t, e, function () {\n    return t.uniform1i(o, a);\n  });\n}\n\nfunction ue(t, e, n, r) {\n  Lt(t, e, function () {\n    return t.bindFramebuffer(t.FRAMEBUFFER, r);\n  }), Lt(t, e, function () {\n    return t.framebufferTexture2D(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, n, 0);\n  });\n}\n\nfunction le(t, e, n) {\n  Lt(t, e, function () {\n    return t.bindFramebuffer(t.FRAMEBUFFER, n);\n  }), Lt(t, e, function () {\n    return t.framebufferTexture2D(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, null, 0);\n  });\n}\n\nfunction ce(t) {\n  var e = t.checkFramebufferStatus(t.FRAMEBUFFER);\n  if (e !== t.FRAMEBUFFER_COMPLETE) throw new Error(\"Error binding framebuffer: \" + he(t, e));\n}\n\nfunction he(t, e) {\n  switch (e) {\n    case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n      return \"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\";\n\n    case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n      return \"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\";\n\n    case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n      return \"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\";\n\n    case t.FRAMEBUFFER_UNSUPPORTED:\n      return \"FRAMEBUFFER_UNSUPPORTED\";\n\n    default:\n      return \"unknown error \" + e;\n  }\n}\n\nfunction pe(t, e, n, r) {\n  var o = Lt(t, e, function () {\n    return n();\n  });\n  if (null == o) throw new Error(r);\n  return o;\n}\n\nfunction fe(t, e) {\n  var n = t.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1,\n      r = e + t.TEXTURE0;\n  if (r < t.TEXTURE0 || r > n) throw new Error(\"textureUnit must be in \" + (\"[gl.TEXTURE0, gl.TEXTURE\" + n + \"]\") + \".\");\n}\n\nfunction de(t, e) {\n  return void 0 === e && (e = 2), y(t.slice(0, t.length - e));\n}\n\nfunction ve(t) {\n  if (0 === t.length) throw Error(\"Cannot get rows and columns of an empty shape array.\");\n  return [t.length > 1 ? t[t.length - 2] : 1, t[t.length - 1]];\n}\n\nfunction me(t) {\n  var e = [1, 1, 1];\n  return 0 === t.length || 1 === t.length && 1 === t[0] || (e = [de(t)].concat(ve(t))), e;\n}\n\nfunction ge(t, e) {\n  var n;\n  void 0 === e && (e = !1);\n  var r = s.getNumber(\"WEBGL_MAX_TEXTURE_SIZE\");\n\n  if (e && (r *= 2, 1 === (t = t.map(function (e, n) {\n    return n >= t.length - 2 ? p(t[n]) : t[n];\n  })).length && (t = [2, t[0]])), 2 !== t.length) {\n    var o = N(t);\n    t = o.newShape;\n  }\n\n  var a = y(t);\n  if (t.length <= 1 && a <= r) return [1, a];\n  if (2 === t.length && t[0] <= r && t[1] <= r) return t;\n  if (3 === t.length && t[0] * t[1] <= r && t[2] <= r) return [t[0] * t[1], t[2]];\n  if (3 === t.length && t[0] <= r && t[1] * t[2] <= r) return [t[0], t[1] * t[2]];\n  if (4 === t.length && t[0] * t[1] * t[2] <= r && t[3] <= r) return [t[0] * t[1] * t[2], t[3]];\n  if (4 === t.length && t[0] <= r && t[1] * t[2] * t[3] <= r) return [t[0], t[1] * t[2] * t[3]];\n\n  if (e) {\n    var i = de(t),\n        u = 2,\n        l = 2;\n    return t.length && (u = (n = ve(t))[0], l = n[1]), C(a = i * (u / 2) * (l / 2)).map(function (t) {\n      return 2 * t;\n    });\n  }\n\n  return C(a);\n}\n\nfunction ye(t) {\n  return t % 2 == 0;\n}\n\nfunction xe(t, e) {\n  if (x(t = t.slice(-2), e = e.slice(-2))) return !0;\n  if (!t.length || !e.length) return !0;\n  if (0 === t[0] || 0 === t[1] || 0 === e[0] || 0 === e[1]) return !0;\n\n  if (t.length !== e.length) {\n    var n = t.slice(-1)[0],\n        r = e.slice(-1)[0];\n    if (n === r) return !0;\n    if (ye(n) && ye(r) && (1 === t[0] || 1 === e[0])) return !0;\n  }\n\n  return t[1] === e[1] && ye(t[0]) && ye(e[0]);\n}\n\nfunction be(t) {\n  if (null == $t) {\n    var e = Bt(t);\n    $t = e.getParameter(e.MAX_TEXTURE_SIZE);\n  }\n\n  return $t;\n}\n\nfunction we(t) {\n  if (null == jt) {\n    var e = Bt(t);\n    jt = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS);\n  }\n\n  return Math.min(16, jt);\n}\n\nfunction Ce(t) {\n  if (0 === t) return 0;\n  var e = Bt(t);\n  return Ee(e, \"EXT_disjoint_timer_query_webgl2\") && 2 === t ? 2 : Ee(e, \"EXT_disjoint_timer_query\") ? 1 : 0;\n}\n\nfunction Ee(t, e) {\n  return null != t.getExtension(e);\n}\n\nfunction Re(t) {\n  try {\n    if (null != Bt(t)) return !0;\n  } catch (t) {\n    return !1;\n  }\n\n  return !1;\n}\n\nfunction Ie(t) {\n  if (0 === t) return !1;\n  var e = Bt(t);\n\n  if (1 === t) {\n    if (!Ee(e, \"OES_texture_float\")) return !1;\n  } else if (!Ee(e, \"EXT_color_buffer_float\")) return !1;\n\n  return Ne(e, t);\n}\n\nfunction Se(t) {\n  if (0 === t) return !1;\n  var e = Bt(t);\n\n  if (1 === t) {\n    if (!Ee(e, \"OES_texture_float\")) return !1;\n    if (!Ee(e, \"WEBGL_color_buffer_float\")) return !1;\n  } else if (!Ee(e, \"EXT_color_buffer_float\")) return !1;\n\n  return Ne(e, t);\n}\n\nfunction Ne(t, e) {\n  var n = t.createFramebuffer(),\n      r = t.createTexture();\n  t.bindTexture(t.TEXTURE_2D, r);\n  var o = 2 === e ? t.RGBA32F : t.RGBA;\n  t.texImage2D(t.TEXTURE_2D, 0, o, 1, 1, 0, t.RGBA, t.FLOAT, null), t.bindFramebuffer(t.FRAMEBUFFER, n), t.framebufferTexture2D(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, r, 0);\n  var a = t.checkFramebufferStatus(t.FRAMEBUFFER) === t.FRAMEBUFFER_COMPLETE;\n  return t.bindTexture(t.TEXTURE_2D, null), t.bindFramebuffer(t.FRAMEBUFFER, null), t.deleteTexture(r), t.deleteFramebuffer(n), a;\n}\n\nfunction ke(t) {\n  return 2 === t && null != Bt(t).fenceSync;\n}\n\nvar Ae = Object.freeze({\n  callAndCheck: Lt,\n  canBeRepresented: zt,\n  getWebGLErrorMessage: Vt,\n  getExtensionOrThrow: Gt,\n  createVertexShader: qt,\n  createFragmentShader: Ht,\n  createProgram: Xt,\n  linkProgram: Yt,\n  validateProgram: Qt,\n  createStaticVertexBuffer: Jt,\n  createStaticIndexBuffer: Zt,\n  getNumChannels: function () {\n    return 2 === s.getNumber(\"WEBGL_VERSION\") ? 1 : 4;\n  },\n  createTexture: te,\n  validateTextureSize: ee,\n  createFramebuffer: ne,\n  bindVertexBufferToProgramAttribute: re,\n  bindTextureUnit: oe,\n  unbindTextureUnit: function (t, e, n) {\n    fe(t, n), Lt(t, e, function () {\n      return t.activeTexture(t.TEXTURE0 + n);\n    }), Lt(t, e, function () {\n      return t.bindTexture(t.TEXTURE_2D, null);\n    });\n  },\n  getProgramUniformLocationOrThrow: ae,\n  getProgramUniformLocation: ie,\n  bindTextureToProgramUniformSampler: se,\n  bindCanvasToFramebuffer: function (t, e) {\n    Lt(t, e, function () {\n      return t.bindFramebuffer(t.FRAMEBUFFER, null);\n    }), Lt(t, e, function () {\n      return t.viewport(0, 0, t.canvas.width, t.canvas.height);\n    }), Lt(t, e, function () {\n      return t.scissor(0, 0, t.canvas.width, t.canvas.height);\n    });\n  },\n  bindColorTextureToFramebuffer: ue,\n  unbindColorTextureFromFramebuffer: le,\n  validateFramebuffer: ce,\n  getFramebufferErrorMessage: he,\n  getBatchDim: de,\n  getRowsCols: ve,\n  getShapeAs3D: me,\n  getTextureShapeFromLogicalShape: ge,\n  isReshapeFree: xe,\n\n  get MAX_TEXTURE_SIZE() {\n    return $t;\n  },\n\n  get MAX_TEXTURES_IN_SHADER() {\n    return jt;\n  },\n\n  getWebGLMaxTextureSize: be,\n  getMaxTexturesInShader: we,\n  getWebGLDisjointQueryTimerVersion: Ce,\n  isWebGLVersionEnabled: Re,\n  isRenderToFloatTextureEnabled: Ie,\n  isDownloadFloatTextureEnabled: Se,\n  isWebGLFenceEnabled: ke\n});\n\nfunction Te() {\n  s.set(\"PROD\", !0);\n}\n\nfunction De() {\n  s.set(\"DEBUG\", !0);\n}\n\nfunction _e() {\n  s.set(\"DEPRECATION_WARNINGS_ENABLED\", !1), console.warn(\"TensorFlow.js deprecation warnings have been disabled.\");\n}\n\nfunction Oe(t) {\n  s.getBool(\"DEPRECATION_WARNINGS_ENABLED\") && console.warn(t + \" You can disable deprecation warnings with tf.disableDeprecationWarnings().\");\n}\n\nfunction Me() {\n  Dt.disposeVariables();\n}\n\nfunction Fe() {\n  return Dt.memory();\n}\n\nfunction Be(t) {\n  return Dt.profile(t);\n}\n\nfunction Pe(t, e) {\n  return Dt.tidy(t, e);\n}\n\nfunction Le(t) {\n  St(t).forEach(function (t) {\n    return t.dispose();\n  });\n}\n\nfunction We(t) {\n  return Dt.keep(t);\n}\n\nfunction Ue(t) {\n  return Dt.time(t);\n}\n\nfunction ze(t) {\n  return Dt.setBackend(t);\n}\n\nfunction Ve() {\n  return Dt.ready();\n}\n\nfunction Ge() {\n  return Dt.backendName;\n}\n\nfunction qe(t) {\n  Dt.removeBackend(t);\n}\n\nfunction He(t) {\n  return Dt.findBackend(t);\n}\n\nfunction $e(t) {\n  return Dt.findBackendFactory(t);\n}\n\nfunction je(t, e, n) {\n  return void 0 === n && (n = 1), Dt.registerBackend(t, e, n);\n}\n\nfunction Ke() {\n  return Dt.backend;\n}\n\nfunction Xe(t, e) {\n  s.setPlatform(t, e);\n}\n\nfunction Ye() {\n  for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n\n  s.getBool(\"IS_TEST\") || console.warn.apply(console, t);\n}\n\nfunction Qe(t, e) {\n  var n = t;\n  if (M(t)) return \"string\" === e ? [] : [t.length];\n  if (!Array.isArray(t)) return [];\n\n  for (var r = []; Array.isArray(n) || M(n) && \"string\" !== e;) r.push(n.length), n = n[0];\n\n  return Array.isArray(t) && s.getBool(\"TENSORLIKE_CHECK_SHAPE_CONSISTENCY\") && function t(e, n, r) {\n    r = r || [];\n    if (!Array.isArray(e) && !M(e)) return void d(0 === n.length, function () {\n      return \"Element arr[\" + r.join(\"][\") + \"] is a primitive, but should be an array/TypedArray of \" + n[0] + \" elements\";\n    });\n    d(n.length > 0, function () {\n      return \"Element arr[\" + r.join(\"][\") + \"] should be a primitive, but is an array of \" + e.length + \" elements\";\n    });\n    d(e.length === n[0], function () {\n      return \"Element arr[\" + r.join(\"][\") + \"] should have \" + n[0] + \" elements, but has \" + e.length + \" elements\";\n    });\n    var o = n.slice(1);\n\n    for (var a = 0; a < e.length; ++a) t(e[a], o, r.concat(a));\n  }(t, r, []), r;\n}\n\nfunction Je(t, e, n, r) {\n  if (null != t && (\"numeric\" !== t && t !== e || \"numeric\" === t && \"string\" === e)) throw new Error(\"Argument '\" + n + \"' passed to '\" + r + \"' must be \" + t + \" tensor, but got \" + e + \" tensor\");\n}\n\nfunction Ze(t, e, n, r) {\n  if (void 0 === r && (r = \"numeric\"), t instanceof ft) return Je(r, t.dtype, e, n), t;\n  var o = U(t);\n\n  if (\"string\" !== o && [\"bool\", \"int32\", \"float32\"].indexOf(r) >= 0 && (o = r), Je(r, o, e, n), null == t || !M(t) && !Array.isArray(t) && \"number\" != typeof t && \"boolean\" != typeof t && \"string\" != typeof t) {\n    var a = null == t ? \"null\" : t.constructor.name;\n    throw new Error(\"Argument '\" + e + \"' passed to '\" + n + \"' must be a Tensor or TensorLike, but got '\" + a + \"'\");\n  }\n\n  var i = Qe(t, o);\n  M(t) || Array.isArray(t) || (t = [t]);\n  var u = \"string\" !== o ? q(t, o, s.getBool(\"DEBUG\")) : g(t, [], !0);\n  return ft.make(i, {\n    values: u\n  }, o);\n}\n\nfunction tn(t, e, n, r) {\n  if (void 0 === r && (r = \"numeric\"), !Array.isArray(t)) throw new Error(\"Argument \" + e + \" passed to \" + n + \" must be a `Tensor[]` or `TensorLike[]`\");\n  return t.map(function (t, r) {\n    return Ze(t, e + \"[\" + r + \"]\", n);\n  }, r);\n}\n\nfunction en(t, e) {\n  for (var n = 0; n < t.length; ++n) if (t[t.length - n - 1] !== e - 1 - n) return !1;\n\n  return !0;\n}\n\nfunction nn(t, e, n) {\n  for (var r = t.length + e.length, o = [], a = 0, i = 0, s = 0; s < r; s++) -1 === n.indexOf(s) ? o.push(t[a++]) : o.push(e[i++]);\n\n  return o;\n}\n\nfunction rn(t, e) {\n  for (var n = [], r = t.length, o = 0; o < r; o++) -1 === e.indexOf(o) && n.push(t[o]);\n\n  return [n, e.map(function (e) {\n    return t[e];\n  })];\n}\n\nfunction on(t, e) {\n  return nn(t, e.map(function (t) {\n    return 1;\n  }), e);\n}\n\nfunction an(t, e, n) {\n  d(en(e, n), function () {\n    return t + \" supports only inner-most axes for now. Got axes \" + e + \" and rank-\" + n + \" input.\";\n  });\n}\n\nfunction sn(t, e) {\n  if (en(t, e)) return null;\n\n  for (var n = [], r = 0; r < e; ++r) -1 === t.indexOf(r) && n.push(r);\n\n  return t.forEach(function (t) {\n    return n.push(t);\n  }), n;\n}\n\nfunction un(t) {\n  return t.map(function (t, e) {\n    return [e, t];\n  }).sort(function (t, e) {\n    return t[1] - e[1];\n  }).map(function (t) {\n    return t[0];\n  });\n}\n\nfunction ln(t, e) {\n  for (var n = [], r = e - t; r < e; ++r) n.push(r);\n\n  return n;\n}\n\nfunction cn(t, e) {\n  var n = t[0].length;\n  t.forEach(function (t, e) {\n    d(t.length === n, function () {\n      return \"Error in concat\" + n + \"D: rank of tensors[\" + e + \"] must be the same as the rank of the rest (\" + n + \")\";\n    });\n  }), d(e >= 0 && e < n, function () {\n    return \"Error in concat\" + n + \"D: axis must be between 0 and \" + (n - 1) + \".\";\n  });\n  var r = t[0];\n  t.forEach(function (t, o) {\n    for (var a = 0; a < n; a++) d(a === e || t[a] === r[a], function () {\n      return \"Error in concat\" + n + \"D: Shape of tensors[\" + o + \"] (\" + t + \") does not match the shape of the rest (\" + r + \") along the non-concatenated axis \" + o + \".\";\n    });\n  });\n}\n\nfunction hn(t, e) {\n  for (var n = t[0].slice(), r = 1; r < t.length; r++) n[e] += t[r][e];\n\n  return n;\n}\n\nfunction pn(t) {\n  var e = Object.keys(t);\n  if (1 !== e.length) throw new Error(\"Please provide an object with a single key (operation name) mapping to a function. Got an object with \" + e.length + \" keys.\");\n  var n = e[0],\n      r = t[n];\n  n.endsWith(\"_\") && (n = n.substring(0, n.length - 1));\n\n  var o = function () {\n    for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n\n    Dt.startScope(n);\n\n    try {\n      var o = r.apply(void 0, t);\n      return o instanceof Promise && console.error(\"Cannot return a Promise inside of tidy.\"), Dt.endScope(o), o;\n    } catch (t) {\n      throw Dt.endScope(null), t;\n    }\n  };\n\n  return Object.defineProperty(o, \"name\", {\n    value: n,\n    configurable: !0\n  }), o;\n}\n\ns.registerFlag(\"HAS_WEBGL\", function () {\n  return s.getNumber(\"WEBGL_VERSION\") > 0;\n}), s.registerFlag(\"WEBGL_VERSION\", function () {\n  return Re(2) ? 2 : Re(1) ? 1 : 0;\n}), s.registerFlag(\"WEBGL_BUFFER_SUPPORTED\", function () {\n  return 2 === s.get(\"WEBGL_VERSION\");\n}), s.registerFlag(\"WEBGL_CPU_FORWARD\", function () {\n  return !0;\n}), s.registerFlag(\"WEBGL_PACK\", function () {\n  return s.getBool(\"HAS_WEBGL\");\n}), s.registerFlag(\"WEBGL_PACK_NORMALIZATION\", function () {\n  return s.getBool(\"WEBGL_PACK\");\n}), s.registerFlag(\"WEBGL_PACK_CLIP\", function () {\n  return s.getBool(\"WEBGL_PACK\");\n}), s.registerFlag(\"WEBGL_PACK_DEPTHWISECONV\", function () {\n  return !1;\n}), s.registerFlag(\"WEBGL_PACK_BINARY_OPERATIONS\", function () {\n  return s.getBool(\"WEBGL_PACK\");\n}), s.registerFlag(\"WEBGL_PACK_ARRAY_OPERATIONS\", function () {\n  return s.getBool(\"WEBGL_PACK\");\n}), s.registerFlag(\"WEBGL_PACK_IMAGE_OPERATIONS\", function () {\n  return s.getBool(\"WEBGL_PACK\");\n}), s.registerFlag(\"WEBGL_PACK_REDUCE\", function () {\n  return s.getBool(\"WEBGL_PACK\");\n}), s.registerFlag(\"WEBGL_LAZILY_UNPACK\", function () {\n  return s.getBool(\"WEBGL_PACK\");\n}), s.registerFlag(\"WEBGL_CONV_IM2COL\", function () {\n  return s.getBool(\"WEBGL_PACK\");\n}), s.registerFlag(\"WEBGL_MAX_TEXTURE_SIZE\", function () {\n  return be(s.getNumber(\"WEBGL_VERSION\"));\n}), s.registerFlag(\"WEBGL_MAX_TEXTURES_IN_SHADER\", function () {\n  return we(s.getNumber(\"WEBGL_VERSION\"));\n}), s.registerFlag(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\", function () {\n  var t = s.getNumber(\"WEBGL_VERSION\");\n  return 0 === t ? 0 : Ce(t);\n}), s.registerFlag(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE\", function () {\n  return s.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\") > 0 && (t = navigator.userAgent || navigator.vendor || window.opera, !(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(t.substr(0, 4))));\n  var t;\n}), s.registerFlag(\"WEBGL_RENDER_FLOAT32_ENABLED\", function () {\n  return Ie(s.getNumber(\"WEBGL_VERSION\"));\n}), s.registerFlag(\"WEBGL_DOWNLOAD_FLOAT_ENABLED\", function () {\n  return Se(s.getNumber(\"WEBGL_VERSION\"));\n}), s.registerFlag(\"WEBGL_FENCE_API_ENABLED\", function () {\n  return ke(s.getNumber(\"WEBGL_VERSION\"));\n}), s.registerFlag(\"WEBGL_SIZE_UPLOAD_UNIFORM\", function () {\n  return s.getBool(\"WEBGL_RENDER_FLOAT32_ENABLED\") ? 4 : 0;\n}), pt = Oe;\nvar fn = pn({\n  complex_: function (t, e) {\n    var n = Ze(t, \"real\", \"complex\"),\n        r = Ze(e, \"imag\", \"complex\");\n    return v(n.shape, r.shape, \"real and imag shapes, \" + n.shape + \" and \" + r.shape + \", must match in call to tf.complex().\"), Dt.runKernel(function (t) {\n      return t.complex(n, r);\n    }, {\n      $real: n,\n      $imag: r\n    });\n  }\n}),\n    dn = pn({\n  real_: function (t) {\n    var e = Ze(t, \"input\", \"real\");\n    return Dt.runKernel(function (t) {\n      return t.real(e);\n    }, {\n      $input: e\n    });\n  }\n}),\n    vn = pn({\n  imag_: function (t) {\n    var e = Ze(t, \"input\", \"imag\");\n    return Dt.runKernel(function (t) {\n      return t.imag(e);\n    }, {\n      $input: e\n    });\n  }\n});\n\nfunction mn(t, e, n) {\n  return gn(t, e, Qe(t, n), n);\n}\n\nfunction gn(t, e, n, r) {\n  if (null == r && (r = U(t)), \"complex64\" === r) throw new Error(\"Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).\");\n  if (!M(t) && !Array.isArray(t) && \"number\" != typeof t && \"boolean\" != typeof t && \"string\" != typeof t) throw new Error(\"values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray\");\n\n  if (null != e) {\n    X(e);\n    var o = y(e),\n        a = y(n);\n    d(o === a, function () {\n      return \"Based on the provided shape, [\" + e + \"], the tensor should have \" + o + \" values but has \" + a;\n    });\n\n    for (var i = 0; i < n.length; ++i) {\n      var u = n[i],\n          l = i !== n.length - 1 || u !== y(e.slice(i));\n      d(n[i] === e[i] || !l, function () {\n        return \"Error creating a new Tensor. Inferred shape (\" + n + \") does not match the provided shape (\" + e + \"). \";\n      });\n    }\n  }\n\n  return M(t) || Array.isArray(t) || (t = [t]), e = e || n, t = \"string\" !== r ? q(t, r, s.getBool(\"DEBUG\")) : g(t, [], !0), ft.make(e, {\n    values: t\n  }, r);\n}\n\nfunction yn(t, e) {\n  if ((M(t) && \"string\" !== e || Array.isArray(t)) && \"complex64\" !== e) throw new Error(\"Error creating a new Scalar: value must be a primitive (number|boolean|string)\");\n  if (\"string\" === e && M(t) && !(t instanceof Uint8Array)) throw new Error(\"When making a scalar from encoded string, the value must be `Uint8Array`.\");\n  return gn(t, [], [], e);\n}\n\nfunction xn(t, e) {\n  m(t);\n  var n = Qe(t, e);\n  if (1 !== n.length) throw new Error(\"tensor1d() requires values to be a flat/TypedArray\");\n  return gn(t, null, n, e);\n}\n\nfunction bn(t, e, n) {\n  if (m(t), null != e && 2 !== e.length) throw new Error(\"tensor2d() requires shape to have two numbers\");\n  var r = Qe(t, n);\n  if (2 !== r.length && 1 !== r.length) throw new Error(\"tensor2d() requires values to be number[][] or flat/TypedArray\");\n  if (1 === r.length && null == e) throw new Error(\"tensor2d() requires shape to be provided when `values` are a flat/TypedArray\");\n  return gn(t, e, r, n);\n}\n\nfunction wn(t, e, n) {\n  if (m(t), null != e && 3 !== e.length) throw new Error(\"tensor3d() requires shape to have three numbers\");\n  var r = Qe(t, n);\n  if (3 !== r.length && 1 !== r.length) throw new Error(\"tensor3d() requires values to be number[][][] or flat/TypedArray\");\n  if (1 === r.length && null == e) throw new Error(\"tensor3d() requires shape to be provided when `values` are a flat array\");\n  return gn(t, e, r, n);\n}\n\nfunction Cn(t, e, n) {\n  if (m(t), null != e && 4 !== e.length) throw new Error(\"tensor4d() requires shape to have four numbers\");\n  var r = Qe(t, n);\n  if (4 !== r.length && 1 !== r.length) throw new Error(\"tensor4d() requires values to be number[][][][] or flat/TypedArray\");\n  if (1 === r.length && null == e) throw new Error(\"tensor4d() requires shape to be provided when `values` are a flat array\");\n  return gn(t, e, r, n);\n}\n\nfunction En(t, e, n) {\n  if (m(t), null != e && 5 !== e.length) throw new Error(\"tensor5d() requires shape to have five numbers\");\n  var r = Qe(t, n);\n  if (5 !== r.length && 1 !== r.length) throw new Error(\"tensor5d() requires values to be number[][][][][] or flat/TypedArray\");\n  if (1 === r.length && null == e) throw new Error(\"tensor5d() requires shape to be provided when `values` are a flat array\");\n  return gn(t, e, r, n);\n}\n\nfunction Rn(t, e, n) {\n  if (m(t), null != e && 6 !== e.length) throw new Error(\"tensor6d() requires shape to have six numbers\");\n  var r = Qe(t, n);\n  if (6 !== r.length && 1 !== r.length) throw new Error(\"tensor6d() requires values to be number[][][][][][] or flat/TypedArray\");\n  if (1 === r.length && null == e) throw new Error(\"tensor6d() requires shape to be provided when `values` are a flat array\");\n  return gn(t, e = e || r, r, n);\n}\n\nfunction In(t, e) {\n  if (void 0 === e && (e = \"float32\"), \"complex64\" === e) {\n    var n = In(t, \"float32\"),\n        r = Sn(t, \"float32\");\n    return fn(n, r);\n  }\n\n  var o = $(y(t), e);\n  return ft.make(t, {\n    values: o\n  }, e);\n}\n\nfunction Sn(t, e) {\n  if (void 0 === e && (e = \"float32\"), \"complex64\" === e) {\n    var n = Sn(t, \"float32\"),\n        r = Sn(t, \"float32\");\n    return fn(n, r);\n  }\n\n  var o = j(y(t), e);\n  return ft.make(t, {\n    values: o\n  }, e);\n}\n\nfunction Nn(t, e, n) {\n  return Dt.runKernel(function (r) {\n    return r.fill(t, e, n);\n  }, {});\n}\n\nfunction kn(t, e, n) {\n  if (n <= 0) throw new Error(\"The number of values should be positive.\");\n  return Dt.runKernel(function (r) {\n    return r.linspace(t, e, n);\n  }, {});\n}\n\nfunction An(t, e, n, r) {\n  if (void 0 === n && (n = 1), void 0 === r && (r = \"float32\"), 0 === n) throw new Error(\"Cannot have a step of zero\");\n  if (t === e || t < e && n < 0 || e < t && n > 1) return Sn([0], r);\n  var o = j(Math.abs(Math.ceil((e - t) / n)), r);\n  e < t && 1 === n && (n = -1), o[0] = t;\n\n  for (var a = 1; a < o.length; a++) o[a] = o[a - 1] + n;\n\n  return xn(o, r);\n}\n\nvar Tn = pn({\n  onesLike_: function (t) {\n    var e = Ze(t, \"x\", \"onesLike\");\n\n    if (\"complex64\" === e.dtype) {\n      var n = Tn(dn(e)),\n          r = Dn(vn(e));\n      return fn(n, r);\n    }\n\n    return Dt.runKernel(function (t) {\n      return t.onesLike(e);\n    }, {\n      $x: e\n    }, function (t, e) {\n      return {\n        $x: function () {\n          return Dn(t);\n        }\n      };\n    });\n  }\n}),\n    Dn = pn({\n  zerosLike_: function (t) {\n    var e = Ze(t, \"x\", \"zerosLike\");\n    return Dt.runKernel(function (t) {\n      return t.zerosLike(e);\n    }, {\n      $x: e\n    }, function (t, e) {\n      return {\n        $x: function () {\n          return Dn(t);\n        }\n      };\n    });\n  }\n});\n\nvar _n = pn({\n  concat_: function (t, e) {\n    void 0 === e && (e = 0), d(t.length >= 1, function () {\n      return \"Pass at least one tensor to concat\";\n    });\n    var n = tn(t, \"tensors\", \"concat\");\n    e = S(e, n[0].shape)[0];\n    var r = hn(n.map(function (t) {\n      return t.shape;\n    }), e);\n    if (0 === y(r)) return mn([], r);\n    if (1 === (n = n.filter(function (t) {\n      return t.size > 0;\n    })).length) return n[0];\n    var o = n.map(function (t) {\n      return t.shape;\n    });\n    cn(o, e);\n    var a = n;\n    return Dt.runKernel(function (t) {\n      return t.concat(n, e);\n    }, a, function (t) {\n      var n = o.map(function (t) {\n        return t[e];\n      });\n      return Pn(t, n, e).map(function (t) {\n        return function () {\n          return t;\n        };\n      });\n    });\n  }\n}),\n    On = pn({\n  concat1d_: function (t) {\n    return _n(t, 0);\n  }\n}),\n    Mn = pn({\n  concat2d_: function (t, e) {\n    return _n(t, e);\n  }\n}),\n    Fn = pn({\n  concat3d_: function (t, e) {\n    return _n(t, e);\n  }\n}),\n    Bn = pn({\n  concat4d_: function (t, e) {\n    return _n(t, e);\n  }\n}),\n    Pn = pn({\n  split_: function (t, e, n) {\n    void 0 === n && (n = 0);\n    var r,\n        o = Ze(t, \"x\", \"split\");\n    return n = S(n, o.shape)[0], \"number\" == typeof e ? (d(o.shape[n] % e == 0, function () {\n      return \"Number of splits must evenly divide the axis.\";\n    }), r = new Array(e).fill(o.shape[n] / e)) : (d(o.shape[n] === e.reduce(function (t, e) {\n      return t + e;\n    }), function () {\n      return \"The sum of sizes must match the size of the axis dimension.\";\n    }), r = e), Dt.runKernel(function (t) {\n      return t.split(o, r, n);\n    }, {\n      $x: o\n    }, function (t) {\n      return {\n        $x: function () {\n          return _n(t, n);\n        }\n      };\n    });\n  }\n});\n\n\"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self && self;\n\nfunction Ln(t, e) {\n  return t(e = {\n    exports: {}\n  }, e.exports), e.exports;\n}\n\nvar Wn = Ln(function (t) {\n  !function (t, e, n) {\n    function r(t) {\n      var e,\n          n = this,\n          r = (e = 4022871197, function (t) {\n        t = t.toString();\n\n        for (var n = 0; n < t.length; n++) {\n          var r = .02519603282416938 * (e += t.charCodeAt(n));\n          r -= e = r >>> 0, e = (r *= e) >>> 0, e += 4294967296 * (r -= e);\n        }\n\n        return 2.3283064365386963e-10 * (e >>> 0);\n      });\n      n.next = function () {\n        var t = 2091639 * n.s0 + 2.3283064365386963e-10 * n.c;\n        return n.s0 = n.s1, n.s1 = n.s2, n.s2 = t - (n.c = 0 | t);\n      }, n.c = 1, n.s0 = r(\" \"), n.s1 = r(\" \"), n.s2 = r(\" \"), n.s0 -= r(t), n.s0 < 0 && (n.s0 += 1), n.s1 -= r(t), n.s1 < 0 && (n.s1 += 1), n.s2 -= r(t), n.s2 < 0 && (n.s2 += 1), r = null;\n    }\n\n    function o(t, e) {\n      return e.c = t.c, e.s0 = t.s0, e.s1 = t.s1, e.s2 = t.s2, e;\n    }\n\n    function a(t, e) {\n      var n = new r(t),\n          a = e && e.state,\n          i = n.next;\n      return i.int32 = function () {\n        return 4294967296 * n.next() | 0;\n      }, i.double = function () {\n        return i() + 1.1102230246251565e-16 * (2097152 * i() | 0);\n      }, i.quick = i, a && (\"object\" == typeof a && o(a, n), i.state = function () {\n        return o(n, {});\n      }), i;\n    }\n\n    e && e.exports ? e.exports = a : n && n.amd ? n(function () {\n      return a;\n    }) : this.alea = a;\n  }(0, t, !1);\n}),\n    Un = Ln(function (t) {\n  !function (t, e, n) {\n    function r(t) {\n      var e = this,\n          n = \"\";\n      e.x = 0, e.y = 0, e.z = 0, e.w = 0, e.next = function () {\n        var t = e.x ^ e.x << 11;\n        return e.x = e.y, e.y = e.z, e.z = e.w, e.w ^= e.w >>> 19 ^ t ^ t >>> 8;\n      }, t === (0 | t) ? e.x = t : n += t;\n\n      for (var r = 0; r < n.length + 64; r++) e.x ^= 0 | n.charCodeAt(r), e.next();\n    }\n\n    function o(t, e) {\n      return e.x = t.x, e.y = t.y, e.z = t.z, e.w = t.w, e;\n    }\n\n    function a(t, e) {\n      var n = new r(t),\n          a = e && e.state,\n          i = function () {\n        return (n.next() >>> 0) / 4294967296;\n      };\n\n      return i.double = function () {\n        do {\n          var t = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21);\n        } while (0 === t);\n\n        return t;\n      }, i.int32 = n.next, i.quick = i, a && (\"object\" == typeof a && o(a, n), i.state = function () {\n        return o(n, {});\n      }), i;\n    }\n\n    e && e.exports ? e.exports = a : n && n.amd ? n(function () {\n      return a;\n    }) : this.xor128 = a;\n  }(0, t, !1);\n}),\n    zn = Ln(function (t) {\n  !function (t, e, n) {\n    function r(t) {\n      var e = this,\n          n = \"\";\n      e.next = function () {\n        var t = e.x ^ e.x >>> 2;\n        return e.x = e.y, e.y = e.z, e.z = e.w, e.w = e.v, (e.d = e.d + 362437 | 0) + (e.v = e.v ^ e.v << 4 ^ t ^ t << 1) | 0;\n      }, e.x = 0, e.y = 0, e.z = 0, e.w = 0, e.v = 0, t === (0 | t) ? e.x = t : n += t;\n\n      for (var r = 0; r < n.length + 64; r++) e.x ^= 0 | n.charCodeAt(r), r == n.length && (e.d = e.x << 10 ^ e.x >>> 4), e.next();\n    }\n\n    function o(t, e) {\n      return e.x = t.x, e.y = t.y, e.z = t.z, e.w = t.w, e.v = t.v, e.d = t.d, e;\n    }\n\n    function a(t, e) {\n      var n = new r(t),\n          a = e && e.state,\n          i = function () {\n        return (n.next() >>> 0) / 4294967296;\n      };\n\n      return i.double = function () {\n        do {\n          var t = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21);\n        } while (0 === t);\n\n        return t;\n      }, i.int32 = n.next, i.quick = i, a && (\"object\" == typeof a && o(a, n), i.state = function () {\n        return o(n, {});\n      }), i;\n    }\n\n    e && e.exports ? e.exports = a : n && n.amd ? n(function () {\n      return a;\n    }) : this.xorwow = a;\n  }(0, t, !1);\n}),\n    Vn = Ln(function (t) {\n  !function (t, e, n) {\n    function r(t) {\n      var e = this;\n      e.next = function () {\n        var t,\n            n,\n            r = e.x,\n            o = e.i;\n        return t = r[o], n = (t ^= t >>> 7) ^ t << 24, n ^= (t = r[o + 1 & 7]) ^ t >>> 10, n ^= (t = r[o + 3 & 7]) ^ t >>> 3, n ^= (t = r[o + 4 & 7]) ^ t << 7, t = r[o + 7 & 7], n ^= (t ^= t << 13) ^ t << 9, r[o] = n, e.i = o + 1 & 7, n;\n      }, function (t, e) {\n        var n,\n            r = [];\n        if (e === (0 | e)) r[0] = e;else for (e = \"\" + e, n = 0; n < e.length; ++n) r[7 & n] = r[7 & n] << 15 ^ e.charCodeAt(n) + r[n + 1 & 7] << 13;\n\n        for (; r.length < 8;) r.push(0);\n\n        for (n = 0; n < 8 && 0 === r[n]; ++n);\n\n        for (8 == n ? r[7] = -1 : r[n], t.x = r, t.i = 0, n = 256; n > 0; --n) t.next();\n      }(e, t);\n    }\n\n    function o(t, e) {\n      return e.x = t.x.slice(), e.i = t.i, e;\n    }\n\n    function a(t, e) {\n      null == t && (t = +new Date());\n\n      var n = new r(t),\n          a = e && e.state,\n          i = function () {\n        return (n.next() >>> 0) / 4294967296;\n      };\n\n      return i.double = function () {\n        do {\n          var t = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21);\n        } while (0 === t);\n\n        return t;\n      }, i.int32 = n.next, i.quick = i, a && (a.x && o(a, n), i.state = function () {\n        return o(n, {});\n      }), i;\n    }\n\n    e && e.exports ? e.exports = a : n && n.amd ? n(function () {\n      return a;\n    }) : this.xorshift7 = a;\n  }(0, t, !1);\n}),\n    Gn = Ln(function (t) {\n  !function (t, e, n) {\n    function r(t) {\n      var e = this;\n      e.next = function () {\n        var t,\n            n,\n            r = e.w,\n            o = e.X,\n            a = e.i;\n        return e.w = r = r + 1640531527 | 0, n = o[a + 34 & 127], t = o[a = a + 1 & 127], n ^= n << 13, t ^= t << 17, n ^= n >>> 15, t ^= t >>> 12, n = o[a] = n ^ t, e.i = a, n + (r ^ r >>> 16) | 0;\n      }, function (t, e) {\n        var n,\n            r,\n            o,\n            a,\n            i,\n            s = [],\n            u = 128;\n\n        for (e === (0 | e) ? (r = e, e = null) : (e += \"\\0\", r = 0, u = Math.max(u, e.length)), o = 0, a = -32; a < u; ++a) e && (r ^= e.charCodeAt((a + 32) % e.length)), 0 === a && (i = r), r ^= r << 10, r ^= r >>> 15, r ^= r << 4, r ^= r >>> 13, a >= 0 && (i = i + 1640531527 | 0, o = 0 == (n = s[127 & a] ^= r + i) ? o + 1 : 0);\n\n        for (o >= 128 && (s[127 & (e && e.length || 0)] = -1), o = 127, a = 512; a > 0; --a) r = s[o + 34 & 127], n = s[o = o + 1 & 127], r ^= r << 13, n ^= n << 17, r ^= r >>> 15, n ^= n >>> 12, s[o] = r ^ n;\n\n        t.w = i, t.X = s, t.i = o;\n      }(e, t);\n    }\n\n    function o(t, e) {\n      return e.i = t.i, e.w = t.w, e.X = t.X.slice(), e;\n    }\n\n    function a(t, e) {\n      null == t && (t = +new Date());\n\n      var n = new r(t),\n          a = e && e.state,\n          i = function () {\n        return (n.next() >>> 0) / 4294967296;\n      };\n\n      return i.double = function () {\n        do {\n          var t = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21);\n        } while (0 === t);\n\n        return t;\n      }, i.int32 = n.next, i.quick = i, a && (a.X && o(a, n), i.state = function () {\n        return o(n, {});\n      }), i;\n    }\n\n    e && e.exports ? e.exports = a : n && n.amd ? n(function () {\n      return a;\n    }) : this.xor4096 = a;\n  }(0, t, !1);\n}),\n    qn = Ln(function (t) {\n  !function (t, e, n) {\n    function r(t) {\n      var e = this,\n          n = \"\";\n      e.next = function () {\n        var t = e.b,\n            n = e.c,\n            r = e.d,\n            o = e.a;\n        return t = t << 25 ^ t >>> 7 ^ n, n = n - r | 0, r = r << 24 ^ r >>> 8 ^ o, o = o - t | 0, e.b = t = t << 20 ^ t >>> 12 ^ n, e.c = n = n - r | 0, e.d = r << 16 ^ n >>> 16 ^ o, e.a = o - t | 0;\n      }, e.a = 0, e.b = 0, e.c = -1640531527, e.d = 1367130551, t === Math.floor(t) ? (e.a = t / 4294967296 | 0, e.b = 0 | t) : n += t;\n\n      for (var r = 0; r < n.length + 20; r++) e.b ^= 0 | n.charCodeAt(r), e.next();\n    }\n\n    function o(t, e) {\n      return e.a = t.a, e.b = t.b, e.c = t.c, e.d = t.d, e;\n    }\n\n    function a(t, e) {\n      var n = new r(t),\n          a = e && e.state,\n          i = function () {\n        return (n.next() >>> 0) / 4294967296;\n      };\n\n      return i.double = function () {\n        do {\n          var t = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21);\n        } while (0 === t);\n\n        return t;\n      }, i.int32 = n.next, i.quick = i, a && (\"object\" == typeof a && o(a, n), i.state = function () {\n        return o(n, {});\n      }), i;\n    }\n\n    e && e.exports ? e.exports = a : n && n.amd ? n(function () {\n      return a;\n    }) : this.tychei = a;\n  }(0, t, !1);\n}),\n    Hn = Ln(function (t) {\n  !function (e, n) {\n    var r,\n        o = this,\n        a = 256,\n        i = 6,\n        s = \"random\",\n        u = n.pow(a, i),\n        l = n.pow(2, 52),\n        c = 2 * l,\n        h = a - 1;\n\n    function p(t, h, p) {\n      var g = [],\n          y = v(function t(e, n) {\n        var r,\n            o = [],\n            a = typeof e;\n        if (n && \"object\" == a) for (r in e) try {\n          o.push(t(e[r], n - 1));\n        } catch (t) {}\n        return o.length ? o : \"string\" == a ? e : e + \"\\0\";\n      }((h = 1 == h ? {\n        entropy: !0\n      } : h || {}).entropy ? [t, m(e)] : null == t ? function () {\n        try {\n          var t;\n          return r && (t = r.randomBytes) ? t = t(a) : (t = new Uint8Array(a), (o.crypto || o.msCrypto).getRandomValues(t)), m(t);\n        } catch (t) {\n          var n = o.navigator,\n              i = n && n.plugins;\n          return [+new Date(), o, i, o.screen, m(e)];\n        }\n      }() : t, 3), g),\n          x = new f(g),\n          b = function () {\n        for (var t = x.g(i), e = u, n = 0; t < l;) t = (t + n) * a, e *= a, n = x.g(1);\n\n        for (; t >= c;) t /= 2, e /= 2, n >>>= 1;\n\n        return (t + n) / e;\n      };\n\n      return b.int32 = function () {\n        return 0 | x.g(4);\n      }, b.quick = function () {\n        return x.g(4) / 4294967296;\n      }, b.double = b, v(m(x.S), e), (h.pass || p || function (t, e, r, o) {\n        return o && (o.S && d(o, x), t.state = function () {\n          return d(x, {});\n        }), r ? (n[s] = t, e) : t;\n      })(b, y, \"global\" in h ? h.global : this == n, h.state);\n    }\n\n    function f(t) {\n      var e,\n          n = t.length,\n          r = this,\n          o = 0,\n          i = r.i = r.j = 0,\n          s = r.S = [];\n\n      for (n || (t = [n++]); o < a;) s[o] = o++;\n\n      for (o = 0; o < a; o++) s[o] = s[i = h & i + t[o % n] + (e = s[o])], s[i] = e;\n\n      (r.g = function (t) {\n        for (var e, n = 0, o = r.i, i = r.j, s = r.S; t--;) e = s[o = h & o + 1], n = n * a + s[h & (s[o] = s[i = h & i + e]) + (s[i] = e)];\n\n        return r.i = o, r.j = i, n;\n      })(a);\n    }\n\n    function d(t, e) {\n      return e.i = t.i, e.j = t.j, e.S = t.S.slice(), e;\n    }\n\n    function v(t, e) {\n      for (var n, r = t + \"\", o = 0; o < r.length;) e[h & o] = h & (n ^= 19 * e[h & o]) + r.charCodeAt(o++);\n\n      return m(e);\n    }\n\n    function m(t) {\n      return String.fromCharCode.apply(0, t);\n    }\n\n    if (n[\"seed\" + s] = p, v(n.random(), e), t.exports) {\n      t.exports = p;\n\n      try {\n        r = require(\"crypto\");\n      } catch (t) {}\n    }\n  }([], Math);\n});\nHn.alea = Wn, Hn.xor128 = Un, Hn.xorwow = zn, Hn.xorshift7 = Vn, Hn.xor4096 = Gn, Hn.tychei = qn;\n\nvar $n = Hn.alea,\n    jn = function () {\n  function t(t, e, n, r, o) {\n    this.mean = t, this.stdDev = e, this.dtype = n, this.nextVal = NaN, this.truncated = r, this.truncated && (this.upper = this.mean + 2 * this.stdDev, this.lower = this.mean - 2 * this.stdDev);\n    var a = o || Math.random();\n    this.random = $n(a.toString());\n  }\n\n  return t.prototype.nextValue = function () {\n    if (!isNaN(this.nextVal)) {\n      var t = this.nextVal;\n      return this.nextVal = NaN, t;\n    }\n\n    for (var e, n, r = !1; !r;) {\n      var o = void 0,\n          a = void 0,\n          i = void 0;\n\n      do {\n        i = (o = 2 * this.random() - 1) * o + (a = 2 * this.random() - 1) * a;\n      } while (i >= 1 || 0 === i);\n\n      var s = Math.sqrt(-2 * Math.log(i) / i);\n      e = this.mean + this.stdDev * o * s, n = this.mean + this.stdDev * a * s, this.truncated && !this.isValidTruncated(e) || (r = !0);\n    }\n\n    return this.truncated && !this.isValidTruncated(n) || (this.nextVal = this.convertValue(n)), this.convertValue(e);\n  }, t.prototype.convertValue = function (t) {\n    return null == this.dtype || \"float32\" === this.dtype ? t : Math.round(t);\n  }, t.prototype.isValidTruncated = function (t) {\n    return t <= this.upper && t >= this.lower;\n  }, t;\n}(),\n    Kn = function () {\n  function t(t, e, n, r) {\n    void 0 === t && (t = 0), void 0 === e && (e = 1);\n    var o = this;\n    if (this.canReturnFloat = function () {\n      return null == o.dtype || \"float32\" === o.dtype;\n    }, this.min = t, this.range = e - t, this.dtype = n, null == r && (r = Math.random()), \"number\" == typeof r && (r = r.toString()), !this.canReturnFloat() && this.range <= 1) throw new Error(\"The difference between \" + t + \" - \" + e + \" <= 1 and dtype is not float\");\n    this.random = $n(r);\n  }\n\n  return t.prototype.convertValue = function (t) {\n    return this.canReturnFloat() ? t : Math.round(t);\n  }, t.prototype.nextValue = function () {\n    return this.convertValue(this.min + this.range * this.random());\n  }, t;\n}();\n\nfunction Xn(t, e, n) {\n  return void 0 === e && (e = \"float32\"), e = e || \"float32\", X(t), new lt(t, e, n);\n}\n\nfunction Yn(t, e) {\n  void 0 === e && (e = !1), console.log(t.toString(e));\n}\n\nvar Qn = pn({\n  batchToSpaceND_: function (t, e, n) {\n    var r = Ze(t, \"x\", \"batchToSpaceND\"),\n        o = e.reduce(function (t, e) {\n      return t * e;\n    });\n    return d(r.rank >= 1 + e.length, function () {\n      return \"input rank is \" + r.rank + \" but should be > than blockShape.length \" + e.length;\n    }), d(n.length === e.length, function () {\n      return \"crops.length is \" + n.length + \" but should be equal to blockShape.length  \" + e.length;\n    }), d(r.shape[0] % o == 0, function () {\n      return \"input tensor batch is \" + r.shape[0] + \" but is not divisible by the product of the elements of blockShape \" + e.join(\" * \") + \" === \" + o;\n    }), Dt.runKernel(function (t) {\n      return t.batchToSpaceND(r, e, n);\n    }, {\n      $x: r\n    }, function (t) {\n      return {\n        $x: function () {\n          return t.spaceToBatchND(e, n);\n        }\n      };\n    });\n  }\n}),\n    Jn = pn({\n  cast_: function (t, e) {\n    var n = Ze(t, \"x\", \"cast\");\n    if (!_(e)) throw new Error(\"Failed to cast to unknown dtype \" + e);\n    if (\"string\" === e && \"string\" !== n.dtype || \"string\" !== e && \"string\" === n.dtype) throw new Error(\"Only strings can be casted to strings\");\n    return Dt.runKernel(function (t) {\n      return t.cast(n, e);\n    }, {\n      $x: n\n    }, function (t) {\n      return {\n        $x: function () {\n          return t.clone();\n        }\n      };\n    });\n  }\n}),\n    Zn = pn({\n  clone_: function (t) {\n    var e = Ze(t, \"x\", \"clone\", null);\n    return Dt.runKernel(function (t) {\n      return ft.make(e.shape, {\n        dataId: e.dataId\n      }, e.dtype);\n    }, {\n      $x: e\n    }, function (t) {\n      return {\n        $x: function () {\n          return t.toFloat();\n        }\n      };\n    });\n  }\n}),\n    tr = pn({\n  cumsum_: function (t, e, n, r) {\n    void 0 === e && (e = 0), void 0 === n && (n = !1), void 0 === r && (r = !1);\n    var o = Ze(t, \"x\", \"cumsum\"),\n        a = sn([e |= 0], o.rank),\n        i = o;\n    null != a && (i = o.transpose(a));\n    var s = ln(1, o.rank)[0],\n        u = Dt.runKernel(function (t) {\n      return t.cumsum(i, s, n, r);\n    }, {\n      permutedX: i\n    }, function (t) {\n      return {\n        permutedX: function () {\n          return t.cumsum(e, n, !r);\n        }\n      };\n    });\n    return null != a && (u = u.transpose(a)), u;\n  }\n}),\n    er = pn({\n  depthToSpace_: function (t, e, n) {\n    void 0 === n && (n = \"NHWC\");\n    var r = Ze(t, \"x\", \"depthToSpace\"),\n        o = \"NHWC\" === n ? r.shape[1] : r.shape[2],\n        a = \"NHWC\" === n ? r.shape[2] : r.shape[3],\n        i = \"NHWC\" === n ? r.shape[3] : r.shape[1];\n    return d(o * e >= 0, function () {\n      return \"Negative dimension size caused by overflow when multiplying\\n      \" + o + \" and \" + e + \"  for depthToSpace with input shape\\n      \" + r.shape;\n    }), d(a * e >= 0, function () {\n      return \"Negative dimension size caused by overflow when multiplying\\n      \" + a + \" and \" + e + \" for depthToSpace with input shape\\n          \" + r.shape;\n    }), d(i % (e * e) == 0, function () {\n      return \"Dimension size must be evenly divisible by \" + e * e + \" but is \" + i + \" for depthToSpace with input shape \" + r.shape;\n    }), Dt.runKernel(function (t) {\n      return t.depthToSpace(r, e, n);\n    }, {\n      $x: r\n    });\n  }\n}),\n    nr = pn({\n  expandDims_: function (t, e) {\n    void 0 === e && (e = 0);\n    var n = Ze(t, \"x\", \"expandDims\", null);\n    d(e <= n.rank, function () {\n      return \"Axis must be <= rank of the tensor\";\n    });\n    var r = n.shape.slice();\n    return e < 0 && (d(-(n.rank + 1) <= e, function () {\n      return \"Axis must be in the interval [\" + -(n.rank + 1) + \", \" + n.rank + \"]\";\n    }), e = n.rank + e + 1), r.splice(e, 0, 1), dr(n, r);\n  }\n}),\n    rr = pn({\n  eye_: function (t, e, n, r) {\n    void 0 === r && (r = \"float32\"), null == e && (e = t);\n\n    for (var o = Xn([t, e], r), a = t <= e ? t : e, i = 0; i < a; ++i) o.set(1, i, i);\n\n    var s = o.toTensor().as2D(t, e);\n    if (null == n) return s;\n    if (1 === n.length) return yr(nr(s, 0), [n[0], 1, 1]);\n    if (2 === n.length) return yr(nr(nr(s, 0), 0), [n[0], n[1], 1, 1]);\n    if (3 === n.length) return yr(nr(nr(nr(s, 0), 0), 0), [n[0], n[1], n[2], 1, 1]);\n    throw new Error(\"eye() currently supports only 1D and 2D batchShapes, but received \" + n.length + \"D.\");\n  }\n}),\n    or = pn({\n  multinomial_: function (t, e, n, r) {\n    void 0 === r && (r = !1);\n    var o = Ze(t, \"logits\", \"multinomial\"),\n        a = o.size,\n        i = o.rank;\n    if (a < 2) throw new Error(\"Error in multinomial: you need at least 2 outcomes, but got \" + a + \".\");\n    if (i > 2) throw new Error(\"Rank of probabilities must be 1 or 2, but is \" + i);\n    n = n || Math.random();\n    var s = 1 === i ? o.as2D(1, -1) : o,\n        u = Dt.runKernel(function (t) {\n      return t.multinomial(s, r, e, n);\n    }, {\n      logits2D: s\n    });\n    return 1 === i ? u.as1D() : u;\n  }\n}),\n    ar = pn({\n  oneHot_: function (t, e, n, r) {\n    if (void 0 === n && (n = 1), void 0 === r && (r = 0), e < 2) throw new Error(\"Error in oneHot: depth must be >=2, but it is \" + e);\n    var o = Ze(t, \"indices\", \"oneHot\", \"int32\"),\n        a = o.shape.concat([e]);\n    return o = o.flatten(), Dt.runKernel(function (t) {\n      return t.oneHot(o, e, n, r);\n    }, {\n      $indices: o\n    }, function (t) {\n      return {\n        $indices: function () {\n          return Sn(o.shape, \"float32\");\n        }\n      };\n    }).reshape(a);\n  }\n}),\n    ir = pn({\n  pad_: function (t, e, n) {\n    void 0 === n && (n = 0);\n    var r = Ze(t, \"x\", \"pad\");\n    if (0 === r.rank) throw new Error(\"pad(scalar) is not defined. Pass non-scalar to pad\");\n    var o = e.map(function (t) {\n      return t[0];\n    });\n    return Dt.runKernel(function (t) {\n      return t.pad(r, e, n);\n    }, {\n      $x: r\n    }, function (t) {\n      return {\n        $x: function () {\n          return t.slice(o, r.shape);\n        }\n      };\n    });\n  }\n}),\n    sr = pn({\n  pad1d_: function (t, e, n) {\n    return void 0 === n && (n = 0), d(2 === e.length, function () {\n      return \"Invalid number of paddings. Must be length of 2.\";\n    }), ir(t, [e], n);\n  }\n}),\n    ur = pn({\n  pad2d_: function (t, e, n) {\n    return void 0 === n && (n = 0), d(2 === e.length && 2 === e[0].length && 2 === e[1].length, function () {\n      return \"Invalid number of paddings. Must be length of 2 each.\";\n    }), ir(t, e, n);\n  }\n}),\n    lr = pn({\n  pad3d_: function (t, e, n) {\n    return void 0 === n && (n = 0), d(3 === e.length && 2 === e[0].length && 2 === e[1].length && 2 === e[2].length, function () {\n      return \"Invalid number of paddings. Must be length of 2 each.\";\n    }), ir(t, e, n);\n  }\n}),\n    cr = pn({\n  pad4d_: function (t, e, n) {\n    return void 0 === n && (n = 0), d(4 === e.length && 2 === e[0].length && 2 === e[1].length && 2 === e[2].length && 2 === e[3].length, function () {\n      return \"Invalid number of paddings. Must be length of 2 each.\";\n    }), ir(t, e, n);\n  }\n}),\n    hr = pn({\n  rand_: function (t, e, n) {\n    var r = y(t),\n        o = null;\n    if (null == n || \"float32\" === n) o = new Float32Array(r);else if (\"int32\" === n) o = new Int32Array(r);else {\n      if (\"bool\" !== n) throw new Error(\"Unknown data type \" + n);\n      o = new Uint8Array(r);\n    }\n\n    for (var a = 0; a < r; a++) o[a] = e();\n\n    return ft.make(t, {\n      values: o\n    }, n);\n  }\n}),\n    pr = pn({\n  randomNormal_: function (t, e, n, r, o) {\n    if (void 0 === e && (e = 0), void 0 === n && (n = 1), null != r && \"bool\" === r) throw new Error(\"Unsupported data type \" + r);\n\n    for (var a = new jn(e, n, r, !1, o), i = Xn(t, r), s = 0; s < i.values.length; s++) i.values[s] = a.nextValue();\n\n    return i.toTensor();\n  }\n}),\n    fr = pn({\n  randomUniform_: function (t, e, n, r, o) {\n    void 0 === e && (e = 0), void 0 === n && (n = 1), void 0 === r && (r = \"float32\");\n\n    for (var a = Xn(t, r), i = new Kn(e, n, null, o), s = 0; s < a.values.length; s++) a.values[s] = i.nextValue();\n\n    return a.toTensor();\n  }\n}),\n    dr = pn({\n  reshape_: function (t, e) {\n    var n = Ze(t, \"x\", \"reshape\", null);\n    return e = I(e, n.size), d(n.size === y(e), function () {\n      return \"new shape and old shape must have the same number of elements.\";\n    }), Dt.runKernel(function (t) {\n      return t.reshape(n, e);\n    }, {\n      $x: n\n    }, function (t) {\n      return {\n        $x: function () {\n          return t.reshape(n.shape);\n        }\n      };\n    });\n  }\n}),\n    vr = pn({\n  spaceToBatchND_: function (t, e, n) {\n    var r = Ze(t, \"x\", \"spaceToBatchND\");\n    return d(r.rank >= 1 + e.length, function () {\n      return \"input rank \" + r.rank + \" should be > than [blockShape] \" + e.length;\n    }), d(n.length === e.length, function () {\n      return \"paddings.shape[0] \" + n.length + \" must be equal to [blockShape] \" + e.length;\n    }), d(r.shape.reduce(function (t, r, o) {\n      return o > 0 && o <= e.length ? t && (r + n[o - 1][0] + n[o - 1][1]) % e[o - 1] == 0 : t;\n    }, !0), function () {\n      return \"input spatial dimensions \" + r.shape.slice(1) + \" with paddings \" + n.toString() + \" must be divisible by blockShapes \" + e.toString();\n    }), Dt.runKernel(function (t) {\n      return t.spaceToBatchND(r, e, n);\n    }, {\n      $x: r\n    }, function (t) {\n      return {\n        $x: function () {\n          return t.batchToSpaceND(e, n);\n        }\n      };\n    });\n  }\n}),\n    mr = pn({\n  squeeze_: function (t, e) {\n    var n = Ze(t, \"x\", \"squeeze\");\n    return dr(n, N(n.shape, e).newShape);\n  }\n}),\n    gr = pn({\n  stack_: function (t, e) {\n    void 0 === e && (e = 0);\n    var n = tn(t, \"tensors\", \"stack\");\n    if (d(n.length >= 1, function () {\n      return \"Pass at least one tensor to tf.stack\";\n    }), 1 === n.length) return n[0].expandDims(e);\n    var r = n[0].rank,\n        o = n[0].shape,\n        a = n[0].dtype;\n    d(e <= r, function () {\n      return \"Axis must be <= rank of the tensor\";\n    }), n.forEach(function (t) {\n      v(o, t.shape, \"All tensors passed to stack must have matching shapes\");\n    }), n.forEach(function (t) {\n      d(a === t.dtype, function () {\n        return \"All tensors passed to stack must have matching dtypes\";\n      });\n    });\n    var i = n.map(function (t) {\n      return t.expandDims(e);\n    });\n    return _n(i, e);\n  }\n}),\n    yr = pn({\n  tile_: function (t, e) {\n    var n = Ze(t, \"x\", \"tile\", null);\n    return d(n.rank === e.length, function () {\n      return \"Error in transpose: rank of input \" + n.rank + \" must match length of reps \" + e + \".\";\n    }), Dt.runKernel(function (t, r) {\n      var o = t.tile(n, e);\n      return r([n]), o;\n    }, {\n      $x: n\n    }, function (t, n) {\n      var r = n[0];\n      return {\n        $x: function () {\n          var n = Dn(r);\n          if (1 === r.rank) for (var o = 0; o < e[0]; ++o) n = n.add(t.slice([o * r.shape[0]], [r.shape[0]]));else if (2 === r.rank) for (o = 0; o < e[0]; ++o) for (var a = 0; a < e[1]; ++a) n = n.add(t.slice([o * r.shape[0], a * r.shape[1]], [r.shape[0], r.shape[1]]));else if (3 === r.rank) for (o = 0; o < e[0]; ++o) for (a = 0; a < e[1]; ++a) for (var i = 0; i < e[2]; ++i) n = n.add(t.slice([o * r.shape[0], a * r.shape[1], i * r.shape[2]], [r.shape[0], r.shape[1], r.shape[2]]));else {\n            if (4 !== r.rank) throw new Error(\"Gradient for tile operation is not implemented for rank-\" + r.rank + \" tensors yet.\");\n\n            for (o = 0; o < e[0]; ++o) for (a = 0; a < e[1]; ++a) for (i = 0; i < e[2]; ++i) for (var s = 0; s < e[3]; ++s) n = n.add(t.slice([o * r.shape[0], a * r.shape[1], i * r.shape[2], s * r.shape[3]], [r.shape[0], r.shape[1], r.shape[2], r.shape[3]]));\n          }\n          return n;\n        }\n      };\n    });\n  }\n}),\n    xr = pn({\n  truncatedNormal_: function (t, e, n, r, o) {\n    if (void 0 === e && (e = 0), void 0 === n && (n = 1), null != r && \"bool\" === r) throw new Error(\"Unsupported data type \" + r);\n\n    for (var a = new jn(e, n, r, !0, o), i = Xn(t, r), s = 0; s < i.values.length; s++) i.values[s] = a.nextValue();\n\n    return i.toTensor();\n  }\n}),\n    br = pn({\n  unstack_: function (t, e) {\n    void 0 === e && (e = 0), e = e || 0;\n    var n = Ze(t, \"x\", \"unstack\");\n    return d(e >= -n.shape.length && e < n.shape.length, function () {\n      return \"Axis = \" + e + \" is not in [-\" + n.shape.length + \", \" + n.shape.length + \")\";\n    }), e < 0 && (e += n.shape.length), Dt.runKernel(function (t) {\n      return t.unstack(n, e);\n    }, {\n      $x: n\n    }, function (t) {\n      return {\n        $x: function () {\n          return gr(t, e);\n        }\n      };\n    });\n  }\n}),\n    wr = function (t, e) {\n  return r(this, void 0, void 0, function () {\n    var n, r, a, i, s, u, l, c, h, p;\n    return o(this, function (o) {\n      switch (o.label) {\n        case 0:\n          return n = Ze(t, \"x\", \"setdiff1d\"), r = Ze(e, \"y\", \"setdiff1d\"), d(n.dtype === r.dtype, function () {\n            return \"x and y should have the same dtype, but got x (\" + n.dtype + \") and y (\" + r.dtype + \").\";\n          }), d(1 === n.rank, function () {\n            return \"x should be 1D tensor, but got x (\" + n.shape + \").\";\n          }), d(1 === r.rank, function () {\n            return \"y should be 1D tensor, but got y (\" + r.shape + \").\";\n          }), [4, n.data()];\n\n        case 1:\n          return a = o.sent(), [4, r.data()];\n\n        case 2:\n          for (i = o.sent(), s = new Set(i), u = 0, h = 0; h < a.length; h++) s.has(a[h]) || u++;\n\n          for (l = new lt([u], n.dtype), c = new lt([u], \"int32\"), h = 0, p = 0; h < a.length; h++) s.has(a[h]) || (l.values[p] = a[h], c.values[p] = h, p++);\n\n          return [2, [l.toTensor(), c.toTensor()]];\n      }\n    });\n  });\n};\n\nfunction Cr(t, e, n, r) {\n  void 0 === r && (r = !0);\n  var o = [];\n  if (r) (o = o.concat(e.slice(0))).push(t[0] / n), o = o.concat(t.slice(1));else {\n    o = o.concat(t[0]);\n\n    for (var a = e.length, i = 0; i < a; ++i) o = o.concat([t[i + 1] / e[i], e[i]]);\n\n    o = o.concat(t.slice(a + 1));\n  }\n  return o;\n}\n\nfunction Er(t, e, n) {\n  void 0 === n && (n = !0);\n  var r = [];\n\n  if (n) {\n    r.push(e);\n\n    for (var o = e + 1; o < t; ++o) o <= 2 * e ? (r.push(o), r.push(o - (e + 1))) : r.push(o);\n  } else {\n    var a = [],\n        i = [];\n\n    for (o = 1; o < t; ++o) o >= 2 * e + 1 || o % 2 == 1 ? i.push(o) : a.push(o);\n\n    r.push.apply(r, a), r.push(0), r.push.apply(r, i);\n  }\n\n  return r;\n}\n\nfunction Rr(t, e, n, r) {\n  void 0 === r && (r = !0);\n  var o = [];\n  r ? o.push(t[0] / n) : o.push(t[0] * n);\n\n  for (var a = 1; a < t.length; ++a) a <= e.length ? r ? o.push(e[a - 1] * t[a]) : o.push(t[a] / e[a - 1]) : o.push(t[a]);\n\n  return o;\n}\n\nfunction Ir(t, e) {\n  for (var n = [0], r = 0; r < e; ++r) n.push(t[r][0]);\n\n  return n;\n}\n\nfunction Sr(t, e, n) {\n  for (var r = t.slice(0, 1), o = 0; o < n; ++o) r.push(t[o + 1] - e[o][0] - e[o][1]);\n\n  return r;\n}\n\nfunction Nr(t, e) {\n  if (t.rank < 1) throw new Error(\"tf.gatherND() expects the input to be rank 1 or higher, but the rank was \" + t.rank + \".\");\n  if (e.rank < 1) throw new Error(\"tf.gatherND() expects the indices to be rank 1 or higher, but the rank was \" + e.rank + \".\");\n  if (\"int32\" !== e.dtype) throw new Error(\"tf.gatherND() expects the indices to be int32 type, but the dtype was \" + e.dtype + \".\");\n  if (e.shape[e.rank - 1] > t.rank) throw new Error(\"index innermost dimension length must be <= tensor rank; saw: \" + e.shape[e.rank - 1] + \" vs. \" + t.rank);\n  if (0 === t.size) throw new Error(\"Requested more than 0 entries, but input is empty. Input shape: \" + t.shape + \".\");\n\n  for (var n = e.shape, r = n[n.length - 1], o = 1, a = 0; a < n.length - 1; ++a) o *= n[a];\n\n  var i = t.shape,\n      s = n.slice();\n  s.pop();\n  var u = 1;\n\n  for (a = r; a < t.rank; ++a) u *= i[a], s.push(i[a]);\n\n  var l = G(t.shape).map(function (t) {\n    return t / u;\n  }).concat([1]).slice(0, r);\n  return [s, o, u, l];\n}\n\nvar kr = 30;\n\nfunction Ar(t) {\n  return t <= kr ? t : V(t, Math.floor(Math.sqrt(t)));\n}\n\nfunction Tr(t, e, n) {\n  if (e.rank < 1) throw new Error(\"tf.scatterND() expects the indices to be rank 1 or higher, but the rank was \" + e.rank + \".\");\n  if (t.rank < 1) throw new Error(\"tf.scatterND() expects the updates to be rank 1 or higher, but the rank was \" + t.rank + \".\");\n  if (\"int32\" !== e.dtype) throw new Error(\"The dtype of 'indices' should be int32, but got dtype: \" + e.dtype);\n  if (n.length < 1) throw new Error(\"Output rank must be greater or equal to 1, but got shape: \" + n);\n\n  if (0 === n.length) {\n    if (0 === e.size) throw new Error(\"Indices specified for empty output. indices shape: \" + e.shape);\n    if (0 === t.size) throw new Error(\"Updates specified for empty output. updates shape: \" + t.shape);\n  }\n\n  !function (t, e, n) {\n    var r = e.rank > 1 ? e.shape[e.rank - 1] : 1,\n        o = e.rank > 1 ? e.rank - 1 : 1,\n        a = \"Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: \" + n.shape + \", indices.shape: \" + e.shape + \", shape: \" + t + \", sliceDim: \" + r + \", and batchDim: \" + o + \".\";\n    if (n.rank < o) throw new Error(a + \" update.rank < \" + o + \". \");\n    if (t.length < r + (n.rank - o)) throw new Error(a + \" Output shape length < \" + (r + (n.rank - o)));\n    if (n.rank !== o + t.length - r) throw new Error(a + \" update.rank != \" + (o + t.length - r));\n\n    for (var i = 0; i < o; ++i) if (n.shape[i] !== e.shape[i]) throw new Error(a + \" updates.shape[\" + i + \"] (\" + n.shape[i] + \") != indices.shape[\" + i + \"] (\" + e.shape[i] + \").\");\n\n    for (i = 0; i < n.rank - o; ++i) if (n.shape[i + o] !== t[i + r]) throw new Error(a + \" updates.shape[\" + (i + o) + \"] (\" + n.shape[i + o] + \") != shape[\" + (i + o) + \"] (\" + t[i + o] + \")\");\n  }(n, e, t);\n}\n\nfunction Dr(t, e, n) {\n  for (var r = e.rank > 1 ? e.shape[e.rank - 1] : 1, o = n.length, a = 1, i = r; i < o; ++i) a *= n[i];\n\n  var s = r < 1 ? 1 : r;\n  return {\n    sliceRank: r,\n    numUpdates: e.size / s,\n    sliceSize: a,\n    strides: G(n.slice(0, r)).concat([1]),\n    outputSize: y(n)\n  };\n}\n\nfunction _r(t, e, n, r, o, a, i, s, u) {\n  if (void 0 === o && (o = 0), void 0 === a && (a = 0), void 0 === i && (i = 0), void 0 === s && (s = 0), void 0 === u && (u = 0), 0 !== i) throw new Error(\"ellipsis mask is not yet supported\");\n  if (0 !== s) throw new Error(\"new axis mask is not yet supported\");\n\n  for (var l = [], c = [], h = [], p = 0; p < t.length; p++) l[p] = Or(o, e, r, t, p), c[p] = Mr(a, n, r, t, p), u & 1 << p && (c[p] = l[p] + 1, h.push(p));\n\n  var f = new Array(t.length).fill(0);\n  return f = f.map(function (t, e) {\n    for (var n = 0, o = r[e] || 1, a = l[e]; !(o > 0 ? a >= c[e] : a <= c[e]); a += o) n += 1;\n\n    return n;\n  }), [l, f, h];\n}\n\nfunction Or(t, e, n, r, o) {\n  var a = e[o],\n      i = n[o] || 1;\n  (t & 1 << o || null == a) && (a = i > 0 ? Number.MIN_SAFE_INTEGER : Number.MAX_SAFE_INTEGER);\n  var s = r[o];\n  return a < 0 && (a += s), a = h(0, a, s - 1);\n}\n\nfunction Mr(t, e, n, r, o) {\n  var a = e[o],\n      i = n[o] || 1;\n  (t & 1 << o || null == a) && (a = i > 0 ? Number.MAX_SAFE_INTEGER : Number.MIN_SAFE_INTEGER);\n  var s = r[o];\n  return a < 0 && (a += s), a = i > 0 ? h(0, a, s) : h(-1, a, s - 1);\n}\n\nfunction Fr(t, e, n) {\n  for (var r = n.length, o = 0; o < n.length; o++) if (n[o] > 1) {\n    r = o;\n    break;\n  }\n\n  for (o = r + 1; o < n.length; o++) if (e[o] > 0 || n[o] !== t[o]) return !1;\n\n  return !0;\n}\n\nfunction Br(t, e) {\n  for (var n = t.length > 0 ? t[t.length - 1] : 1, r = 0; r < t.length - 1; r++) n += t[r] * e[r];\n\n  return n;\n}\n\nfunction Pr(t) {\n  return d(z(t), function () {\n    return \"The f passed in grad(f) must be a function\";\n  }), function (e, n) {\n    var r = Ze(e, \"x\", \"tf.grad\", null),\n        o = null != n ? Ze(n, \"dy\", \"tf.grad\") : null;\n    return Dt.tidy(function () {\n      var e = Dt.gradients(function () {\n        return t(r);\n      }, [r], o),\n          n = e.value,\n          a = e.grads;\n      return null != o && v(n.shape, o.shape, \"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)\"), Gr(a), a[0];\n    });\n  };\n}\n\nfunction Lr(t) {\n  return d(z(t), function () {\n    return \"The f passed in grads(f) must be a function\";\n  }), function (e, n) {\n    d(Array.isArray(e), function () {\n      return \"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s\";\n    });\n    var r = tn(e, \"args\", \"tf.grads\", null),\n        o = null != n ? Ze(n, \"dy\", \"tf.grads\") : null;\n    return Dt.tidy(function () {\n      var e = Dt.gradients(function () {\n        return t.apply(void 0, r);\n      }, r, o),\n          n = e.value,\n          a = e.grads;\n      return null != o && v(n.shape, o.shape, \"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])\"), Gr(a), a;\n    });\n  };\n}\n\nfunction Wr(t) {\n  return d(z(t), function () {\n    return \"The f passed in valueAndGrad(f) must be a function\";\n  }), function (e, n) {\n    d(e instanceof ft, function () {\n      return \"The x passed in valueAndGrad(f)(x) must be a tensor\";\n    }), d(null == n || n instanceof ft, function () {\n      return \"The dy passed in valueAndGrad(f)(x, dy) must be a tensor\";\n    });\n    var r = Dt.gradients(function () {\n      return t(e);\n    }, [e], n),\n        o = r.grads,\n        a = r.value;\n    return Gr(o), {\n      grad: o[0],\n      value: a\n    };\n  };\n}\n\nfunction Ur(t) {\n  return d(z(t), function () {\n    return \"The f passed in valueAndGrads(f) must be a function\";\n  }), function (e, n) {\n    d(Array.isArray(e) && e.every(function (t) {\n      return t instanceof ft;\n    }), function () {\n      return \"The args passed in valueAndGrads(f)(args) must be array of tensors\";\n    }), d(null == n || n instanceof ft, function () {\n      return \"The dy passed in valueAndGrads(f)(args, dy) must be a tensor\";\n    });\n    var r = Dt.gradients(function () {\n      return t.apply(void 0, e);\n    }, e, n);\n    return null != n && v(r.value.shape, n.shape, \"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])\"), Gr(r.grads), r;\n  };\n}\n\nfunction zr(t, e) {\n  d(z(t), function () {\n    return \"The f passed in variableGrads(f) must be a function\";\n  }), d(null == e || Array.isArray(e) && e.every(function (t) {\n    return t instanceof dt;\n  }), function () {\n    return \"The varList passed in variableGrads(f, varList) must be an array of variables\";\n  });\n  var n = null != e;\n  if (!n) for (var r in e = [], Dt.registeredVariables) e.push(Dt.registeredVariables[r]);\n  var o = n ? e.filter(function (t) {\n    return !t.trainable;\n  }) : null,\n      a = e.length;\n  d((e = e.filter(function (t) {\n    return t.trainable;\n  })).length > 0, function () {\n    return \"variableGrads() expects at least one of the input variables to be trainable, but none of the \" + a + \" variables is trainable.\";\n  });\n  var i = Dt.gradients(t, e, null, !0),\n      s = i.value,\n      u = i.grads;\n  d(u.some(function (t) {\n    return null != t;\n  }), function () {\n    return \"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().\";\n  }), d(0 === s.rank, function () {\n    return \"The f passed in variableGrads(f) must return a scalar, but it returned a rank-\" + s.rank + \" tensor\";\n  });\n  var l = {};\n  return e.forEach(function (t, e) {\n    null != u[e] && (l[t.name] = u[e]);\n  }), null != o && o.forEach(function (t) {\n    return l[t.name] = null;\n  }), {\n    value: s,\n    grads: l\n  };\n}\n\nfunction Vr(t) {\n  return Dt.customGrad(t);\n}\n\nfunction Gr(t) {\n  if (t.filter(function (t) {\n    return null == t;\n  }).length > 0) throw new Error(\"Cannot compute gradient of y=f(x) with respect to x. Make sure that\\n    the f you passed encloses all operations that lead from x to y.\");\n}\n\nvar qr = pn({\n  softmax_: function (t, e) {\n    void 0 === e && (e = -1);\n    var n = Ze(t, \"logits\", \"softmax\");\n    if (-1 === e && (e = n.rank - 1), e !== n.rank - 1) throw Error(\"Softmax along a non-last dimension is not yet supported. Logits was rank \" + n.rank + \" and dim was \" + e);\n    return Vr(function (t, n) {\n      var r = t.logSumExp([e], !0),\n          o = t.toFloat().sub(r).exp();\n      return n([o]), {\n        value: o,\n        gradFunc: function (t, n) {\n          var r = n[0],\n              o = t.mul(r);\n          return o.sub(o.sum([e], !0).mul(r));\n        }\n      };\n    })(n);\n  }\n}),\n    Hr = pn({\n  logSoftmax_: function (t, e) {\n    void 0 === e && (e = -1);\n    var n = Ze(t, \"logits\", \"logSoftmax\");\n    if (-1 === e && (e = n.rank - 1), e !== n.rank - 1) throw Error(\"Log Softmax along a non-last dimension is not yet supported. Logits was rank \" + n.rank + \" and axis was \" + e);\n    return Vr(function (t, n) {\n      var r = t.max(e, !0),\n          o = t.sub(r),\n          a = o.toFloat().sub(o.exp().sum(e, !0).log());\n      return n([a]), {\n        value: a,\n        gradFunc: function (t, n) {\n          var r = n[0].exp();\n          return t.sub(t.sum(e, !0).mul(r));\n        }\n      };\n    })(n);\n  }\n}),\n    $r = function () {\n  function t(t, e) {\n    this.backend = t, this.dataMover = e, this.data = new WeakMap();\n  }\n\n  return t.prototype.get = function (t) {\n    return this.data.has(t) || this.dataMover.moveData(this.backend, t), this.data.get(t);\n  }, t.prototype.set = function (t, e) {\n    this.data.set(t, e);\n  }, t.prototype.has = function (t) {\n    return this.data.has(t);\n  }, t.prototype.delete = function (t) {\n    return this.data.delete(t);\n  }, t;\n}(),\n    jr = function () {\n  function t() {}\n\n  return t.prototype.time = function (t) {\n    throw new Error(\"Not yet implemented.\");\n  }, t.prototype.read = function (t) {\n    throw new Error(\"Not yet implemented.\");\n  }, t.prototype.readSync = function (t) {\n    throw new Error(\"Not yet implemented.\");\n  }, t.prototype.disposeData = function (t) {\n    throw new Error(\"Not yet implemented.\");\n  }, t.prototype.write = function (t, e) {\n    throw new Error(\"Not yet implemented.\");\n  }, t.prototype.fromPixels = function (t, e) {\n    throw new Error(\"Not yet implemented.\");\n  }, t.prototype.register = function (t, e, n) {\n    throw new Error(\"Not yet implemented.\");\n  }, t.prototype.memory = function () {\n    throw new Error(\"Not yet implemented.\");\n  }, t.prototype.floatPrecision = function () {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.epsilon = function () {\n    return 32 === this.floatPrecision() ? 1e-7 : 1e-4;\n  }, t.prototype.batchMatMul = function (t, e, n, r) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.fusedBatchMatMul = function (t, e, n, r, o, a) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.slice = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.stridedSlice = function (t, e, n, r, o, a, i, s, u) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.unstack = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.reverse = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.concat = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.neg = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.add = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.addN = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.subtract = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.multiply = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.realDivide = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.floorDiv = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.sum = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.prod = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.unsortedSegmentSum = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.argMin = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.argMax = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.equal = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.notEqual = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.less = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.lessEqual = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.greater = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.greaterEqual = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.logicalNot = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.logicalAnd = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.logicalOr = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.where = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.select = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.topk = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.min = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.minimum = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.mod = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.max = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.maximum = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.all = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.any = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.squaredDifference = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.ceil = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.floor = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.round = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.sign = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.isNaN = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.isInf = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.isFinite = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.pow = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.exp = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.expm1 = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.log = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.log1p = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.sqrt = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.rsqrt = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.square = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.reciprocal = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.relu = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.prelu = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.elu = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.eluDer = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.selu = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.int = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.clip = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.abs = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.complexAbs = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.sigmoid = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.softplus = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.sin = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.cos = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.tan = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.asin = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.acos = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.atan = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.atan2 = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.sinh = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.cosh = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.tanh = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.asinh = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.acosh = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.atanh = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.erf = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.step = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.conv2d = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.conv2dDerInput = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.conv2dDerFilter = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.depthwiseConv2D = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.depthwiseConv2DDerInput = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.depthwiseConv2DDerFilter = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.conv3d = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.conv3dDerInput = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.conv3dDerFilter = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.maxPool = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.maxPoolBackprop = function (t, e, n, r) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.avgPool = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.avgPoolBackprop = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.reshape = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.cast = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.tile = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.pad = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.transpose = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.gather = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.gatherND = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.scatterND = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.batchToSpaceND = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.spaceToBatchND = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.resizeBilinear = function (t, e, n, r) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.resizeBilinearBackprop = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.resizeNearestNeighbor = function (t, e, n, r) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.resizeNearestNeighborBackprop = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.batchNormalization = function (t, e, n, r, o, a) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.localResponseNormalization4D = function (t, e, n, r, o) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.LRNGrad = function (t, e, n, r, o, a, i) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.multinomial = function (t, e, n, r) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.oneHot = function (t, e, n, r) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.cumsum = function (t, e, n, r) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.nonMaxSuppression = function (t, e, n, r, o) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.fft = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.ifft = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.complex = function (t, e) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.real = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.imag = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.cropAndResize = function (t, e, n, r, o, a) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.depthToSpace = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.split = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.sparseToDense = function (t, e, n, r) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.fill = function (t, e, n) {\n    throw new Error(\"Not yet implemented.\");\n  }, t.prototype.onesLike = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.zerosLike = function (t) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.linspace = function (t, e, n) {\n    throw new Error(\"Not yet implemented\");\n  }, t.prototype.dispose = function () {\n    throw new Error(\"Not yet implemented\");\n  }, t;\n}();\n\nfunction Kr(t, e) {\n  for (var n = t.length, r = [], o = 0; o < n; o++) {\n    var a = n - 1 - o,\n        i = t[a] || 1;\n    (e[e.length - 1 - o] || 1) > 1 && 1 === i && r.unshift(a);\n  }\n\n  return r;\n}\n\nfunction Xr(t, e) {\n  for (var n = [], r = 0; r < e.length; r++) {\n    var o = t[t.length - r - 1],\n        a = e.length - r - 1,\n        i = e[a];\n    (null == o || 1 === o && i > 1) && n.unshift(a);\n  }\n\n  return n;\n}\n\nfunction Yr(t, e) {\n  for (var n = [], r = Math.max(t.length, e.length), o = 0; o < r; o++) {\n    var a = t[t.length - o - 1];\n    null == a && (a = 1);\n    var i = e[e.length - o - 1];\n    if (null == i && (i = 1), 1 === a) n.unshift(i);else if (1 === i) n.unshift(a);else {\n      if (a !== i) throw Error(\"Operands could not be broadcast together with shapes \" + t + \" and \" + e + \".\");\n      n.unshift(a);\n    }\n  }\n\n  return n;\n}\n\nfunction Qr(t, e, n, r, o, a, i) {\n  void 0 === i && (i = \"channelsLast\");\n  var s,\n      u = eo(e),\n      l = u[0],\n      c = u[1];\n  if (\"channelsLast\" === i) s = [l, c, t[3], t[3]];else {\n    if (\"channelsFirst\" !== i) throw new Error(\"Unknown dataFormat \" + i);\n    s = [l, c, t[1], t[1]];\n  }\n  return Jr(t, s, n, r, o, a, !1, i);\n}\n\nfunction Jr(t, e, n, r, o, a, i, s) {\n  void 0 === i && (i = !1), void 0 === s && (s = \"channelsLast\");\n  var u = [-1, -1, -1, -1],\n      l = u[0],\n      c = u[1],\n      h = u[2],\n      p = u[3];\n  if (\"channelsLast\" === s) l = t[0], c = t[1], h = t[2], p = t[3];else {\n    if (\"channelsFirst\" !== s) throw new Error(\"Unknown dataFormat \" + s);\n    l = t[0], p = t[1], c = t[2], h = t[3];\n  }\n\n  var f,\n      v = e[0],\n      m = e[1],\n      g = e[3],\n      y = eo(n),\n      x = y[0],\n      w = y[1],\n      C = eo(r),\n      E = C[0],\n      R = C[1],\n      I = ro(v, E),\n      S = ro(m, R),\n      N = function (t, e, n, r, o, a, i, s) {\n    var u, l, c;\n\n    if (\"number\" == typeof t) {\n      var h = 0 === t ? \"VALID\" : \"NUMBER\";\n      u = {\n        top: t,\n        bottom: t,\n        left: t,\n        right: t,\n        type: h\n      };\n\n      var p = function (t, e, n, r, o) {\n        null == r && (r = to(t, e, n));\n        var a = t[0],\n            i = t[1],\n            s = oo((a - e + 2 * r) / n + 1, o);\n        d(b(s), function () {\n          return \"The output # of rows (\" + s + \") must be an integer. Change the stride and/or zero pad parameters\";\n        });\n        var u = oo((i - e + 2 * r) / n + 1, o);\n        return d(b(u), function () {\n          return \"The output # of columns (\" + u + \") must be an integer. Change the stride and/or zero pad parameters\";\n        }), [s, u];\n      }([e, n], a, r, t, s);\n\n      l = p[0], c = p[1];\n    } else if (\"same\" === t) {\n      l = Math.ceil(e / r), c = Math.ceil(n / o);\n      var f = Math.max(0, (l - 1) * r + a - e),\n          v = Math.max(0, (c - 1) * o + i - n),\n          m = Math.floor(f / 2),\n          g = f - m,\n          y = Math.floor(v / 2),\n          x = v - y;\n      u = {\n        top: m,\n        bottom: g,\n        left: y,\n        right: x,\n        type: \"SAME\"\n      };\n    } else {\n      if (\"valid\" !== t) throw Error(\"Unknown padding parameter: \" + t);\n      u = {\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        type: \"VALID\"\n      }, l = Math.ceil((e - a + 1) / r), c = Math.ceil((n - i + 1) / o);\n    }\n\n    return {\n      padInfo: u,\n      outHeight: l,\n      outWidth: c\n    };\n  }(o, c, h, x, w, I, S, a),\n      k = N.padInfo,\n      A = N.outHeight,\n      T = N.outWidth,\n      D = i ? g * p : g;\n\n  return \"channelsFirst\" === s ? f = [l, D, A, T] : \"channelsLast\" === s && (f = [l, A, T, D]), {\n    batchSize: l,\n    dataFormat: s,\n    inHeight: c,\n    inWidth: h,\n    inChannels: p,\n    outHeight: A,\n    outWidth: T,\n    outChannels: D,\n    padInfo: k,\n    strideHeight: x,\n    strideWidth: w,\n    filterHeight: v,\n    filterWidth: m,\n    effectiveFilterHeight: I,\n    effectiveFilterWidth: S,\n    dilationHeight: E,\n    dilationWidth: R,\n    inShape: t,\n    outShape: f,\n    filterShape: e\n  };\n}\n\nfunction Zr(t, e, n, r, o, a, i) {\n  void 0 === a && (a = !1), void 0 === i && (i = \"channelsLast\");\n  var s = [-1, -1, -1, -1, -1],\n      u = s[0],\n      l = s[1],\n      c = s[2],\n      h = s[3],\n      p = s[4];\n  if (\"channelsLast\" === i) u = t[0], l = t[1], c = t[2], h = t[3], p = t[4];else {\n    if (\"channelsFirst\" !== i) throw new Error(\"Unknown dataFormat \" + i);\n    u = t[0], p = t[1], l = t[2], c = t[3], h = t[4];\n  }\n\n  var f,\n      d = e[0],\n      v = e[1],\n      m = e[2],\n      g = e[4],\n      y = no(n),\n      x = y[0],\n      b = y[1],\n      w = y[2],\n      C = no(r),\n      E = C[0],\n      R = C[1],\n      I = C[2],\n      S = function (t, e, n, r, o, a, i, s, u, l) {\n    var c, h, p, f;\n\n    if (\"same\" === t) {\n      h = Math.ceil(e / o), p = Math.ceil(n / a), f = Math.ceil(r / i);\n      var d = (h - 1) * o + s - e,\n          v = (p - 1) * a + u - n,\n          m = (f - 1) * i + l - r,\n          g = Math.floor(d / 2),\n          y = d - g,\n          x = Math.floor(v / 2),\n          b = v - x,\n          w = Math.floor(m / 2),\n          C = m - w;\n      c = {\n        top: x,\n        bottom: b,\n        left: w,\n        right: C,\n        front: g,\n        back: y,\n        type: \"SAME\"\n      };\n    } else {\n      if (\"valid\" !== t) throw Error(\"Unknown padding parameter: \" + t);\n      c = {\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        front: 0,\n        back: 0,\n        type: \"VALID\"\n      }, h = Math.ceil((e - s + 1) / o), p = Math.ceil((n - u + 1) / a), f = Math.ceil((r - l + 1) / i);\n    }\n\n    return {\n      padInfo: c,\n      outDepth: h,\n      outHeight: p,\n      outWidth: f\n    };\n  }(o, l, c, h, x, b, w, ro(d, E), ro(v, R), ro(m, I)),\n      N = S.padInfo,\n      k = S.outDepth,\n      A = S.outHeight,\n      T = S.outWidth,\n      D = a ? g * p : g;\n\n  return \"channelsFirst\" === i ? f = [u, D, k, A, T] : \"channelsLast\" === i && (f = [u, k, A, T, D]), {\n    batchSize: u,\n    dataFormat: i,\n    inDepth: l,\n    inHeight: c,\n    inWidth: h,\n    inChannels: p,\n    outDepth: k,\n    outHeight: A,\n    outWidth: T,\n    outChannels: D,\n    padInfo: N,\n    strideDepth: x,\n    strideHeight: b,\n    strideWidth: w,\n    filterDepth: d,\n    filterHeight: v,\n    filterWidth: m,\n    dilationDepth: E,\n    dilationHeight: R,\n    dilationWidth: I,\n    inShape: t,\n    outShape: f,\n    filterShape: e\n  };\n}\n\nfunction to(t, e, n, r) {\n  void 0 === r && (r = 1);\n  var o = ro(e, r);\n  return Math.floor((t[0] * (n - 1) - n + o) / 2);\n}\n\nfunction eo(t) {\n  return \"number\" == typeof t ? [t, t] : t;\n}\n\nfunction no(t) {\n  return \"number\" == typeof t ? [t, t, t] : t;\n}\n\nfunction ro(t, e) {\n  return e <= 1 ? t : t + (t - 1) * (e - 1);\n}\n\nfunction oo(t, e) {\n  if (!e) return t;\n\n  switch (e) {\n    case \"round\":\n      return Math.round(t);\n\n    case \"ceil\":\n      return Math.ceil(t);\n\n    case \"floor\":\n      return Math.floor(t);\n\n    default:\n      throw new Error(\"Unknown roundingMode \" + e);\n  }\n}\n\nfunction ao(t) {\n  var e = eo(t),\n      n = e[0],\n      r = e[1];\n  return 1 === n && 1 === r;\n}\n\nfunction io(t, e) {\n  return ao(t) || ao(e);\n}\n\nfunction so(t, e, n) {\n  if (\"complex64\" === e) {\n    if (\"complex64\" === t.dtype) return t.clone();\n    var r = Sn(t.shape),\n        o = t.toFloat(),\n        a = n.complex(o, r);\n    return r.dispose(), o.dispose(), a;\n  }\n\n  if (!O(t.dtype, e)) return ft.make(t.shape, {\n    dataId: t.dataId\n  }, e);\n\n  if (\"complex64\" === t.dtype) {\n    var i = n.real(t);\n    a = i.cast(e);\n    return i.dispose(), a;\n  }\n\n  if (\"int32\" === e) return n.int(t);\n\n  if (\"bool\" === e) {\n    var s = yn(0, t.dtype);\n    a = n.notEqual(t, s);\n    return s.dispose(), a;\n  }\n\n  throw new Error(\"Error in Cast: failed to cast \" + t.dtype + \" to \" + e);\n}\n\nfunction uo(t, e) {\n  return ft.make(e, {\n    dataId: t.dataId\n  }, t.dtype);\n}\n\nfunction lo(t, e, n) {\n  var r = (e - t) / (n - 1),\n      o = j(n, \"float32\");\n  o[0] = t;\n\n  for (var a = 1; a < o.length; a++) o[a] = o[a - 1] + r;\n\n  return xn(o, \"float32\");\n}\n\nvar co = Object.freeze({\n  castTensor: so,\n  reshapeTensor: uo,\n  linspaceImpl: lo,\n  upcastType: Ct,\n  axesAreInnerMostDims: en,\n  combineLocations: nn,\n  computeOutAndReduceShapes: rn,\n  expandShapeToKeepDim: on,\n  assertAxesAreInnerMostDims: an,\n  getAxesPermutation: sn,\n  getUndoAxesPermutation: un,\n  getInnerMostAxes: ln,\n  getBroadcastDims: Kr,\n  getReductionAxes: Xr,\n  assertAndGetBroadcastShape: Yr,\n  assertParamsConsistent: cn,\n  computeOutShape: hn,\n  computePool2DInfo: Qr,\n  computeConv2DInfo: Jr,\n  computeConv3DInfo: Zr,\n  computeDefaultPad: to,\n  tupleValuesAreOne: ao,\n  eitherStridesOrDilationsAreOne: io\n});\n\nfunction ho(t, e) {\n  if (t.length !== e.length) throw new Error(\"Cannot merge real and imag arrays of different lengths. real:\" + t.length + \", imag: \" + e.length + \".\");\n\n  for (var n = new Float32Array(2 * t.length), r = 0; r < n.length; r += 2) n[r] = t[r / 2], n[r + 1] = e[r / 2];\n\n  return n;\n}\n\nfunction po(t, e) {\n  return {\n    real: t[2 * e],\n    imag: t[2 * e + 1]\n  };\n}\n\nfunction fo(t, e, n, r) {\n  t[2 * r] = e, t[2 * r + 1] = n;\n}\n\nfunction vo(t, e, n) {\n  var r = (n ? 2 : -2) * Math.PI * (t / e);\n  return {\n    real: Math.cos(r),\n    imag: Math.sin(r)\n  };\n}\n\nfunction mo(t, e, n, r, o) {\n  for (var a = Array.from(e).map(function (t, e) {\n    return {\n      score: t,\n      boxIndex: e\n    };\n  }).filter(function (t) {\n    return t.score > o;\n  }).sort(function (t, e) {\n    return e.score - t.score;\n  }), i = [], s = 0; s < a.length; s++) {\n    var u = a[s],\n        l = u.score,\n        c = u.boxIndex;\n    if (l < o) break;\n\n    for (var h = !1, p = i.length - 1; p >= 0; --p) {\n      if (go(t, c, i[p]) >= r) {\n        h = !0;\n        break;\n      }\n    }\n\n    if (!h && (i.push(c), i.length >= n)) break;\n  }\n\n  return xn(i, \"int32\");\n}\n\nfunction go(t, e, n) {\n  var r = t.subarray(4 * e, 4 * e + 4),\n      o = t.subarray(4 * n, 4 * n + 4),\n      a = Math.min(r[0], r[2]),\n      i = Math.min(r[1], r[3]),\n      s = Math.max(r[0], r[2]),\n      u = Math.max(r[1], r[3]),\n      l = Math.min(o[0], o[2]),\n      c = Math.min(o[1], o[3]),\n      h = Math.max(o[0], o[2]),\n      p = Math.max(o[1], o[3]),\n      f = (s - a) * (u - i),\n      d = (h - l) * (p - c);\n  if (f <= 0 || d <= 0) return 0;\n  var v = Math.max(a, l),\n      m = Math.max(i, c),\n      g = Math.min(s, h),\n      y = Math.min(u, p),\n      x = Math.max(g - v, 0) * Math.max(y - m, 0);\n  return x / (f + d - x);\n}\n\nfunction yo(t, e, n) {\n  var r = new Array(t.rank).fill(0),\n      o = t.shape.slice();\n  return e.map(function (e) {\n    o[n] = e;\n    var a = t.slice(r, o);\n    return r[n] += e, a;\n  });\n}\n\nfunction xo(t, e) {\n  for (var n = new Array(t.rank), r = 0; r < n.length; r++) n[r] = t.shape[r] * e[r];\n\n  var o = Xn(n, t.dtype);\n\n  for (r = 0; r < o.values.length; ++r) {\n    for (var a = o.indexToLoc(r), i = new Array(t.rank), s = 0; s < i.length; s++) i[s] = a[s] % t.shape[s];\n\n    var u = t.locToIndex(i);\n    o.values[r] = t.values[u];\n  }\n\n  return o.toTensor();\n}\n\nfunction bo(t, e, n, r, o) {\n  for (var a = e[e.length - 1], i = [t.length / a, a], s = i[0], u = i[1], l = k(n, s * r), c = k(\"int32\", s * r), h = 0; h < s; h++) {\n    for (var p = h * u, f = t.subarray(p, p + u), d = [], v = 0; v < f.length; v++) d.push({\n      value: f[v],\n      index: v\n    });\n\n    d.sort(function (t, e) {\n      return e.value - t.value;\n    });\n    var m = h * r,\n        g = l.subarray(m, m + r),\n        y = c.subarray(m, m + r);\n\n    for (v = 0; v < r; v++) g[v] = d[v].value, y[v] = d[v].index;\n  }\n\n  var x = e.slice();\n  return x[x.length - 1] = r, [mn(l, x, n), mn(c, x, \"int32\")];\n}\n\nfunction wo(t, e) {\n  for (var n = [], r = 0; r < e.length; r++) e[r] && n.push(r);\n\n  var o = Xn(t, \"int32\"),\n      a = Xn([n.length, t.length], \"int32\");\n\n  for (r = 0; r < n.length; r++) {\n    var i = o.indexToLoc(n[r]),\n        s = r * t.length;\n    a.values.set(i, s);\n  }\n\n  return a.toTensor();\n}\n\nvar Co = function () {\n  return function (t, e) {\n    this.outputShape = [], this.outputShape = t, this.variableNames = e.map(function (t, e) {\n      return \"T\" + e;\n    });\n    var n = [];\n    this.variableNames.forEach(function (t) {\n      n.push(\"float v\" + t + \" = get\" + t + \"AtOutCoords();\");\n    });\n    var r = this.variableNames.map(function (t) {\n      return \"v\" + t;\n    }).join(\" + \");\n    this.userCode = \"\\n      void main() {\\n        \" + n.join(\"\\n        \") + \"\\n\\n        float result = \" + r + \";\\n        setOutput(result);\\n      }\\n    \";\n  };\n}(),\n    Eo = function () {\n  return function (t, e) {\n    this.outputShape = [], this.usesPackedTextures = !0, this.outputShape = t, this.variableNames = e.map(function (t, e) {\n      return \"T\" + e;\n    });\n    var n = [];\n    this.variableNames.forEach(function (t) {\n      n.push(\"vec4 v\" + t + \" = get\" + t + \"AtOutCoords();\");\n    });\n    var r = this.variableNames.map(function (t) {\n      return \"v\" + t;\n    }).join(\" + \");\n    this.userCode = \"\\n      void main() {\\n        \" + n.join(\"\\n        \") + \"\\n\\n        vec4 result = \" + r + \";\\n        setOutput(result);\\n      }\\n    \";\n  };\n}(),\n    Ro = function () {\n  return function (t, e, n) {\n    this.variableNames = [\"A\"];\n    var r = t.windowSize,\n        o = t.batchSize,\n        a = t.inSize,\n        i = Math.ceil(a / r);\n    n || this.variableNames.push(\"bestIndicesA\"), this.outputShape = [o, i];\n    var s = \"max\" === e ? \">\" : \"<\",\n        u = n ? \"inOffset + i;\" : \"round(getBestIndicesA(batch, inOffset + i));\";\n    this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + r + \";\\n\\n        int bestIndex = inOffset;\\n        float bestValue = getA(batch, bestIndex);\\n\\n        for (int i = 0; i < \" + r + \"; i++) {\\n          int inIdx = \" + u + \";\\n          float candidate = getA(batch, inIdx);\\n          if (candidate \" + s + \" bestValue) {\\n            bestValue = candidate;\\n            bestIndex = inIdx;\\n          }\\n        }\\n        setOutput(float(bestIndex));\\n      }\\n    \";\n  };\n}();\n\nfunction Io(t, e) {\n  return [\"x\", \"y\", \"z\", \"w\", \"u\", \"v\"].slice(0, e).map(function (e) {\n    return t + \".\" + e;\n  });\n}\n\nfunction So(t, e) {\n  return 1 === e ? [t] : Io(t, e);\n}\n\nfunction No() {\n  var t, e, n, r, o, a, i, u, l, c;\n  return 2 === s.getNumber(\"WEBGL_VERSION\") ? (t = \"#version 300 es\", e = \"in\", n = \"out\", r = \"in\", o = \"texture\", a = \"outputColor\", i = \"out vec4 outputColor;\", u = \"\\n      bool isnan_custom(float val) {\\n        return (val > 0. || val < 0. || val == 0.) ? false : true;\\n      }\\n    \", l = \"\\n      const float INFINITY = uintBitsToFloat(uint(0x7f800000));\\n    \", c = \"\\n      #define round(value) newRound(value)\\n      int newRound(float value) {\\n        return int(floor(value + 0.5));\\n      }\\n\\n      ivec4 newRound(vec4 value) {\\n        return ivec4(floor(value + vec4(0.5)));\\n      }\\n    \") : (t = \"\", e = \"attribute\", n = \"varying\", r = \"varying\", o = \"texture2D\", a = \"gl_FragColor\", i = \"\", u = \"\\n      bool isnan_custom(float val) {\\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\\n      }\\n    \", l = \"\\n      uniform float INFINITY;\\n\\n      bool isinf(float val) {\\n        return abs(val) == INFINITY;\\n      }\\n      bvec4 isinf(vec4 val) {\\n        return equal(abs(val), vec4(INFINITY));\\n      }\\n    \", c = \"\\n      int round(float value) {\\n        return int(floor(value + 0.5));\\n      }\\n\\n      ivec4 round(vec4 value) {\\n        return ivec4(floor(value + vec4(0.5)));\\n      }\\n    \"), {\n    version: t,\n    attribute: e,\n    varyingVs: n,\n    varyingFs: r,\n    texture2D: o,\n    output: a,\n    defineOutput: i,\n    defineSpecialNaN: u,\n    defineSpecialInf: l,\n    defineRound: c\n  };\n}\n\nfunction ko(t, e, n) {\n  void 0 === n && (n = \"index\");\n  var r = G(e);\n  return r.map(function (e, o) {\n    return \"int \" + t[o] + \" = \" + n + \" / \" + e + \"; \" + (o === r.length - 1 ? \"int \" + t[o + 1] + \" = \" + n + \" - \" + t[o] + \" * \" + e : \"index -= \" + t[o] + \" * \" + e) + \";\";\n  }).join(\"\");\n}\n\nfunction Ao(t) {\n  var e = G(t).map(function (t) {\n    return t.toString();\n  });\n  return \"\\n  int getFlatIndex(ivec3 coords) {\\n    return coords.x * \" + e[0] + \" + coords.y * \" + e[1] + \" + coords.z;\\n  }\\n\";\n}\n\nvar To = \"\\n  const float FLOAT_MAX = 1.70141184e38;\\n  const float FLOAT_MIN = 1.17549435e-38;\\n\\n  lowp vec4 encode_float(highp float v) {\\n    if (isnan(v)) {\\n      return vec4(255, 255, 255, 255);\\n    }\\n\\n    highp float av = abs(v);\\n\\n    if(av < FLOAT_MIN) {\\n      return vec4(0.0, 0.0, 0.0, 0.0);\\n    } else if(v > FLOAT_MAX) {\\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\\n    } else if(v < -FLOAT_MAX) {\\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\\n    }\\n\\n    highp vec4 c = vec4(0,0,0,0);\\n\\n    highp float e = floor(log2(av));\\n    highp float m = exp2(fract(log2(av))) - 1.0;\\n\\n    c[2] = floor(128.0 * m);\\n    m -= c[2] / 128.0;\\n    c[1] = floor(32768.0 * m);\\n    m -= c[1] / 32768.0;\\n    c[0] = floor(8388608.0 * m);\\n\\n    highp float ebias = e + 127.0;\\n    c[3] = floor(ebias / 2.0);\\n    ebias -= c[3] * 2.0;\\n    c[2] += floor(ebias) * 128.0;\\n\\n    c[3] += 128.0 * step(0.0, -v);\\n\\n    return c / 255.0;\\n  }\\n\";\n\nfunction Do(t, e, n, r) {\n  var o = [];\n  t.forEach(function (t) {\n    var e = y(t.shapeInfo.logicalShape);\n    t.shapeInfo.isUniform ? o.push(\"uniform float \" + t.name + (e > 1 ? \"[\" + e + \"]\" : \"\") + \";\") : (o.push(\"uniform sampler2D \" + t.name + \";\"), o.push(\"uniform int offset\" + t.name + \";\"));\n  });\n\n  var a,\n      i,\n      s = o.join(\"\\n\"),\n      u = t.map(function (t) {\n    return function (t, e, n) {\n      void 0 === n && (n = !1);\n      var r = \"\";\n      r += n ? Oo(t) : _o(t);\n      var o = t.shapeInfo.logicalShape,\n          a = e.logicalShape;\n      o.length <= a.length && (r += n ? function (t, e) {\n        var n,\n            r = t.name,\n            o = r.charAt(0).toUpperCase() + r.slice(1),\n            a = \"get\" + o + \"AtOutCoords\",\n            i = t.shapeInfo.logicalShape.length,\n            s = e.logicalShape.length,\n            u = Kr(t.shapeInfo.logicalShape, e.logicalShape),\n            l = Uo(s),\n            c = s - i,\n            h = [\"x\", \"y\", \"z\", \"w\", \"u\", \"v\"];\n        n = 0 === i ? \"\" : s < 2 && u.length >= 1 ? \"coords = 0;\" : u.map(function (t) {\n          return \"coords.\" + h[t + c] + \" = 0;\";\n        }).join(\"\\n\");\n        var p = \"\";\n        p = s < 2 && i > 0 ? \"coords\" : t.shapeInfo.logicalShape.map(function (t, e) {\n          return \"coords.\" + h[e + c];\n        }).join(\", \");\n        var f = \"return outputValue;\",\n            d = 1 === y(t.shapeInfo.logicalShape),\n            v = 1 === y(e.logicalShape);\n\n        if (1 !== i || d || v) {\n          if (d && !v) f = 1 === s ? \"\\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\\n      \" : \"\\n        return vec4(outputValue.x);\\n      \";else if (u.length) {\n            var m = i - 2,\n                g = i - 1;\n            u.indexOf(m) > -1 && u.indexOf(g) > -1 ? f = \"return vec4(outputValue.x);\" : u.indexOf(m) > -1 ? f = \"return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);\" : u.indexOf(g) > -1 && (f = \"return vec4(outputValue.xx, outputValue.zz);\");\n          }\n        } else f = \"\\n      return vec4(outputValue.xy, outputValue.xy);\\n    \";\n\n        return \"\\n    vec4 \" + a + \"() {\\n      \" + l + \" coords = getOutputCoords();\\n      \" + n + \"\\n      vec4 outputValue = get\" + o + \"(\" + p + \");\\n      \" + f + \"\\n    }\\n  \";\n      }(t, e) : function (t, e) {\n        var n = t.name,\n            r = n.charAt(0).toUpperCase() + n.slice(1),\n            o = \"get\" + r + \"AtOutCoords\",\n            a = e.texShape,\n            i = t.shapeInfo.texShape,\n            s = t.shapeInfo.logicalShape.length,\n            u = e.logicalShape.length;\n        if (!t.shapeInfo.isUniform && s === u && null == t.shapeInfo.flatOffset && x(i, a)) return \"\\n      float \" + o + \"() {\\n        return sampleTexture(\" + n + \", resultUV);\\n      }\\n    \";\n        var l,\n            c = Uo(u),\n            h = Kr(t.shapeInfo.logicalShape, e.logicalShape),\n            p = u - s,\n            f = [\"x\", \"y\", \"z\", \"w\", \"u\", \"v\"];\n        l = 0 === s ? \"\" : u < 2 && h.length >= 1 ? \"coords = 0;\" : h.map(function (t) {\n          return \"coords.\" + f[t + p] + \" = 0;\";\n        }).join(\"\\n\");\n        var d = \"\";\n        d = u < 2 && s > 0 ? \"coords\" : t.shapeInfo.logicalShape.map(function (t, e) {\n          return \"coords.\" + f[e + p];\n        }).join(\", \");\n        return \"\\n    float \" + o + \"() {\\n      \" + c + \" coords = getOutputCoords();\\n      \" + l + \"\\n      return get\" + r + \"(\" + d + \");\\n    }\\n  \";\n      }(t, e));\n      return r;\n    }(t, e, r);\n  }).join(\"\\n\"),\n      l = e.texShape,\n      c = No(),\n      h = function (t) {\n    return \"\\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\\n      return \" + t.texture2D + \"(textureSampler, uv).r;\\n    }\\n  \";\n  }(c),\n      p = function (t) {\n    return t.version + \"\\n    precision highp float;\\n    precision highp int;\\n    precision highp sampler2D;\\n    \" + t.varyingFs + \" vec2 resultUV;\\n    \" + t.defineOutput + \"\\n    const vec2 halfCR = vec2(0.5, 0.5);\\n\\n    struct ivec5\\n    {\\n      int x;\\n      int y;\\n      int z;\\n      int w;\\n      int u;\\n    };\\n\\n    struct ivec6\\n    {\\n      int x;\\n      int y;\\n      int z;\\n      int w;\\n      int u;\\n      int v;\\n    };\\n\\n    uniform float NAN;\\n    #define isnan(value) isnan_custom(value)\\n    \" + t.defineSpecialNaN + \"\\n    bvec4 isnan_custom(vec4 val) {\\n      return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\\n    }\\n\\n    \" + t.defineSpecialInf + \"\\n    \" + t.defineRound + \"\\n\\n    int imod(int x, int y) {\\n      return x - y * (x / y);\\n    }\\n\\n    int idiv(int a, int b, float sign) {\\n      int res = a / b;\\n      int mod = imod(a, b);\\n      if (sign < 0. && mod != 0) {\\n        res -= 1;\\n      }\\n      return res;\\n    }\\n\\n    //Based on the work of Dave Hoskins\\n    //https://www.shadertoy.com/view/4djSRW\\n    #define HASHSCALE1 443.8975\\n    float random(float seed){\\n      vec2 p = resultUV * seed;\\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\\n      p3 += dot(p3, p3.yzx + 19.19);\\n      return fract((p3.x + p3.y) * p3.z);\\n    }\\n\\n    \" + Mo + \"\\n    \" + Fo + \"\\n    \" + Bo + \"\\n  \";\n  }(c);\n\n  return e.isPacked ? (a = function (t, e) {\n    switch (t.length) {\n      case 0:\n        return \"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  \";\n\n      case 1:\n        return function (t, e) {\n          var n = [Math.ceil(e[0] / 2), Math.ceil(e[1] / 2)];\n          if (1 === n[0]) return \"\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.x * \" + n[1] + \".0);\\n      }\\n    \";\n          if (1 === n[1]) return \"\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.y * \" + n[0] + \".0);\\n      }\\n    \";\n          return \"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + n[0] + \", \" + n[1] + \"));\\n      return 2 * (resTexRC.x * \" + n[1] + \" + resTexRC.y);\\n    }\\n  \";\n        }(0, e);\n\n      case 2:\n        return function (t, e) {\n          var n = [Math.ceil(e[0] / 2), Math.ceil(e[1] / 2)];\n          if (x(t, e)) return \"\\n      ivec2 getOutputCoords() {\\n        return 2 * ivec2(resultUV.yx * vec2(\" + n[0] + \", \" + n[1] + \"));\\n      }\\n    \";\n          var r = Math.ceil(t[1] / 2);\n          return \"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + n[0] + \", \" + n[1] + \"));\\n\\n      int index = resTexRC.x * \" + n[1] + \" + resTexRC.y;\\n      int r = 2 * (index / \" + r + \");\\n      int c = imod(index, \" + r + \") * 2;\\n\\n      return ivec2(r, c);\\n    }\\n  \";\n        }(t, e);\n\n      case 3:\n        return n = t, r = e, o = [Math.ceil(r[0] / 2), Math.ceil(r[1] / 2)], a = Math.ceil(n[2] / 2), i = a * Math.ceil(n[1] / 2), \"\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + o[0] + \", \" + o[1] + \"));\\n      int index = resTexRC.x * \" + o[1] + \" + resTexRC.y;\\n\\n      int b = index / \" + i + \";\\n      index -= b * \" + i + \";\\n\\n      int r = 2 * (index / \" + a + \");\\n      int c = imod(index, \" + a + \") * 2;\\n\\n      return ivec3(b, r, c);\\n    }\\n  \";\n\n      default:\n        return function (t, e) {\n          for (var n = [Math.ceil(e[0] / 2), Math.ceil(e[1] / 2)], r = Math.ceil(t[t.length - 1] / 2), o = r * Math.ceil(t[t.length - 2] / 2), a = o, i = \"\", s = \"b, r, c\", u = 2; u < t.length - 1; u++) a *= t[t.length - u - 1], i = \"\\n      int b\" + u + \" = index / \" + a + \";\\n      index -= b\" + u + \" * \" + a + \";\\n    \" + i, s = \"b\" + u + \", \" + s;\n\n          return \"\\n    ivec\" + t.length + \" getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + n[0] + \", \" + n[1] + \"));\\n      int index = resTexRC.x * \" + n[1] + \" + resTexRC.y;\\n\\n      \" + i + \"\\n\\n      int b = index / \" + o + \";\\n      index -= b * \" + o + \";\\n\\n      int r = 2 * (index / \" + r + \");\\n      int c = imod(index, \" + r + \") * 2;\\n\\n      return ivec\" + t.length + \"(\" + s + \");\\n    }\\n  \";\n        }(t, e);\n    }\n\n    var n, r, o, a, i;\n  }(e.logicalShape, l), i = function (t) {\n    return \"\\n    void setOutput(vec4 val) {\\n      \" + t.output + \" = val;\\n    }\\n  \";\n  }(c)) : (a = function (t, e) {\n    switch (t.length) {\n      case 0:\n        return \"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  \";\n\n      case 1:\n        return function (t, e) {\n          if (1 === e[0]) return \"\\n      int getOutputCoords() {\\n        return int(resultUV.x * \" + e[1] + \".0);\\n      }\\n    \";\n          if (1 === e[1]) return \"\\n      int getOutputCoords() {\\n        return int(resultUV.y * \" + e[0] + \".0);\\n      }\\n    \";\n          return \"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + e[0] + \", \" + e[1] + \"));\\n      return resTexRC.x * \" + e[1] + \" + resTexRC.y;\\n    }\\n  \";\n        }(0, e);\n\n      case 2:\n        return function (t, e) {\n          if (x(t, e)) return \"\\n      ivec2 getOutputCoords() {\\n        return ivec2(resultUV.yx * vec2(\" + e[0] + \", \" + e[1] + \"));\\n      }\\n    \";\n          if (1 === t[1]) return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\" + e[0] + \", \" + e[1] + \"));\\n        int index = resTexRC.x * \" + e[1] + \" + resTexRC.y;\\n        return ivec2(index, 0);\\n      }\\n    \";\n          if (1 === t[0]) return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\" + e[0] + \", \" + e[1] + \"));\\n        int index = resTexRC.x * \" + e[1] + \" + resTexRC.y;\\n        return ivec2(0, index);\\n      }\\n    \";\n          return \"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + e[0] + \", \" + e[1] + \"));\\n      int index = resTexRC.x * \" + e[1] + \" + resTexRC.y;\\n      int r = index / \" + t[1] + \";\\n      int c = index - r * \" + t[1] + \";\\n      return ivec2(r, c);\\n    }\\n  \";\n        }(t, e);\n\n      case 3:\n        return n = e, r = ko([\"r\", \"c\", \"d\"], t), \"\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + n[0] + \", \" + n[1] + \"));\\n      int index = resTexRC.x * \" + n[1] + \" + resTexRC.y;\\n      \" + r + \"\\n      return ivec3(r, c, d);\\n    }\\n  \";\n\n      case 4:\n        return function (t, e) {\n          var n = ko([\"r\", \"c\", \"d\", \"d2\"], t);\n          return \"\\n    ivec4 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(\" + e[0] + \", \" + e[1] + \"));\\n      int index = resTexRC.x * \" + e[1] + \" + resTexRC.y;\\n      \" + n + \"\\n      return ivec4(r, c, d, d2);\\n    }\\n  \";\n        }(t, e);\n\n      case 5:\n        return function (t, e) {\n          var n = ko([\"r\", \"c\", \"d\", \"d2\", \"d3\"], t);\n          return \"\\n    ivec5 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(\" + e[0] + \",\\n                             \" + e[1] + \"));\\n\\n      int index = resTexRC.x * \" + e[1] + \" + resTexRC.y;\\n\\n      \" + n + \"\\n\\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\\n      return outShape;\\n    }\\n  \";\n        }(t, e);\n\n      case 6:\n        return function (t, e) {\n          var n = ko([\"r\", \"c\", \"d\", \"d2\", \"d3\", \"d4\"], t);\n          return \"\\n    ivec6 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(\" + e[0] + \", \" + e[1] + \"));\\n      int index = resTexRC.x * \" + e[1] + \" + resTexRC.y;\\n\\n      \" + n + \"\\n\\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\\n      return result;\\n    }\\n  \";\n        }(t, e);\n\n      default:\n        throw new Error(t.length + \"-D output sampling is not yet supported\");\n    }\n\n    var n, r;\n  }(e.logicalShape, l), i = function (t) {\n    return \"\\n    void setOutput(float val) {\\n      \" + t.output + \" = vec4(val, 0, 0, 0);\\n    }\\n  \";\n  }(c)), r && (p += Po), [p, h, i, s, a, u, n].join(\"\\n\");\n}\n\nfunction _o(t) {\n  var e = t.shapeInfo.logicalShape;\n\n  switch (e.length) {\n    case 0:\n      return function (t) {\n        var e = t.name,\n            n = \"get\" + e.charAt(0).toUpperCase() + e.slice(1);\n        if (t.shapeInfo.isUniform) return \"float \" + n + \"() {return \" + e + \";}\";\n        var r = t.shapeInfo.texShape,\n            o = r[0],\n            a = r[1];\n        if (1 === o && 1 === a) return \"\\n      float \" + n + \"() {\\n        return sampleTexture(\" + e + \", halfCR);\\n      }\\n    \";\n        var i = t.shapeInfo.texShape,\n            s = i[0],\n            u = i[1],\n            l = Lo(e);\n        return \"\\n    float \" + n + \"() {\\n      vec2 uv = uvFromFlat(\" + s + \", \" + u + \", \" + l + \");\\n      return sampleTexture(\" + e + \", uv);\\n    }\\n  \";\n      }(t);\n\n    case 1:\n      return function (t) {\n        var e = t.name,\n            n = \"get\" + e.charAt(0).toUpperCase() + e.slice(1);\n        if (t.shapeInfo.isUniform) return \"\\n      float \" + n + \"(int index) {\\n        \" + Wo(t) + \"\\n      }\\n    \";\n        var r = t.shapeInfo.texShape,\n            o = r[0],\n            a = r[1];\n        if (1 === a && 1 === o) return \"\\n      float \" + n + \"(int index) {\\n        return sampleTexture(\" + e + \", halfCR);\\n      }\\n    \";\n        var i = Lo(e);\n        if (1 === a) return \"\\n      float \" + n + \"(int index) {\\n        vec2 uv = vec2(0.5, (float(index + \" + i + \") + 0.5) / \" + o + \".0);\\n        return sampleTexture(\" + e + \", uv);\\n      }\\n    \";\n        if (1 === o) return \"\\n      float \" + n + \"(int index) {\\n        vec2 uv = vec2((float(index + \" + i + \") + 0.5) / \" + a + \".0, 0.5);\\n        return sampleTexture(\" + e + \", uv);\\n      }\\n    \";\n        return \"\\n    float \" + n + \"(int index) {\\n      vec2 uv = uvFromFlat(\" + o + \", \" + a + \", index + \" + i + \");\\n      return sampleTexture(\" + e + \", uv);\\n    }\\n  \";\n      }(t);\n\n    case 2:\n      return function (t) {\n        var e = t.shapeInfo.logicalShape,\n            n = t.name,\n            r = \"get\" + n.charAt(0).toUpperCase() + n.slice(1),\n            o = t.shapeInfo.texShape;\n\n        if (null != o && x(e, o)) {\n          var a = o[0],\n              i = o[1];\n          return \"\\n    float \" + r + \"(int row, int col) {\\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(\" + i + \".0, \" + a + \".0);\\n      return sampleTexture(\" + n + \", uv);\\n    }\\n  \";\n        }\n\n        var s = N(e),\n            u = s.newShape,\n            l = s.keptDims,\n            c = u;\n\n        if (c.length < e.length) {\n          var h = zo(t, c);\n          return \"\\n      \" + _o(h) + \"\\n      float \" + r + \"(int row, int col) {\\n        return \" + r + \"(\" + Vo([\"row\", \"col\"], l) + \");\\n      }\\n    \";\n        }\n\n        if (t.shapeInfo.isUniform) return \"\\n      float \" + r + \"(int row, int col) {\\n        int index = round(dot(vec2(row, col), vec2(\" + e[1] + \", 1)));\\n        \" + Wo(t) + \"\\n      }\\n    \";\n        var p = o[0],\n            f = o[1],\n            d = Lo(n);\n        if (1 === f) return \"\\n    float \" + r + \"(int row, int col) {\\n      float index = dot(vec3(row, col, \" + d + \"), vec3(\" + e[1] + \", 1, 1));\\n      vec2 uv = vec2(0.5, (index + 0.5) / \" + p + \".0);\\n      return sampleTexture(\" + n + \", uv);\\n    }\\n  \";\n        if (1 === p) return \"\\n    float \" + r + \"(int row, int col) {\\n      float index = dot(vec3(row, col, \" + d + \"), vec3(\" + e[1] + \", 1, 1));\\n      vec2 uv = vec2((index + 0.5) / \" + f + \".0, 0.5);\\n      return sampleTexture(\" + n + \", uv);\\n    }\\n  \";\n        return \"\\n  float \" + r + \"(int row, int col) {\\n    // Explicitly use integer operations as dot() only works on floats.\\n    int index = row * \" + e[1] + \" + col + \" + d + \";\\n    vec2 uv = uvFromFlat(\" + p + \", \" + f + \", index);\\n    return sampleTexture(\" + n + \", uv);\\n  }\\n\";\n      }(t);\n\n    case 3:\n      return function (t) {\n        var e = t.shapeInfo.logicalShape,\n            n = t.name,\n            r = \"get\" + n.charAt(0).toUpperCase() + n.slice(1),\n            o = e[1] * e[2],\n            a = e[2],\n            i = N(e),\n            s = i.newShape,\n            u = i.keptDims,\n            l = s;\n\n        if (l.length < e.length) {\n          var c = zo(t, l);\n          return \"\\n        \" + _o(c) + \"\\n        float \" + r + \"(int row, int col, int depth) {\\n          return \" + r + \"(\" + Vo([\"row\", \"col\", \"depth\"], u) + \");\\n        }\\n      \";\n        }\n\n        if (t.shapeInfo.isUniform) return \"\\n      float \" + r + \"(int row, int col, int depth) {\\n        int index = round(dot(vec3(row, col, depth),\\n                          vec3(\" + o + \", \" + a + \", 1)));\\n        \" + Wo(t) + \"\\n      }\\n    \";\n        var h = t.shapeInfo.texShape,\n            p = h[0],\n            f = h[1],\n            d = t.shapeInfo.flatOffset;\n        if (f === o && null == d) return \"\\n        float \" + r + \"(int row, int col, int depth) {\\n          float texR = float(row);\\n          float texC = dot(vec2(col, depth), vec2(\" + a + \", 1));\\n          vec2 uv = (vec2(texC, texR) + halfCR) /\\n                     vec2(\" + f + \".0, \" + p + \".0);\\n          return sampleTexture(\" + n + \", uv);\\n        }\\n      \";\n        if (f === a && null == d) return \"\\n    float \" + r + \"(int row, int col, int depth) {\\n      float texR = dot(vec2(row, col), vec2(\" + e[1] + \", 1));\\n      float texC = float(depth);\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + f + \".0, \" + p + \".0);\\n      return sampleTexture(\" + n + \", uv);\\n    }\\n  \";\n        var v = Lo(n);\n        return \"\\n      float \" + r + \"(int row, int col, int depth) {\\n        // Explicitly use integer operations as dot() only works on floats.\\n        int index = row * \" + o + \" + col * \" + a + \" + depth + \" + v + \";\\n        vec2 uv = uvFromFlat(\" + p + \", \" + f + \", index);\\n        return sampleTexture(\" + n + \", uv);\\n      }\\n  \";\n      }(t);\n\n    case 4:\n      return function (t) {\n        var e = t.shapeInfo.logicalShape,\n            n = t.name,\n            r = \"get\" + n.charAt(0).toUpperCase() + n.slice(1),\n            o = e[3],\n            a = e[2] * o,\n            i = e[1] * a,\n            s = N(e),\n            u = s.newShape,\n            l = s.keptDims;\n\n        if (u.length < e.length) {\n          var c = zo(t, u);\n          return \"\\n      \" + _o(c) + \"\\n      float \" + r + \"(int row, int col, int depth, int depth2) {\\n        return \" + r + \"(\" + Vo([\"row\", \"col\", \"depth\", \"depth2\"], l) + \");\\n      }\\n    \";\n        }\n\n        if (t.shapeInfo.isUniform) return \"\\n      float \" + r + \"(int row, int col, int depth, int depth2) {\\n        int index = round(dot(vec4(row, col, depth, depth2),\\n                          vec4(\" + i + \", \" + a + \", \" + o + \", 1)));\\n        \" + Wo(t) + \"\\n      }\\n    \";\n        var h = t.shapeInfo.flatOffset,\n            p = t.shapeInfo.texShape,\n            f = p[0],\n            d = p[1];\n        if (d === i && null == h) return \"\\n      float \" + r + \"(int row, int col, int depth, int depth2) {\\n        float texR = float(row);\\n        float texC =\\n            dot(vec3(col, depth, depth2),\\n                vec3(\" + a + \", \" + o + \", 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\" + d + \".0, \" + f + \".0);\\n        return sampleTexture(\" + n + \", uv);\\n      }\\n    \";\n        if (d === o && null == h) return \"\\n      float \" + r + \"(int row, int col, int depth, int depth2) {\\n        float texR = dot(vec3(row, col, depth),\\n                         vec3(\" + e[1] * e[2] + \", \" + e[2] + \", 1));\\n        float texC = float(depth2);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\" + d + \".0, \" + f + \".0);\\n        return sampleTexture(\" + n + \", uv);\\n      }\\n    \";\n        var v = Lo(n);\n        return \"\\n    float \" + r + \"(int row, int col, int depth, int depth2) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * \" + i + \" + col * \" + a + \" +\\n          depth * \" + o + \" + depth2;\\n      vec2 uv = uvFromFlat(\" + f + \", \" + d + \", index + \" + v + \");\\n      return sampleTexture(\" + n + \", uv);\\n    }\\n  \";\n      }(t);\n\n    case 5:\n      return function (t) {\n        var e = t.shapeInfo.logicalShape,\n            n = t.name,\n            r = \"get\" + n.charAt(0).toUpperCase() + n.slice(1),\n            o = e[4],\n            a = e[3] * o,\n            i = e[2] * a,\n            s = e[1] * i,\n            u = N(e),\n            l = u.newShape,\n            c = u.keptDims;\n\n        if (l.length < e.length) {\n          var h = zo(t, l);\n          return \"\\n      \" + _o(h) + \"\\n      float \" + r + \"(int row, int col, int depth, int depth2, int depth3) {\\n        return \" + r + \"(\" + Vo([\"row\", \"col\", \"depth\", \"depth2\", \"depth3\"], c) + \");\\n      }\\n    \";\n        }\n\n        if (t.shapeInfo.isUniform) return \"\\n      float \" + r + \"(int row, int col, int depth, int depth2, int depth3) {\\n        float index = dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(\" + s + \", \" + i + \", \" + a + \", \" + o + \")) +\\n          depth3;\\n        \" + Wo(t) + \"\\n      }\\n    \";\n        var p = t.shapeInfo.flatOffset,\n            f = t.shapeInfo.texShape,\n            d = f[0],\n            v = f[1];\n        if (v === s && null == p) return \"\\n      float \" + r + \"(int row, int col, int depth, int depth2, int depth3) {\\n        int texR = row;\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\n                         vec4(\" + i + \", \" + a + \", \" + o + \", 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\" + v + \".0, \" + d + \".0);\\n        return sampleTexture(\" + n + \", uv);\\n      }\\n    \";\n        if (v === o && null == p) return \"\\n      float \" + r + \"(int row, int col, int depth, int depth2, int depth3) {\\n        float texR = dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(\" + e[1] * e[2] * e[3] + \",\\n               \" + e[2] * e[3] + \", \" + e[3] + \", 1));\\n        int texC = depth3;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\" + v + \".0, \" + d + \".0);\\n        return sampleTexture(\" + n + \", uv);\\n      }\\n    \";\n        var m = Lo(n);\n        return \"\\n    float \" + r + \"(int row, int col, int depth, int depth2, int depth3) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * \" + s + \" + col * \" + i + \" + depth * \" + a + \" +\\n          depth2 * \" + o + \" + depth3 + \" + m + \";\\n      vec2 uv = uvFromFlat(\" + d + \", \" + v + \", index);\\n      return sampleTexture(\" + n + \", uv);\\n    }\\n  \";\n      }(t);\n\n    case 6:\n      return function (t) {\n        var e = t.shapeInfo.logicalShape,\n            n = t.name,\n            r = \"get\" + n.charAt(0).toUpperCase() + n.slice(1),\n            o = N(e),\n            a = o.newShape,\n            i = o.keptDims;\n\n        if (a.length < e.length) {\n          var s = zo(t, a);\n          return \"\\n      \" + _o(s) + \"\\n      float \" + r + \"(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        return \" + r + \"(\" + Vo([\"row\", \"col\", \"depth\", \"depth2\", \"depth3\", \"depth4\"], i) + \");\\n      }\\n    \";\n        }\n\n        var u = e[5],\n            l = e[4] * u,\n            c = e[3] * l,\n            h = e[2] * c,\n            p = e[1] * h;\n        if (t.shapeInfo.isUniform) return \"\\n      float \" + r + \"(int row, int col, int depth,\\n                  int depth2, int depth3, int depth4) {\\n        int index = round(dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(\" + p + \", \" + h + \", \" + c + \", \" + l + \")) +\\n          dot(\\n            vec2(depth3, depth4),\\n            vec2(\" + u + \", 1)));\\n        \" + Wo(t) + \"\\n      }\\n    \";\n        var f = t.shapeInfo.flatOffset,\n            d = t.shapeInfo.texShape,\n            v = d[0],\n            m = d[1];\n        if (m === p && null == f) return \"\\n      float \" + r + \"(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        int texR = row;\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\n          vec4(\" + h + \", \" + c + \", \" + l + \", \" + u + \")) +\\n               float(depth4);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\" + m + \".0, \" + v + \".0);\\n        return sampleTexture(\" + n + \", uv);\\n      }\\n    \";\n        if (m === u && null == f) return \"\\n      float \" + r + \"(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        float texR = dot(vec4(row, col, depth, depth2),\\n          vec4(\" + e[1] * e[2] * e[3] * e[4] + \",\\n               \" + e[2] * e[3] * e[4] + \",\\n               \" + e[3] * e[4] + \",\\n               \" + e[4] + \")) + float(depth3);\\n        int texC = depth4;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\" + m + \".0, \" + v + \".0);\\n        return sampleTexture(\" + n + \", uv);\\n      }\\n    \";\n        var g = Lo(n);\n        return \"\\n    float \" + r + \"(int row, int col, int depth,\\n                  int depth2, int depth3, int depth4) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * \" + p + \" + col * \" + h + \" + depth * \" + c + \" +\\n          depth2 * \" + l + \" + depth3 * \" + u + \" + depth4 + \" + g + \";\\n      vec2 uv = uvFromFlat(\" + v + \", \" + m + \", index);\\n      return sampleTexture(\" + n + \", uv);\\n    }\\n  \";\n      }(t);\n\n    default:\n      throw new Error(e.length + \"-D input sampling is not yet supported\");\n  }\n}\n\nfunction Oo(t) {\n  var e, n, r;\n\n  switch (t.shapeInfo.logicalShape.length) {\n    case 0:\n      return e = t.name, n = \"get\" + e.charAt(0).toUpperCase() + e.slice(1), r = No(), \"\\n    vec4 \" + n + \"() {\\n      return \" + r.texture2D + \"(\" + e + \", halfCR);\\n    }\\n  \";\n\n    case 1:\n      return function (t) {\n        var e = t.name,\n            n = \"get\" + e.charAt(0).toUpperCase() + e.slice(1),\n            r = t.shapeInfo.texShape,\n            o = [Math.ceil(r[0] / 2), Math.ceil(r[1] / 2)],\n            a = No();\n        return \"\\n    vec4 \" + n + \"(int index) {\\n      vec2 uv = packedUVfrom1D(\\n        \" + o[0] + \", \" + o[1] + \", index);\\n      return \" + a.texture2D + \"(\" + e + \", uv);\\n    }\\n  \";\n      }(t);\n\n    case 2:\n      return function (t) {\n        var e = t.shapeInfo.logicalShape,\n            n = t.name,\n            r = \"get\" + n.charAt(0).toUpperCase() + n.slice(1),\n            o = t.shapeInfo.texShape,\n            a = o[0],\n            i = o[1],\n            s = No();\n        if (null != o && x(e, o)) return \"\\n      vec4 \" + r + \"(int row, int col) {\\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(\" + i + \".0, \" + a + \".0);\\n\\n        return \" + s.texture2D + \"(\" + n + \", uv);\\n      }\\n    \";\n        var u = [Math.ceil(o[0] / 2), Math.ceil(o[1] / 2)],\n            l = Math.ceil(e[1] / 2);\n        return \"\\n    vec4 \" + r + \"(int row, int col) {\\n      vec2 uv = packedUVfrom2D(\" + l + \", \" + u[0] + \", \" + u[1] + \", row, col);\\n      return \" + s.texture2D + \"(\" + n + \", uv);\\n    }\\n  \";\n      }(t);\n\n    case 3:\n      return function (t) {\n        var e = t.shapeInfo.logicalShape,\n            n = t.name,\n            r = \"get\" + n.charAt(0).toUpperCase() + n.slice(1),\n            o = t.shapeInfo.texShape,\n            a = [Math.ceil(o[0] / 2), Math.ceil(o[1] / 2)];\n\n        if (1 === e[0]) {\n          var i = e.slice(1),\n              s = zo(t, i);\n          return \"\\n        \" + Oo(s) + \"\\n        vec4 \" + r + \"(int b, int row, int col) {\\n          return \" + r + \"(\" + Vo([\"b\", \"row\", \"col\"], [1, 2]) + \");\\n        }\\n      \";\n        }\n\n        var u = a[0],\n            l = a[1],\n            c = Math.ceil(e[2] / 2),\n            h = c * Math.ceil(e[1] / 2),\n            p = No();\n        return \"\\n    vec4 \" + r + \"(int b, int row, int col) {\\n      vec2 uv = packedUVfrom3D(\\n        \" + u + \", \" + l + \", \" + h + \", \" + c + \", b, row, col);\\n      return \" + p.texture2D + \"(\" + n + \", uv);\\n    }\\n  \";\n      }(t);\n\n    default:\n      return function (t) {\n        for (var e = t.shapeInfo.logicalShape, n = e.length, r = t.name, o = \"get\" + r.charAt(0).toUpperCase() + r.slice(1), a = t.shapeInfo.texShape, i = [Math.ceil(a[0] / 2), Math.ceil(a[1] / 2)], s = i[0], u = i[1], l = Math.ceil(e[n - 1] / 2), c = l * Math.ceil(e[n - 2] / 2), h = \"int b, int row, int col\", p = \"b * \" + c + \" + (row / 2) * \" + l + \" + (col / 2)\", f = 2; f < n - 1; f++) h = \"int b\" + f + \", \" + h, c *= e[n - f - 1], p = \"b\" + f + \" * \" + c + \" + \" + p;\n\n        var d = No();\n        return \"\\n    vec4 \" + o + \"(\" + h + \") {\\n      int index = \" + p + \";\\n      int texR = index / \" + u + \";\\n      int texC = index - texR * \" + u + \";\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + u + \", \" + s + \");\\n      return \" + d.texture2D + \"(\" + r + \", uv);\\n    }\\n  \";\n      }(t);\n  }\n}\n\nvar Mo = \"\\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\\n  int texelIndex = index / 2;\\n  int texR = texelIndex / texNumC;\\n  int texC = texelIndex - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\",\n    Fo = \"\\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\\n  int texNumC, int row, int col) {\\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\\n  int texR = texelIndex / texNumC;\\n  int texC = texelIndex - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\",\n    Bo = \"\\nvec2 packedUVfrom3D(int texNumR, int texNumC,\\n    int texelsInBatch, int texelsInLogicalRow, int b,\\n    int row, int col) {\\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\",\n    Po = \"\\n  float getChannel(vec4 frag, vec2 innerDims) {\\n    vec2 modCoord = mod(innerDims, 2.);\\n    return modCoord.x == 0. ?\\n      (modCoord.y == 0. ? frag.r : frag.g) :\\n      (modCoord.y == 0. ? frag.b : frag.a);\\n  }\\n  float getChannel(vec4 frag, int dim) {\\n    float modCoord = mod(float(dim), 2.);\\n    return modCoord == 0. ? frag.r : frag.g;\\n  }\\n\";\n\nfunction Lo(t) {\n  return \"offset\" + t;\n}\n\nfunction Wo(t) {\n  var e = t.name,\n      n = y(t.shapeInfo.logicalShape);\n  return n < 2 ? \"return \" + e + \";\" : \"\\n    for (int i = 0; i < \" + n + \"; i++) {\\n      if (i == index) {\\n        return \" + e + \"[i];\\n      }\\n    }\\n  \";\n}\n\nfunction Uo(t) {\n  if (t <= 1) return \"int\";\n  if (2 === t) return \"ivec2\";\n  if (3 === t) return \"ivec3\";\n  if (4 === t) return \"ivec4\";\n  if (5 === t) return \"ivec5\";\n  if (6 === t) return \"ivec6\";\n  throw Error(\"GPU for rank \" + t + \" is not yet supported\");\n}\n\nfunction zo(t, e) {\n  var n = JSON.parse(JSON.stringify(t));\n  return n.shapeInfo.logicalShape = e, n;\n}\n\nfunction Vo(t, e) {\n  return e.map(function (e) {\n    return t[e];\n  }).join(\", \");\n}\n\nvar Go = function () {\n  return function (t, e, n, r) {\n    this.variableNames = [\"A\"], this.usesPackedTextures = !0, d(t.length > 2, function () {\n      return \"Packed arg\" + (n.charAt(0).toUpperCase() + n.slice(1)) + \" supports only inputs with rank above 2.\";\n    });\n    var o = t[t.length - 1],\n        a = Math.ceil(o / e);\n    this.outputShape = t.slice(0, -1), a > 1 && this.outputShape.push(a), r || this.variableNames.push(\"bestIndicesA\");\n    var i,\n        s,\n        u = this.outputShape,\n        l = u.length,\n        c = Uo(l),\n        h = So(\"coords\", l);\n\n    if (1 === a) {\n      var p = Uo(s = l + 1);\n      i = \"\\n        \" + p + \" sourceLocR = \" + p + \"(\" + h.join() + \", 0);\\n        ++\" + h[l - 1] + \";\\n        \" + p + \" sourceLocG = \" + p + \"(\" + h.join() + \", 0);\\n        ++\" + h[l - 2] + \";\\n        \" + p + \" sourceLocA = \" + p + \"(\" + h.join() + \", 0);\\n        --\" + h[l - 1] + \";\\n        \" + p + \" sourceLocB = \" + p + \"(\" + h.join() + \", 0);\\n        --\" + h[l - 2] + \";\";\n    } else s = l, i = \"\\n        \" + c + \" sourceLocR = coords;\\n        ++\" + h[l - 1] + \";\\n        \" + c + \" sourceLocG = coords;\\n        ++\" + h[l - 2] + \";\\n        \" + c + \" sourceLocA = coords;\\n        --\" + h[l - 1] + \";\\n        \" + c + \" sourceLocB = coords;\\n        --\" + h[l - 2] + \";\";\n\n    var f = [\"x\", \"y\", \"z\", \"w\", \"u\", \"v\"].slice(0, s),\n        v = \".\" + f[s - 1],\n        m = f.map(function (t) {\n      return \"int \" + t;\n    }),\n        g = So(\"sourceLocR\", s - 1).concat(\"inIdx.r\"),\n        y = So(\"sourceLocG\", s - 1).concat(\"inIdx.g\"),\n        x = So(\"sourceLocB\", s - 1).concat(\"inIdx.b\"),\n        b = So(\"sourceLocA\", s - 1).concat(\"inIdx.a\"),\n        w = \"max\" === n ? \"greaterThan\" : \"lessThan\",\n        C = r ? \"\" : \"\\n          inIdx = round(vec4(getBestIndicesAChannel(\" + g.join() + \"),\\n                             getBestIndicesAChannel(\" + y.join() + \"),\\n                             getBestIndicesAChannel(\" + x.join() + \"),\\n                             getBestIndicesAChannel(\" + b.join() + \")));\",\n        E = \"vec4(\\n            getAChannel(\" + g.join() + \"),\\n            hasNextCol ? getAChannel(\" + y.join() + \") : 0.,\\n            hasNextRow ? getAChannel(\" + x.join() + \") : 0.,\\n            hasNextRow && hasNextCol ? getAChannel(\" + b.join() + \") : 0.)\",\n        R = r ? \"\" : \"\\n      float getBestIndicesAChannel(\" + m.join() + \") {\\n        return getChannel(getBestIndicesA(\" + f.join() + \"),\\n                                          vec2(\" + f.slice(-2).join() + \"));\\n      }\";\n    this.userCode = \"\\n      float getAChannel(\" + m.join() + \") {\\n        return getChannel(getA(\" + f.join() + \"),\\n                               vec2(\" + f.slice(-2).join() + \"));\\n      }\\n      \" + R + \"\\n      void main() {\\n        \" + c + \" coords = getOutputCoords();\\n        bool hasNextCol = \" + h[l - 1] + \" < \" + (u[l - 1] - 1) + \";\\n        bool hasNextRow = \" + h[l - 2] + \" < \" + (u[l - 2] - 1) + \";\\n        \" + i + \"\\n        ivec4 srcIdx = ivec4(sourceLocR\" + v + \", sourceLocG\" + v + \",\\n          sourceLocB\" + v + \", sourceLocA\" + v + \") * \" + e + \";\\n        ivec4 inIdx = srcIdx;\\n        vec4 bestIndex = vec4(inIdx);\\n        vec4 bestValue = \" + E + \";\\n\\n        for (int i = 0; i < \" + e + \"; i++) {\\n          inIdx = srcIdx;\\n          \" + C + \"\\n          vec4 candidate = \" + E + \";\\n          bvec4 nan = isnan(candidate);\\n          bvec4 replace = bvec4(\\n            vec4(\" + w + \"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\\n\\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\\n                           replace.y  ? candidate.y : bestValue.y,\\n                           replace.z  ? candidate.z : bestValue.z,\\n                           replace.w  ? candidate.w : bestValue.w);\\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\\n          srcIdx++;\\n        }\\n        setOutput(bestIndex);\\n      }\\n    \";\n  };\n}(),\n    qo = function () {\n  return function (t) {\n    this.variableNames = [\"dy\"], this.outputShape = t.inShape;\n    var e = t.filterHeight,\n        n = t.filterWidth,\n        r = t.strideHeight,\n        o = t.strideWidth,\n        a = t.dilationHeight,\n        i = t.dilationWidth,\n        s = t.effectiveFilterHeight,\n        u = t.effectiveFilterWidth,\n        l = s - 1 - t.padInfo.top,\n        c = u - 1 - t.padInfo.left,\n        h = 1 / (e * n);\n    this.userCode = \"\\n      const ivec2 pads = ivec2(\" + l + \", \" + c + \");\\n      const float avgMultiplier = float(\" + h + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + s + \";\\n            wR += \" + a + \") {\\n          float dyR = float(dyRCorner + wR) / \" + r + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + t.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \" + u + \";\\n            wC+= \" + i + \") {\\n            float dyC = float(dyCCorner + wC) / \" + o + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + t.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n\\n            dotProd += dyValue * avgMultiplier;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n  };\n}(),\n    Ho = function () {\n  return function (t, e, n, r, o, a) {\n    this.outputShape = [], this.variableNames = [\"x\", \"mean\", \"variance\"], Yr(t, e), Yr(t, n);\n    var i = \"0.0\";\n    null != r && (Yr(t, r), this.variableNames.push(\"offset\"), i = \"getOffsetAtOutCoords()\");\n    var s = \"1.0\";\n    null != o && (Yr(t, o), this.variableNames.push(\"scale\"), s = \"getScaleAtOutCoords()\"), this.outputShape = t, this.userCode = \"\\n      void main() {\\n        float x = getXAtOutCoords();\\n        float mean = getMeanAtOutCoords();\\n        float variance = getVarianceAtOutCoords();\\n        float offset = \" + i + \";\\n        float scale = \" + s + \";\\n        float inv = scale * inversesqrt(variance + float(\" + a + \"));\\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\\n      }\\n    \";\n  };\n}(),\n    $o = function () {\n  return function (t, e, n, r, o, a) {\n    this.usesPackedTextures = !0, this.variableNames = [\"x\", \"mean\", \"variance\"], Yr(t, e), Yr(t, n);\n    var i = \"vec4(0.0)\";\n    null != r && (Yr(t, r), this.variableNames.push(\"offset\"), i = \"getOffsetAtOutCoords()\");\n    var s = \"vec4(1.0)\";\n    null != o && (Yr(t, o), this.variableNames.push(\"scale\"), s = \"getScaleAtOutCoords()\"), this.outputShape = t, this.userCode = \"\\n      void main() {\\n        vec4 offset = \" + i + \";\\n        vec4 scale = \" + s + \";\\n\\n        vec4 x = getXAtOutCoords();\\n        vec4 mean = getMeanAtOutCoords();\\n        vec4 variance = getVarianceAtOutCoords();\\n\\n        vec4 inv = scale * inversesqrt(variance + vec4(\" + a + \"));\\n\\n        setOutput((x - mean) * inv + offset);\\n      }\\n    \";\n  };\n}(),\n    jo = \"return areal * breal - aimag * bimag;\",\n    Ko = \"return areal * bimag + aimag * breal;\",\n    Xo = function () {\n  return function (t, e, n) {\n    this.variableNames = [\"AReal\", \"AImag\", \"BReal\", \"BImag\"], this.outputShape = Yr(e, n), this.userCode = \"\\n      float binaryOpComplex(\\n          float areal, float aimag, float breal, float bimag) {\\n        \" + t + \"\\n      }\\n\\n      void main() {\\n        float areal = getARealAtOutCoords();\\n        float aimag = getAImagAtOutCoords();\\n        float breal = getBRealAtOutCoords();\\n        float bimag = getBImagAtOutCoords();\\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\\n      }\\n    \";\n  };\n}(),\n    Yo = \"return a + b;\",\n    Qo = \"return a - b;\",\n    Jo = \"return a * b;\",\n    Zo = function () {\n  return function (t, e, n) {\n    this.variableNames = [\"A\", \"B\"], this.outputShape = Yr(e, n), this.userCode = \"\\n      float binaryOperation(float a, float b) {\\n        \" + t + \"\\n      }\\n\\n      void main() {\\n        float a = getAAtOutCoords();\\n        float b = getBAtOutCoords();\\n        setOutput(binaryOperation(a, b));\\n      }\\n    \";\n  };\n}(),\n    ta = function () {\n  return function (t, e, n, r) {\n    void 0 === r && (r = !1), this.variableNames = [\"A\", \"B\"], this.supportsBroadcasting = !0, this.usesPackedTextures = !0, this.outputShape = Yr(e, n);\n    var o = this.outputShape.length,\n        a = \"\";\n    if (r) if (0 === o || 1 === y(this.outputShape)) a = \"\\n          result.y = 0.;\\n          result.z = 0.;\\n          result.w = 0.;\\n        \";else if (a = \"\\n          \" + Uo(o) + \" coords = getOutputCoords();\\n        \", 1 === o) a += \"\\n            result.y = (coords + 1) >= \" + this.outputShape[0] + \" ? 0. : result.y;\\n            result.z = 0.;\\n            result.w = 0.;\\n          \";else {\n      var i = So(\"coords\", o);\n      a += \"\\n            bool nextRowOutOfBounds =\\n              (\" + i[o - 2] + \" + 1) >= \" + this.outputShape[o - 2] + \";\\n            bool nextColOutOfBounds =\\n              (\" + i[o - 1] + \" + 1) >= \" + this.outputShape[o - 1] + \";\\n            result.y = nextColOutOfBounds ? 0. : result.y;\\n            result.z = nextRowOutOfBounds ? 0. : result.z;\\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\\n          \";\n    }\n    this.userCode = \"\\n      vec4 binaryOperation(vec4 a, vec4 b) {\\n        \" + t + \"\\n      }\\n\\n      void main() {\\n        vec4 a = getAAtOutCoords();\\n        vec4 b = getBAtOutCoords();\\n\\n        vec4 result = binaryOperation(a, b);\\n        \" + a + \"\\n\\n        setOutput(result);\\n      }\\n    \";\n  };\n}(),\n    ea = function () {\n  function t(t) {\n    this.variableNames = [\"A\"], this.outputShape = t, this.userCode = \"\\n      uniform float min;\\n      uniform float max;\\n\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isnan(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, min, max));\\n      }\\n    \";\n  }\n\n  return t.prototype.getCustomSetupFunc = function (t, e) {\n    var n = this;\n    return function (r, o) {\n      null == n.minLoc && (n.minLoc = r.getUniformLocationNoThrow(o, \"min\"), n.maxLoc = r.getUniformLocationNoThrow(o, \"max\")), r.gl.uniform1f(n.minLoc, t), r.gl.uniform1f(n.maxLoc, e);\n    };\n  }, t;\n}(),\n    na = function () {\n  function t(t) {\n    this.variableNames = [\"A\"], this.usesPackedTextures = !0, this.outputShape = t, this.userCode = \"\\n      uniform float min;\\n      uniform float max;\\n\\n      void main() {\\n        vec4 value = getAAtOutCoords();\\n\\n        if (any(isnan(value))) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, vec4(min), vec4(max)));\\n      }\\n    \";\n  }\n\n  return t.prototype.getCustomSetupFunc = function (t, e) {\n    var n = this;\n    return function (r, o) {\n      null == n.minLoc && (n.minLoc = r.getUniformLocationNoThrow(o, \"min\"), n.maxLoc = r.getUniformLocationNoThrow(o, \"max\")), r.gl.uniform1f(n.minLoc, t), r.gl.uniform1f(n.maxLoc, e);\n    };\n  }, t;\n}(),\n    ra = function () {\n  return function (t) {\n    this.variableNames = [\"real\", \"imag\"], this.outputShape = t, this.userCode = \"\\n      void main() {\\n        float re = abs(getRealAtOutCoords());\\n        float im = abs(getImagAtOutCoords());\\n        float mx = max(re, im);\\n\\n        // sadly the length function in glsl is not underflow-safe\\n        // (at least not on Intel GPUs). So the safe solution is\\n        // to ensure underflow-safety in all cases.\\n        setOutput(\\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\\n        );\\n      }\\n    \";\n  };\n}(),\n    oa = function () {\n  return function (t) {\n    this.outputShape = [], this.outputShape = hn(t, 1), this.variableNames = t.map(function (t, e) {\n      return \"T\" + e;\n    });\n    var e = new Array(t.length - 1);\n    e[0] = t[0][1];\n\n    for (var n = 1; n < e.length; n++) e[n] = e[n - 1] + t[n][1];\n\n    var r = [\"if (yC < \" + e[0] + \") setOutput(getT0(yR, yC));\"];\n\n    for (n = 1; n < e.length; n++) {\n      var o = e[n - 1];\n      r.push(\"else if (yC < \" + e[n] + \") setOutput(getT\" + n + \"(yR, yC-\" + o + \"));\");\n    }\n\n    var a = e.length,\n        i = e[e.length - 1];\n    r.push(\"else setOutput(getT\" + a + \"(yR, yC-\" + i + \"));\"), this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int yR = coords.x;\\n        int yC = coords.y;\\n\\n        \" + r.join(\"\\n        \") + \"\\n      }\\n    \";\n  };\n}(),\n    aa = function () {\n  return function (t, e) {\n    this.usesPackedTextures = !0, this.outputShape = [], this.outputShape = hn(t, e);\n    var n = this.outputShape,\n        r = n.length,\n        o = Uo(r),\n        a = So(\"coords\", r),\n        i = [\"x\", \"y\", \"z\", \"w\", \"u\", \"v\"].slice(0, r);\n    this.variableNames = t.map(function (t, e) {\n      return \"T\" + e;\n    });\n    var s = new Array(t.length - 1);\n    s[0] = t[0][e];\n\n    for (var u = 1; u < s.length; u++) s[u] = s[u - 1] + t[u][e];\n\n    var l = i[e],\n        c = \"vec2(\" + i.slice(-2).join() + \")\",\n        h = i.join(),\n        p = \"if (\" + l + \" < \" + s[0] + \")\\n          return getChannel(getT0(\" + h + \"), \" + c + \");\";\n\n    for (u = 1; u < s.length; u++) {\n      var f = s[u - 1];\n      p += \"\\n        else if (\" + l + \" < \" + s[u] + \") {\\n          \" + l + \" -= \" + f + \";\\n          return getChannel(getT\" + u + \"(\" + h + \"), \" + c + \");\\n        }\";\n    }\n\n    var d = s.length;\n    p += \"\\n        else {\\n          \" + l + \" -= \" + s[s.length - 1] + \";\\n          return getChannel(getT\" + d + \"(\" + h + \"), \" + c + \");\\n        }\", this.userCode = \"\\n      float getValue(\" + i.map(function (t) {\n      return \"int \" + t;\n    }) + \") {\\n        \" + p + \"\\n      }\\n\\n      void main() {\\n        \" + o + \" coords = getOutputCoords();\\n        vec4 result = vec4(getValue(\" + a + \"), 0., 0., 0.);\\n        if (++\" + a[r - 1] + \" < \" + n[r - 1] + \") {\\n          result.g = getValue(\" + a + \");\\n        }\\n        if (++\" + a[r - 2] + \" < \" + n[r - 2] + \") {\\n          result.a = getValue(\" + a + \");\\n        }\\n        if (\" + a[r - 2] + \" < \" + n[r - 2] + \" &&\\n            --\" + a[r - 1] + \" < \" + n[r - 1] + \") {\\n          result.b = getValue(\" + a + \");\\n        }\\n        setOutput(result);\\n      }\\n    \";\n  };\n}(),\n    ia = function () {\n  return function (t) {\n    this.variableNames = [\"x\", \"dy\"], this.outputShape = t.filterShape;\n    var e = t.strideHeight,\n        n = t.strideWidth,\n        r = t.padInfo.top,\n        o = t.padInfo.left;\n    this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int d2 = coords.w;\\n\\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < \" + t.batchSize + \"; b++) {\\n          for (int yR = 0; yR < \" + t.outHeight + \"; yR++) {\\n            int xR = wR + yR * \" + e + \" - \" + r + \";\\n\\n            if (xR < 0 || xR >= \" + t.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < \" + t.outWidth + \"; yC++) {\\n              int xC = wC + yC * \" + n + \" - \" + o + \";\\n\\n              if (xC < 0 || xC >= \" + t.inWidth + \") {\\n                continue;\\n              }\\n\\n              float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n  };\n}(),\n    sa = function () {\n  return function (t) {\n    this.variableNames = [\"dy\", \"W\"], this.outputShape = t.inShape;\n    var e = t.filterHeight,\n        n = t.filterWidth,\n        r = t.strideHeight,\n        o = t.strideWidth,\n        a = e - 1 - t.padInfo.top,\n        i = n - 1 - t.padInfo.left;\n    this.userCode = \"\\n      const ivec2 pads = ivec2(\" + a + \", \" + i + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n\\n        ivec2 dyCorner = coords.yz - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + e + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + r + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + t.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = \" + e + \" - 1 - wR;\\n\\n          for (int wC = 0; wC < \" + n + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + o + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + t.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = \" + n + \" - 1 - wC;\\n\\n            for (int d2 = 0; d2 < \" + t.outChannels + \"; d2++) {\\n              float xValue = getDy(batch, idyR, idyC, d2);\\n              float wValue = getW(wRPerm, wCPerm, d1, d2);\\n              dotProd += xValue * wValue;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n  };\n}(),\n    ua = function () {\n  return function (t) {\n    this.variableNames = [\"x\", \"dy\"], this.outputShape = t.filterShape;\n    var e = t.strideDepth,\n        n = t.strideHeight,\n        r = t.strideWidth,\n        o = t.padInfo.front,\n        a = t.padInfo.top,\n        i = t.padInfo.left;\n    this.userCode = \"\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int wF = coords.x;\\n        int wR = coords.y;\\n        int wC = coords.z;\\n        int d1 = coords.w;\\n        int d2 = coords.u;\\n\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < \" + t.batchSize + \"; b++) {\\n          for (int yF = 0; yF < \" + t.outDepth + \"; yF++) {\\n            int xF = wF + yF * \" + e + \" - \" + o + \";\\n\\n            if (xF < 0 || xF >= \" + t.inDepth + \") {\\n              continue;\\n            }\\n\\n            for (int yR = 0; yR < \" + t.outHeight + \"; yR++) {\\n              int xR = wR + yR * \" + n + \" - \" + a + \";\\n\\n              if (xR < 0 || xR >= \" + t.inHeight + \") {\\n                continue;\\n              }\\n\\n              for (int yC = 0; yC < \" + t.outWidth + \"; yC++) {\\n                int xC = wC + yC * \" + r + \" - \" + i + \";\\n\\n                if (xC < 0 || xC >= \" + t.inWidth + \") {\\n                  continue;\\n                }\\n\\n                float dyValue = getDy(b, yF, yR, yC, d2);\\n                float xValue = getX(b, xF, xR, xC, d1);\\n                dotProd += (xValue * dyValue);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n  };\n}(),\n    la = function () {\n  return function (t) {\n    this.variableNames = [\"dy\", \"W\"], this.outputShape = t.inShape;\n    var e = t.filterDepth,\n        n = t.filterHeight,\n        r = t.filterWidth,\n        o = t.strideDepth,\n        a = t.strideHeight,\n        i = t.strideWidth,\n        s = e - 1 - t.padInfo.front,\n        u = n - 1 - t.padInfo.top,\n        l = r - 1 - t.padInfo.left;\n    this.userCode = \"\\n      const ivec3 pads = ivec3(\" + s + \", \" + u + \", \" + l + \");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d1 = coords.u;\\n\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyFCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < \" + e + \"; wF++) {\\n          float dyF = float(dyFCorner + wF) / \" + o + \".0;\\n\\n          if (dyF < 0.0 || dyF >= \" + t.outDepth + \".0 || fract(dyF) > 0.0) {\\n            continue;\\n          }\\n          int idyF = int(dyF);\\n\\n          int wFPerm = \" + e + \" - 1 - wF;\\n\\n          for (int wR = 0; wR < \" + n + \"; wR++) {\\n            float dyR = float(dyRCorner + wR) / \" + a + \".0;\\n\\n            if (dyR < 0.0 || dyR >= \" + t.outHeight + \".0 ||\\n              fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            int wRPerm = \" + n + \" - 1 - wR;\\n\\n            for (int wC = 0; wC < \" + r + \"; wC++) {\\n              float dyC = float(dyCCorner + wC) / \" + i + \".0;\\n\\n              if (dyC < 0.0 || dyC >= \" + t.outWidth + \".0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              int wCPerm = \" + r + \" - 1 - wC;\\n\\n              for (int d2 = 0; d2 < \" + t.outChannels + \"; d2++) {\\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n  };\n}(),\n    ca = function () {\n  return function (t) {\n    this.variableNames = [\"x\", \"dy\"], this.outputShape = t.filterShape;\n    var e = t.strideHeight,\n        n = t.strideWidth,\n        r = t.padInfo.top,\n        o = t.padInfo.left,\n        a = t.outChannels / t.inChannels;\n    this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int dm = coords.w;\\n        int d2 = d1 * \" + a + \" + dm;\\n\\n        float dotProd = 0.0;\\n\\n        // TODO: Vec4 over the batch size\\n        for (int b = 0; b < \" + t.batchSize + \"; b++) {\\n          for (int yR = 0; yR < \" + t.outHeight + \"; yR++) {\\n            int xR = wR + yR * \" + e + \" - \" + r + \";\\n\\n            if (xR < 0 || xR >= \" + t.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < \" + t.outWidth + \"; yC++) {\\n              int xC = wC + yC * \" + n + \" - \" + o + \";\\n\\n              if (xC < 0 || xC >= \" + t.inWidth + \") {\\n                continue;\\n              }\\n\\n              float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n  };\n}(),\n    ha = function () {\n  return function (t) {\n    this.variableNames = [\"dy\", \"W\"], this.outputShape = t.inShape;\n    var e = t.filterHeight,\n        n = t.filterWidth,\n        r = t.strideHeight,\n        o = t.strideWidth,\n        a = e - 1 - t.padInfo.top,\n        i = n - 1 - t.padInfo.left,\n        s = t.outChannels / t.inChannels;\n    this.userCode = \"\\n      const ivec2 pads = ivec2(\" + a + \", \" + i + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n        ivec2 dyCorner = coords.yz - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        float dotProd = 0.0;\\n\\n        for (int wR = 0; wR < \" + e + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + r + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + t.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = \" + e + \" - 1 - wR;\\n\\n          for (int wC = 0; wC < \" + n + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + o + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + t.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = \" + n + \" - 1 - wC;\\n\\n            // TODO: Vec4 over the channelMul\\n            for (int dm = 0; dm < \" + s + \"; dm++) {\\n              int d2 = d1 * \" + s + \" + dm;\\n              float xValue = getDy(batch, idyR, idyC, d2);\\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\\n              dotProd += xValue * wValue;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n  };\n}(),\n    pa = function () {\n  return function (t) {\n    this.variableNames = [\"x\", \"W\"], this.outputShape = t.outShape;\n    var e = t.padInfo.top,\n        n = t.padInfo.left,\n        r = t.strideHeight,\n        o = t.strideWidth,\n        a = t.dilationHeight,\n        i = t.dilationWidth,\n        s = t.filterHeight,\n        u = t.filterWidth,\n        l = 4 * Math.floor(t.inChannels / 4),\n        c = t.inChannels % 4;\n    this.userCode = \"\\n      const ivec2 strides = ivec2(\" + r + \", \" + o + \");\\n      const ivec2 pads = ivec2(\" + e + \", \" + n + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d2 = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + s + \"; wR++) {\\n          int xR = xRCorner + wR * \" + a + \";\\n\\n          if (xR < 0 || xR >= \" + t.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + u + \"; wC++) {\\n            int xC = xCCorner + wC * \" + i + \";\\n\\n            if (xC < 0 || xC >= \" + t.inWidth + \") {\\n              continue;\\n            }\\n\\n            for (int d1 = 0; d1 < \" + l + \"; d1 += 4) {\\n              vec4 xValues = vec4(\\n                getX(batch, xR, xC, d1),\\n                getX(batch, xR, xC, d1 + 1),\\n                getX(batch, xR, xC, d1 + 2),\\n                getX(batch, xR, xC, d1 + 3)\\n              );\\n              vec4 wValues = vec4(\\n                getW(wR, wC, d1, d2),\\n                getW(wR, wC, d1 + 1, d2),\\n                getW(wR, wC, d1 + 2, d2),\\n                getW(wR, wC, d1 + 3, d2)\\n              );\\n\\n              dotProd += dot(xValues, wValues);\\n            }\\n\\n            if (\" + (1 === c) + \") {\\n              dotProd +=\\n                getX(batch, xR, xC, \" + l + \") *\\n                getW(wR, wC, \" + l + \", d2);\\n            } else if (\" + (2 === c) + \") {\\n              vec2 xValues = vec2(\\n                getX(batch, xR, xC, \" + l + \"),\\n                getX(batch, xR, xC, \" + l + \" + 1)\\n              );\\n              vec2 wValues = vec2(\\n                getW(wR, wC, \" + l + \", d2),\\n                getW(wR, wC, \" + l + \" + 1, d2)\\n              );\\n              dotProd += dot(xValues, wValues);\\n            } else if (\" + (3 === c) + \") {\\n              vec3 xValues = vec3(\\n                getX(batch, xR, xC, \" + l + \"),\\n                getX(batch, xR, xC, \" + l + \" + 1),\\n                getX(batch, xR, xC, \" + l + \" + 2)\\n              );\\n              vec3 wValues = vec3(\\n                getW(wR, wC, \" + l + \", d2),\\n                getW(wR, wC, \" + l + \" + 1, d2),\\n                getW(wR, wC, \" + l + \" + 2, d2)\\n              );\\n              dotProd += dot(xValues, wValues);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n  };\n}(),\n    fa = function () {\n  return function (t) {\n    this.variableNames = [\"x\", \"W\"], this.outputShape = t.outShape;\n    var e = t.padInfo.front,\n        n = t.padInfo.top,\n        r = t.padInfo.left,\n        o = t.strideDepth,\n        a = t.strideHeight,\n        i = t.strideWidth,\n        s = t.dilationDepth,\n        u = t.dilationHeight,\n        l = t.dilationWidth,\n        c = t.filterDepth,\n        h = t.filterHeight,\n        p = t.filterWidth,\n        f = 4 * Math.floor(t.inChannels / 4),\n        d = t.inChannels % 4;\n    this.userCode = \"\\n      const ivec3 strides = ivec3(\" + o + \", \" + a + \", \" + i + \");\\n      const ivec3 pads = ivec3(\" + e + \", \" + n + \", \" + r + \");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d2 = coords.u;\\n\\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n        int xFCorner = xFRCCorner.x;\\n        int xRCorner = xFRCCorner.y;\\n        int xCCorner = xFRCCorner.z;\\n\\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\\n        // values in that axis.\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < \" + c + \"; wF++) {\\n          int xF = xFCorner + wF * \" + s + \";\\n\\n          if (xF < 0 || xF >= \" + t.inDepth + \") {\\n            continue;\\n          }\\n\\n          for (int wR = 0; wR < \" + h + \"; wR++) {\\n            int xR = xRCorner + wR * \" + u + \";\\n\\n            if (xR < 0 || xR >= \" + t.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \" + p + \"; wC++) {\\n              int xC = xCCorner + wC * \" + l + \";\\n\\n              if (xC < 0 || xC >= \" + t.inWidth + \") {\\n                continue;\\n              }\\n\\n              for (int d1 = 0; d1 < \" + f + \"; d1 += 4) {\\n                vec4 xValues = vec4(\\n                  getX(batch, xF, xR, xC, d1),\\n                  getX(batch, xF, xR, xC, d1 + 1),\\n                  getX(batch, xF, xR, xC, d1 + 2),\\n                  getX(batch, xF, xR, xC, d1 + 3)\\n                );\\n                vec4 wValues = vec4(\\n                  getW(wF, wR, wC, d1, d2),\\n                  getW(wF, wR, wC, d1 + 1, d2),\\n                  getW(wF, wR, wC, d1 + 2, d2),\\n                  getW(wF, wR, wC, d1 + 3, d2)\\n                );\\n\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n              if (\" + (1 === d) + \") {\\n                dotProd +=\\n                  getX(batch, xF, xR, xC, \" + f + \") *\\n                  getW(wF, wR, wC, \" + f + \", d2);\\n              } else if (\" + (2 === d) + \") {\\n                vec2 xValues = vec2(\\n                  getX(batch, xF, xR, xC, \" + f + \"),\\n                  getX(batch, xF, xR, xC, \" + f + \" + 1)\\n                );\\n                vec2 wValues = vec2(\\n                  getW(wF, wR, wC, \" + f + \", d2),\\n                  getW(wF, wR, wC, \" + f + \" + 1, d2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else if (\" + (3 === d) + \") {\\n                vec3 xValues = vec3(\\n                  getX(batch, xF, xR, xC, \" + f + \"),\\n                  getX(batch, xF, xR, xC, \" + f + \" + 1),\\n                  getX(batch, xF, xR, xC, \" + f + \" + 2)\\n                );\\n                vec3 wValues = vec3(\\n                  getW(wF, wR, wC, \" + f + \", d2),\\n                  getW(wF, wR, wC, \" + f + \" + 1, d2),\\n                  getW(wF, wR, wC, \" + f + \" + 2, d2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n  };\n}(),\n    da = function () {\n  return function (t) {\n    this.variableNames = [\"x\", \"W\"], this.outputShape = t.outShape;\n    var e = t.inHeight,\n        n = t.inWidth,\n        r = t.padInfo.top,\n        o = t.padInfo.left,\n        a = t.strideHeight,\n        i = t.strideWidth,\n        s = t.dilationHeight,\n        u = t.dilationWidth,\n        l = t.filterHeight,\n        c = t.filterWidth,\n        h = t.outChannels / t.inChannels;\n    this.userCode = \"\\n      const ivec2 strides = ivec2(\" + a + \", \" + i + \");\\n      const ivec2 pads = ivec2(\" + r + \", \" + o + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / \" + h + \";\\n        int q = d2 - d1 * \" + h + \";\\n\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        // TODO(dsmilkov): Flatten the two for loops and vec4 the operations.\\n        for (int wR = 0; wR < \" + l + \"; wR++) {\\n          int xR = xRCorner + wR * \" + s + \";\\n\\n          if (xR < 0 || xR >= \" + e + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + c + \"; wC++) {\\n            int xC = xCCorner + wC * \" + u + \";\\n\\n            if (xC < 0 || xC >= \" + n + \") {\\n              continue;\\n            }\\n\\n            float xVal = getX(batch, xR, xC, d1);\\n            float wVal = getW(wR, wC, d1, q);\\n            dotProd += xVal * wVal;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n  };\n}(),\n    va = function () {\n  return function (t) {\n    this.variableNames = [\"x\", \"W\"], this.usesPackedTextures = !0, this.outputShape = t.outShape;\n\n    for (var e = t.inHeight, n = t.inWidth, r = t.padInfo.top, o = t.padInfo.left, a = t.strideHeight, i = t.strideWidth, s = t.dilationHeight, u = t.dilationWidth, l = t.filterHeight, c = t.filterWidth, h = c, f = \"int xR; int xC; int xCOffset;\", d = 0; d < l; d++) for (var v = 0; v < c; v++) f += \"\\n          vec4 xTexelR\" + d + \"C\" + 2 * v + \" = vec4(0.);\\n          vec4 wR\" + d + \"C\" + v + \" = vec4(0.);\\n          vec4 xR\" + d + \"C\" + v + \" = vec4(0.);\";\n\n    for (d = 0; d < l; d++) for (var m = 0; m < h; m++) {\n      if (f += \"\\n          xR = xRCorner + \" + d * s + \";\\n          xC = xCCorner + \" + (v = 2 * m) * u + \";\\n        \", 1 === i) {\n        if (v < c && (f += o % 2 == 1 ? \"\\n                xCOffset = xC + 1;\\n                if(xR >= 0 && xR < \" + e + \" && xCOffset >= 0 && xCOffset < \" + n + \") {\\n                  xTexelR\" + d + \"C\" + v + \" = getX(batch, xR, xCOffset, d1);\\n                } else {\\n                  xTexelR\" + d + \"C\" + v + \" = vec4(0.);\\n                }\\n\\n                xCOffset = xC + 1 - 2;\\n                if(xR >= 0 && xR < \" + e + \" && xCOffset >= 0 && xCOffset < \" + n + \") {\\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\\n                  xR\" + d + \"C\" + v + \" = vec4(previous.zw, xTexelR\" + d + \"C\" + v + \".xy);\\n                } else {\\n                  xR\" + d + \"C\" + v + \" = vec4(0, 0, xTexelR\" + d + \"C\" + v + \".xy);\\n                }\\n              \" : \"\\n                if(xR >= 0 && xR < \" + e + \" && xC >= 0 && xC < \" + n + \") {\\n                  xTexelR\" + d + \"C\" + v + \" = getX(batch, xR, xC, d1);\\n                } else {\\n                  xTexelR\" + d + \"C\" + v + \" = vec4(0.);\\n                }\\n\\n                xR\" + d + \"C\" + v + \" = xTexelR\" + d + \"C\" + v + \";\\n              \", v + 1 < c)) {\n          var g = o % 2 == 0 ? p(u) : u;\n          u % 2 == 0 && o % 2 == 1 || u % 2 != 0 && o % 2 != 1 ? (f += \"\\n                  xCOffset = xC + \" + o % 2 + \" + \" + g + \";\\n\\n                  if(xR >= 0 && xR < \" + e + \" &&\\n                    xCOffset >= 0 && xCOffset < \" + n + \") {\\n                    xTexelR\" + d + \"C\" + (v + 2) + \" = getX(batch, xR, xCOffset, d1);\\n                  }\\n                \", u > 1 && (f += \"\\n                    xCOffset -= 2;\\n                    if(xR >= 0 && xR < \" + e + \" &&\\n                      xCOffset >= 0 && xCOffset < \" + n + \") {\\n                      xTexelR\" + d + \"C\" + v + \" = getX(batch, xR, xCOffset, d1);\\n                    } else {\\n                      xTexelR\" + d + \"C\" + v + \" = vec4(0.);\\n                    }\\n                  \"), f += \"\\n                  xR\" + d + \"C\" + (v + 1) + \" = vec4(\\n                    xTexelR\" + d + \"C\" + v + \".zw, xTexelR\" + d + \"C\" + (v + 2) + \".xy);\\n                \") : f += \"\\n                  xCOffset = xC + \" + g + \";\\n\\n                  if(xR >= 0 && xR < \" + e + \" &&\\n                    xCOffset >= 0 && xCOffset < \" + n + \") {\\n                    xTexelR\" + d + \"C\" + (v + 2) + \" = getX(batch, xR, xCOffset, d1);\\n                  }\\n\\n                  xR\" + d + \"C\" + (v + 1) + \" = xTexelR\" + d + \"C\" + (v + 2) + \";\\n                \";\n        }\n      } else v < c && (f += \"\\n              if(xR >= 0 && xR < \" + e + \") {\\n            \", o % 2 == 1 ? (f += \"\\n                xCOffset = xC + 1 - \" + i + \";\\n                if(xCOffset >= 0 && xCOffset < \" + n + \") {\\n                  xTexelR\" + d + \"C\" + v + \" = getX(batch, xR, xCOffset, d1);\\n                } else {\\n                  xTexelR\" + d + \"C\" + v + \" = vec4(0.);\\n                }\\n\\n                if(xC + 1 >= 0 && xC + 1 < \" + n + \") {\\n                  xTexelR\" + d + \"C\" + (v + 2) + \" = getX(batch, xR, xC + 1, d1);\\n                } else {\\n                  xTexelR\" + d + \"C\" + (v + 2) + \" = vec4(0.);\\n                }\\n\\n                xR\" + d + \"C\" + v + \" = vec4(\\n                  xTexelR\" + d + \"C\" + v + \".zw, xTexelR\" + d + \"C\" + (v + 2) + \".zw);\\n              \", v + 1 < c && (f += \"\\n                  vec4 final = vec4(0.);\\n                  xCOffset = xC + 1 + \" + i + \";\\n                  if(xCOffset >= 0 && xCOffset < \" + n + \") {\\n                    final = getX(batch, xR, xCOffset, d1);\\n                  }\\n                  xR\" + d + \"C\" + (v + 1) + \" = vec4(xTexelR\" + d + \"C\" + (v + 2) + \".xy, final.xy);\\n                \")) : (f += \"\\n                if(xC >= 0 && xC < \" + n + \") {\\n                  xTexelR\" + d + \"C\" + v + \" = getX(batch, xR, xC, d1);\\n                } else {\\n                  xTexelR\" + d + \"C\" + v + \" = vec4(0.);\\n                }\\n\\n                xCOffset = xC + \" + i + \";\\n                if(xCOffset >= 0 && xCOffset < \" + n + \") {\\n                  xTexelR\" + d + \"C\" + (v + 2) + \" = getX(batch, xR, xCOffset, d1);\\n                } else {\\n                  xTexelR\" + d + \"C\" + (v + 2) + \" = vec4(0.);\\n                }\\n\\n                xR\" + d + \"C\" + v + \" = vec4(\\n                  xTexelR\" + d + \"C\" + v + \".xy, xTexelR\" + d + \"C\" + (v + 2) + \".xy);\\n              \", v + 1 < c && (f += \"\\n                  xR\" + d + \"C\" + (v + 1) + \" = vec4(\\n                    xTexelR\" + d + \"C\" + v + \".zw, xTexelR\" + d + \"C\" + (v + 2) + \".zw);\\n                \")), f += \"}\");\n\n      v < c && (f += \"\\n            vec4 wTexelR\" + d + \"C\" + v + \" = getW(\" + d + \", \" + v + \", d1, q);\\n            wR\" + d + \"C\" + v + \" = vec4(wTexelR\" + d + \"C\" + v + \".xz, wTexelR\" + d + \"C\" + v + \".xz);\\n          \", v + 1 < c && (f += \"\\n              vec4 wTexelR\" + d + \"C\" + (v + 1) + \" = getW(\" + d + \", \" + (v + 1) + \", d1, q);\\n              wR\" + d + \"C\" + (v + 1) + \" =\\n                vec4(wTexelR\" + d + \"C\" + (v + 1) + \".xz, wTexelR\" + d + \"C\" + (v + 1) + \".xz);\"));\n    }\n\n    for (d = 0; d < l; d++) for (v = 0; v < c; v++) f += \"result += xR\" + d + \"C\" + v + \" * wR\" + d + \"C\" + v + \";\";\n\n    this.userCode = \"\\n      const ivec2 strides = ivec2(\" + a + \", \" + i + \");\\n      const ivec2 pads = ivec2(\" + r + \", \" + o + \");\\n\\n      void main() {\\n\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2;\\n        int q = 0;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        vec4 result = vec4(0.);\\n\\n        \" + f + \"\\n\\n        setOutput(result);\\n      }\\n    \";\n  };\n}(),\n    ma = function () {\n  return function (t, e, n, r, o) {\n    this.variableNames = [\"Image\", \"Boxes\", \"BoxInd\"], this.outputShape = [];\n    var a = t[0],\n        i = t[1],\n        s = t[2],\n        u = t[3],\n        l = e[0],\n        c = n[0],\n        h = n[1];\n    this.outputShape = [l, c, h, u];\n    var p = \"bilinear\" === r ? 1 : 0,\n        f = [i - 1 + \".0\", s - 1 + \".0\"],\n        d = f[0],\n        v = f[1],\n        m = c > 1 ? [\"\" + (i - 1) / (c - 1), \"(y2-y1) * height_ratio\", \"y1*\" + d + \" + float(y)*(height_scale)\"] : [\"0.0\", \"0.0\", \"0.5 * (y1+y2) * \" + d],\n        g = m[0],\n        y = m[1],\n        x = m[2],\n        b = h > 1 ? [\"\" + (s - 1) / (h - 1), \"(x2-x1) * width_ratio\", \"x1*\" + v + \" + float(x)*(width_scale)\"] : [\"0.0\", \"0.0\", \"0.5 * (x1+x2) * \" + v],\n        w = b[0],\n        C = b[1],\n        E = b[2];\n    this.userCode = \"\\n      const float height_ratio = float(\" + g + \");\\n      const float width_ratio = float(\" + w + \");\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int y = coords[1];\\n        int x = coords[2];\\n        int d = coords[3];\\n\\n        // get box vals\\n        float y1 = getBoxes(b,0);\\n        float x1 = getBoxes(b,1);\\n        float y2 = getBoxes(b,2);\\n        float x2 = getBoxes(b,3);\\n\\n        // get image in batch index\\n        int bInd = round(getBoxInd(b));\\n        if(bInd < 0 || bInd >= \" + a + \") {\\n          return;\\n        }\\n\\n        float height_scale = \" + y + \";\\n        float width_scale = \" + C + \";\\n\\n        float in_y = \" + x + \";\\n        if( in_y < 0.0 || in_y > \" + d + \" ) {\\n          setOutput(float(\" + o + \"));\\n          return;\\n        }\\n        float in_x = \" + E + \";\\n        if( in_x < 0.0 || in_x > \" + v + \" ) {\\n          setOutput(float(\" + o + \"));\\n          return;\\n        }\\n\\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\\n        if(\" + p + \" == 1) {\\n          // Compute the four integer indices.\\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\\n\\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\\n\\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\\n\\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\\n          float newValue = top + (bottom - top) * fracCR.y;\\n          setOutput(newValue);\\n        } else {\\n          // Compute the coordinators of nearest neighbor point.\\n          ivec2 sourceNearestCR = ivec2(floor(\\n            sourceFracIndexCR + vec2(0.5,0.5)));\\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\\n          setOutput(newValue);\\n        }\\n      }\\n    \";\n  };\n}(),\n    ga = function () {\n  return function (t, e, n) {\n    this.variableNames = [\"x\"], this.outputShape = t;\n    var r = t.length,\n        o = t[t.length - 1],\n        a = n ? \"<\" : \">\";\n\n    this.userCode = \"\\n      int getIndex(int i) {\\n        \" + (n ? \"return \" + o + \" -i - 1;\" : \"return i;\") + \"\\n      }\\n\\n      void main() {\\n        \" + Uo(r) + \" coords = getOutputCoords();\\n        int end = \" + ya(r, \"coords\") + \";\\n        float val = 0.0;\\n        for (int i = \" + o + \" - 1; i >= 0; i -= 1) {\\n          int idx = getIndex(i);\\n          if (idx \" + a + \" end) {\\n            continue;\\n          }\\n          if (idx == end && \" + e + \") {\\n            continue;\\n          }\\n          \" + ya(r, \"coords\") + \" = idx;\\n          val += getX(\" + function (t, e) {\n      if (1 === t) return \"\" + e;\n      if (2 === t) return e + \".x, \" + e + \".y\";\n      if (3 === t) return e + \".x, \" + e + \".y, \" + e + \".z\";\n      if (4 === t) return e + \".x, \" + e + \".y, \" + e + \".z, \" + e + \".w\";\n      throw Error(\"Cumulative sum for rank \" + t + \" is not yet supported\");\n    }(r, \"coords\") + \");\\n        }\\n        setOutput(val);\\n      }\\n    \";\n  };\n}();\n\nfunction ya(t, e) {\n  if (1 === t) return \"\" + e;\n  if (2 === t) return e + \".y\";\n  if (3 === t) return e + \".z\";\n  if (4 === t) return e + \".w\";\n  throw Error(\"Cumulative sum for rank \" + t + \" is not yet supported\");\n}\n\nvar xa = function () {\n  return function (t, e) {\n    this.variableNames = [\"A\"];\n    var n = No();\n    this.outputShape = t, this.userCode = \"\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        \" + ko([\"r\", \"c\", \"d\"], t) + \"\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n          vec2(\" + e[0] + \", \" + e[1] + \"));\\n        int index = 4 * (resTexRC.x * \" + e[1] + \" + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getA(rc.x, rc.y, rc.z);\\n        }\\n\\n        \" + n.output + \" = result;\\n      }\\n    \";\n  };\n}(),\n    ba = function () {\n  return function (t, e) {\n    this.variableNames = [\"A\"], this.usesPackedTextures = !0;\n    var n = No();\n    this.outputShape = t, this.userCode = \"\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        \" + ko([\"r\", \"c\", \"d\"], t) + \"\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n          vec2(\" + e[0] + \", \" + e[1] + \"));\\n        int index = 4 * (resTexRC.x * \" + e[1] + \" + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\\n        }\\n\\n        \" + n.output + \" = result;\\n      }\\n    \";\n  };\n}(),\n    wa = function () {\n  function t(t, e, n) {\n    this.variableNames = [\"x\"], this.outputShape = [], this.outputShape = t, this.blockSize = e, this.dataFormat = n, this.userCode = \"\\n    void main() {\\n      ivec4 coords = getOutputCoords();\\n      int b = coords[0];\\n      int h = \" + this.getHeightCoordString() + \";\\n      int w = \" + this.getWidthCoordString() + \";\\n      int d = \" + this.getDepthCoordString() + \";\\n\\n      int in_h = h / \" + e + \";\\n      int offset_h = imod(h, \" + e + \");\\n      int in_w = w / \" + e + \";\\n      int offset_w = imod(w, \" + e + \");\\n      int offset_d = (offset_h * \" + e + \" + offset_w) *\\n        \" + this.getOutputDepthSize() + \";\\n      int in_d = d + offset_d;\\n\\n      float result = \" + this.getInputSamplingString() + \";\\n      setOutput(result);\\n    }\\n  \";\n  }\n\n  return t.prototype.getHeightCoordString = function () {\n    return \"NHWC\" === this.dataFormat ? \"coords[1]\" : \"coords[2]\";\n  }, t.prototype.getWidthCoordString = function () {\n    return \"NHWC\" === this.dataFormat ? \"coords[2]\" : \"coords[3]\";\n  }, t.prototype.getDepthCoordString = function () {\n    return \"NHWC\" === this.dataFormat ? \"coords[3]\" : \"coords[1]\";\n  }, t.prototype.getOutputDepthSize = function () {\n    return \"NHWC\" === this.dataFormat ? this.outputShape[3] : this.outputShape[1];\n  }, t.prototype.getInputSamplingString = function () {\n    return \"NHWC\" === this.dataFormat ? \"getX(b, in_h, in_w, in_d)\" : \"getX(b, in_d, in_h, in_w)\";\n  }, t;\n}(),\n    Ca = function () {\n  return function (t) {\n    this.variableNames = [\"A\"];\n    var e = No();\n    this.outputShape = t, this.userCode = \"\\n      \" + To + \"\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        \" + e.output + \" = encode_float(x);\\n      }\\n    \";\n  };\n}(),\n    Ea = function () {\n  return function (t) {\n    this.variableNames = [\"A\"], this.usesPackedTextures = !0;\n    var e = No();\n    this.outputShape = t, this.userCode = \"\\n      \" + To + \"\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\\n        \" + e.output + \" = encode_float(x);\\n      }\\n    \";\n  };\n}(),\n    Ra = function () {\n  return function (t, e, n) {\n    void 0 === n && (n = !1), this.variableNames = [\"A\"];\n    var r = No(),\n        o = e[0],\n        a = e[1];\n    this.outputShape = t;\n    var i = \"result\";\n    n && (i = \"floor(result * 255. + 0.5)\"), this.userCode = \"\\n      \" + Ao(t) + \"\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n\\n        int flatIndex = getFlatIndex(coords);\\n        int offset = imod(flatIndex, 4);\\n\\n        flatIndex = idiv(flatIndex, 4, 1.);\\n        \\n        int r = flatIndex / \" + a + \";\\n        int c = imod(flatIndex, \" + a + \");\\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(\" + a + \".0, \" + o + \".0);\\n        vec4 values = \" + r.texture2D + \"(A, uv);\\n\\n        float result;\\n\\n        if(offset == 0) {\\n          result = values[0];\\n        } else if(offset == 1) {\\n          result = values[1];\\n        } else if(offset == 2) {\\n          result = values[2];\\n        } else {\\n          result = values[3];\\n        }\\n\\n        \" + r.output + \" = vec4(\" + i + \", 0., 0., 0.);\\n      }\\n    \";\n  };\n}(),\n    Ia = function () {\n  return function (t, e, n) {\n    void 0 === n && (n = !1), this.variableNames = [\"A\"];\n    var r = No(),\n        o = e[0],\n        a = e[1];\n    this.outputShape = t;\n    var i = \"\",\n        s = \"result\";\n    n && (s = \"floor(result * 255. + 0.5)\");\n\n    for (var u = 0; u <= 1; u++) for (var l = 0; l <= 1; l++) {\n      var c = 2 * u + l;\n      i += \"\\n          localCoords = coords;\\n          if(localCoords[2] + \" + l + \" < \" + t[2] + \") {\\n            localCoords[2] += \" + l + \";\\n            if(localCoords[1] + \" + u + \" < \" + t[1] + \") {\\n              localCoords[1] += \" + u + \";\\n\\n              flatIndex = getFlatIndex(localCoords);\\n              offset = imod(flatIndex, 4);\\n    \\n              flatIndex = idiv(flatIndex, 4, 1.);\\n\\n              r = flatIndex / \" + a + \";\\n              c = imod(flatIndex, \" + a + \");\\n              uv = (vec2(c, r) + halfCR) / vec2(\" + a + \".0, \" + o + \".0);\\n              values = \" + r.texture2D + \"(A, uv);\\n\\n              if(offset == 0) {\\n                result[\" + c + \"] = values[0];\\n              } else if(offset == 1) {\\n                result[\" + c + \"] = values[1];\\n              } else if(offset == 2) {\\n                result[\" + c + \"] = values[2];\\n              } else {\\n                result[\" + c + \"] = values[3];\\n              }\\n            }\\n          }\\n        \";\n    }\n\n    this.userCode = \"\\n      \" + Ao(t) + \"\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n\\n        vec4 result = vec4(0.);\\n        int flatIndex, r, c, offset;\\n        ivec3 localCoords;\\n        vec2 uv;\\n        vec4 values;\\n        \\n        \" + i + \"\\n\\n        \" + r.output + \" = \" + s + \";\\n      }\\n    \";\n  };\n}(),\n    Sa = \"return real * expR - imag * expI;\",\n    Na = \"return real * expI + imag * expR;\",\n    ka = function () {\n  return function (t, e, n) {\n    this.variableNames = [\"real\", \"imag\"];\n    var r = e[1];\n    this.outputShape = e;\n    var o = n ? \"2.0 * \" + Math.PI : \"-2.0 * \" + Math.PI,\n        a = n ? r + \".0\" : \"1.0\";\n    this.userCode = \"\\n      const float exponentMultiplier = \" + o + \";\\n\\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\\n        \" + t + \"\\n      }\\n\\n      float mulMatDFT(int batch, int index) {\\n        float indexRatio = float(index) / float(\" + r + \");\\n        float exponentMultiplierTimesIndexRatio =\\n            exponentMultiplier * indexRatio;\\n\\n        float result = 0.0;\\n\\n        for (int i = 0; i < \" + r + \"; i++) {\\n          // x = (-2|2 * PI / N) * index * i;\\n          float x = exponentMultiplierTimesIndexRatio * float(i);\\n          float expR = cos(x);\\n          float expI = sin(x);\\n          float real = getReal(batch, i);\\n          float imag = getImag(batch, i);\\n\\n          result +=\\n              unaryOpComplex(real, expR, imag, expI) / \" + a + \";\\n        }\\n\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        setOutput(mulMatDFT(coords[0], coords[1]));\\n      }\\n    \";\n  };\n}(),\n    Aa = function () {\n  function t(t, e) {\n    this.outputShape = [], this.variableNames = [\"x\"], this.outputShape = t, this.userCode = \"\\n      uniform float value;\\n      void main() {\\n        // Input can be obtained from uniform value.\\n        setOutput(value);\\n      }\\n    \";\n  }\n\n  return t.prototype.getCustomSetupFunc = function (t) {\n    var e = this;\n    return function (n, r) {\n      null == e.valueLoc && (e.valueLoc = n.getUniformLocationNoThrow(r, \"value\")), n.gl.uniform1f(e.valueLoc, t);\n    };\n  }, t;\n}(),\n    Ta = function () {\n  return function (t) {\n    this.variableNames = [\"A\"];\n    var e = No(),\n        n = t[0],\n        r = t[1];\n    this.outputShape = t, this.userCode = \"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + r + \".0, \" + n + \".0);\\n\\n        vec4 values = \" + e.texture2D + \"(A, uv);\\n        float value;\\n        if (depth == 0) {\\n          value = values.r;\\n        } else if (depth == 1) {\\n          value = values.g;\\n        } else if (depth == 2) {\\n          value = values.b;\\n        } else if (depth == 3) {\\n          value = values.a;\\n        }\\n\\n        setOutput(floor(value * 255.0 + 0.5));\\n      }\\n    \";\n  };\n}(),\n    Da = function () {\n  return function (t) {\n    this.variableNames = [\"A\"];\n    var e = No(),\n        n = t[0],\n        r = t[1];\n    this.outputShape = t, this.userCode = \"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n\\n        vec4 result = vec4(0.);\\n\\n        for(int row=0; row<=1; row++) {\\n          for(int col=0; col<=1; col++) {\\n            texC = coords[1] + row;\\n            depth = coords[2] + col;\\n\\n            vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + r + \".0, \" + n + \".0);\\n            vec4 values = \" + e.texture2D + \"(A, uv);\\n            float value;\\n            if (depth == 0) {\\n              value = values.r;\\n            } else if (depth == 1) {\\n              value = values.g;\\n            } else if (depth == 2) {\\n              value = values.b;\\n            } else if (depth == 3) {\\n              value = values.a;\\n            }\\n\\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\\n          }\\n        }\\n\\n        \" + e.output + \" = result;\\n      }\\n    \";\n  };\n}(),\n    _a = function () {\n  return function (t, e, n) {\n    this.variableNames = [\"A\", \"indices\"];\n    var r = t.slice();\n    r[n] = e, this.outputShape = r, this.rank = r.length;\n\n    var o = Uo(this.rank),\n        a = function (t, e) {\n      var n = t.length;\n      if (n > 4) throw Error(\"Gather for rank \" + n + \" is not yet supported\");\n      if (1 === n) return \"int(getIndices(resRC))\";\n\n      for (var r = [\"resRC.x\", \"resRC.y\", \"resRC.z\", \"resRC.w\"], o = [], a = 0; a < t.length; a++) a === e ? o.push(\"int(getIndices(\" + r[a] + \"))\") : o.push(\"\" + r[a]);\n\n      return o.join();\n    }(t, n);\n\n    this.userCode = \"\\n      void main() {\\n        \" + o + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + a + \"));\\n      }\\n    \";\n  };\n}();\n\nvar Oa,\n    Ma,\n    Fa = function () {\n  return function (t, e, n) {\n    this.sliceDim = t, this.strides = e, this.variableNames = [\"x\", \"indices\"], this.outputShape = n;\n    var r = Uo(e.length),\n        o = Uo(n.length),\n        a = this.sliceDim > 1 ? \"strides[j]\" : \"strides\";\n    this.userCode = \"\\n        \" + r + \" strides = \" + r + \"(\" + this.strides + \");\\n         void main() {\\n          \" + o + \" coords = getOutputCoords();\\n          int flattenIndex = 0;\\n          for (int j = 0; j < \" + this.sliceDim + \"; j++) {\\n            int index = round(getIndices(coords[0], j));\\n            flattenIndex += index * \" + a + \";\\n          }\\n          setOutput(getX(flattenIndex, coords[1]));\\n        }\\n      \";\n  };\n}();\n\nfunction Ba(t, e) {\n  return [e, t];\n}\n\nfunction Pa(t) {\n  var e = y(t);\n  return C(Math.ceil(e / 4));\n}\n\nfunction La(t, e) {\n  return [Math.max(1, Math.ceil(e / 2)), Math.max(1, Math.ceil(t / 2))];\n}\n\nfunction Wa(t, e) {\n  var n = No();\n  return qt(t, e, n.version + \"\\n    precision highp float;\\n    \" + n.attribute + \" vec3 clipSpacePos;\\n    \" + n.attribute + \" vec2 uv;\\n    \" + n.varyingVs + \" vec2 resultUV;\\n\\n    void main() {\\n      gl_Position = vec4(clipSpacePos, 1);\\n      resultUV = uv;\\n    }\");\n}\n\nfunction Ua(t, e) {\n  return Jt(t, e, new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]));\n}\n\nfunction za(t, e) {\n  return Zt(t, e, new Uint16Array([0, 1, 2, 2, 1, 3]));\n}\n\nfunction Va(t, e) {\n  var n,\n      r,\n      o,\n      a,\n      i,\n      u,\n      l,\n      c,\n      h = t;\n  return 2 === s.getNumber(\"WEBGL_VERSION\") ? (n = h.R32F, r = h.R16F, o = h.RGBA16F, a = h.RGBA32F, i = h.RED, u = 4, l = 1, c = h.HALF_FLOAT) : (n = t.RGBA, r = t.RGBA, o = t.RGBA, a = h.RGBA, i = t.RGBA, u = 4, l = 4, c = null != e ? e.HALF_FLOAT_OES : null), {\n    internalFormatFloat: n,\n    internalFormatHalfFloat: r,\n    internalFormatPackedHalfFloat: o,\n    internalFormatPackedFloat: a,\n    textureFormatFloat: i,\n    downloadTextureFormat: t.RGBA,\n    downloadUnpackNumChannels: u,\n    defaultNumChannels: l,\n    textureTypeHalfFloat: c\n  };\n}\n\nfunction Ga(t, e, n, r, o, a, i) {\n  ee(n, r);\n  var s = te(t, e),\n      u = t.TEXTURE_2D;\n  return Lt(t, e, function () {\n    return t.bindTexture(u, s);\n  }), Lt(t, e, function () {\n    return t.texParameteri(u, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE);\n  }), Lt(t, e, function () {\n    return t.texParameteri(u, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE);\n  }), Lt(t, e, function () {\n    return t.texParameteri(u, t.TEXTURE_MIN_FILTER, t.NEAREST);\n  }), Lt(t, e, function () {\n    return t.texParameteri(u, t.TEXTURE_MAG_FILTER, t.NEAREST);\n  }), Lt(t, e, function () {\n    return t.texImage2D(u, 0, o, n, r, 0, a, i, null);\n  }), Lt(t, e, function () {\n    return t.bindTexture(t.TEXTURE_2D, null);\n  }), s;\n}\n\nfunction qa(t, e, n, r, o) {\n  var a = Ba(n, r);\n  return Ga(t, e, a[0], a[1], o.internalFormatFloat, o.textureFormatFloat, t.FLOAT);\n}\n\nfunction Ha(t, e, n, r, o) {\n  var a = Ba(n, r);\n  return Ga(t, e, a[0], a[1], o.internalFormatHalfFloat, o.textureFormatFloat, o.textureTypeHalfFloat);\n}\n\nfunction $a(t, e, n, r, o) {\n  var a = Ba(n, r);\n  return Ga(t, e, a[0], a[1], t.RGBA, t.RGBA, t.UNSIGNED_BYTE);\n}\n\nfunction ja(t, e, n, r, o) {\n  var a = La(n, r);\n  return Ga(t, e, a[0], a[1], o.internalFormatPackedFloat, t.RGBA, t.FLOAT);\n}\n\nfunction Ka(t, e, n, r, o) {\n  var a = La(n, r);\n  return Ga(t, e, a[0], a[1], o.internalFormatPackedHalfFloat, t.RGBA, o.textureTypeHalfFloat);\n}\n\nfunction Xa(t, e, n, r) {\n  return Lt(t, e, function () {\n    return t.bindBuffer(t.ARRAY_BUFFER, r);\n  }), re(t, e, n, \"clipSpacePos\", r, 3, 20, 0) && re(t, e, n, \"uv\", r, 2, 20, 12);\n}\n\nfunction Ya(t, e, n, r, o, a, i) {\n  var s, u, l;\n  Lt(t, e, function () {\n    return t.bindTexture(t.TEXTURE_2D, n);\n  }), a instanceof Uint8Array ? (s = new Uint8Array(r * o * 4), u = t.UNSIGNED_BYTE, l = t.RGBA) : (s = new Float32Array(r * o * 4), u = t.FLOAT, l = i.internalFormatPackedFloat), s.set(a), Lt(t, e, function () {\n    return t.texImage2D(t.TEXTURE_2D, 0, l, r, o, 0, t.RGBA, u, s);\n  }), Lt(t, e, function () {\n    return t.bindTexture(t.TEXTURE_2D, null);\n  });\n}\n\nfunction Qa(t, e, n, r) {\n  Lt(t, e, function () {\n    return t.bindTexture(t.TEXTURE_2D, n);\n  }), r.data instanceof Uint8Array ? Lt(t, e, function () {\n    return t.texImage2D(t.TEXTURE_2D, 0, t.RGBA, r.width, r.height, 0, t.RGBA, t.UNSIGNED_BYTE, r.data);\n  }) : Lt(t, e, function () {\n    return t.texImage2D(t.TEXTURE_2D, 0, t.RGBA, t.RGBA, t.UNSIGNED_BYTE, r);\n  }), Lt(t, e, function () {\n    return t.bindTexture(t.TEXTURE_2D, null);\n  });\n}\n\nfunction Ja(t, e, n, r, o) {\n  var a = t.createBuffer();\n  Lt(t, e, function () {\n    return t.bindBuffer(t.PIXEL_PACK_BUFFER, a);\n  });\n  var i = 16 * n * r;\n  return Lt(t, e, function () {\n    return t.bufferData(t.PIXEL_PACK_BUFFER, i, t.STREAM_READ);\n  }), Lt(t, e, function () {\n    return t.readPixels(0, 0, r, n, t.RGBA, t.FLOAT, 0);\n  }), Lt(t, e, function () {\n    return t.bindBuffer(t.PIXEL_PACK_BUFFER, null);\n  }), a;\n}\n\nfunction Za(t, e, n) {\n  var r = t,\n      o = new Float32Array(n);\n  return r.bindBuffer(r.PIXEL_PACK_BUFFER, e), r.getBufferSubData(r.PIXEL_PACK_BUFFER, 0, o), r.bindBuffer(r.PIXEL_PACK_BUFFER, null), o;\n}\n\nfunction ti(t, e, n, r, o) {\n  var a = Ba(n, r),\n      i = a[0],\n      s = a[1],\n      u = new Uint8Array(n * r * 4);\n  return Lt(t, e, function () {\n    return t.readPixels(0, 0, i, s, o.downloadTextureFormat, t.UNSIGNED_BYTE, u);\n  }), new Float32Array(u.buffer);\n}\n\nfunction ei(t, e, n, r, o, a, i, s) {\n  var u = t,\n      l = new Float32Array(function (t, e) {\n    var n = La(t, e);\n    return n[0] * n[1] * 4;\n  }(a, i));\n  return u.bindBuffer(u.PIXEL_PACK_BUFFER, e), u.getBufferSubData(u.PIXEL_PACK_BUFFER, 0, l), u.bindBuffer(u.PIXEL_PACK_BUFFER, null), l;\n}\n\nfunction ni(t, e, n, r) {\n  var o = new Float32Array(n * r * 4);\n  return Lt(t, e, function () {\n    return t.readPixels(0, 0, r, n, t.RGBA, t.FLOAT, o);\n  }), o;\n}\n\n!function (t) {\n  t[t.RENDER = 0] = \"RENDER\", t[t.UPLOAD = 1] = \"UPLOAD\", t[t.PIXELS = 2] = \"PIXELS\", t[t.DOWNLOAD = 3] = \"DOWNLOAD\";\n}(Oa || (Oa = {})), function (t) {\n  t[t.UNPACKED_FLOAT16 = 0] = \"UNPACKED_FLOAT16\", t[t.UNPACKED_FLOAT32 = 1] = \"UNPACKED_FLOAT32\", t[t.PACKED_4X1_UNSIGNED_BYTE = 2] = \"PACKED_4X1_UNSIGNED_BYTE\", t[t.PACKED_2X2_FLOAT32 = 3] = \"PACKED_2X2_FLOAT32\", t[t.PACKED_2X2_FLOAT16 = 4] = \"PACKED_2X2_FLOAT16\";\n}(Ma || (Ma = {}));\n\nvar ri = Object.freeze({\n  createVertexShader: Wa,\n  createVertexBuffer: Ua,\n  createIndexBuffer: za,\n  getTextureConfig: Va,\n  createFloat32MatrixTexture: qa,\n  createFloat16MatrixTexture: Ha,\n  createUnsignedBytesMatrixTexture: $a,\n  createPackedMatrixTexture: ja,\n  createFloat16PackedMatrixTexture: Ka,\n  bindVertexProgramAttributeStreams: Xa,\n  uploadDenseMatrixToTexture: Ya,\n  uploadPixelDataToTexture: Qa,\n  createBufferFromOutputTexture: Ja,\n  downloadFloat32MatrixFromBuffer: Za,\n  downloadByteEncodedFloatMatrixFromOutputTexture: ti,\n  downloadPackedMatrixFromBuffer: ei,\n  downloadMatrixFromPackedOutputTexture: ni\n}),\n    oi = function () {\n  function t(t) {\n    this.outputTexture = null, this.program = null, this.disposed = !1, this.vertexAttrsAreBound = !1, this.itemsToPoll = [];\n    var e = s.getNumber(\"WEBGL_VERSION\");\n    null != t ? (this.gl = t, Ft(e, t)) : this.gl = Bt(e), 1 === s.getNumber(\"WEBGL_VERSION\") ? (this.textureFloatExtension = Gt(this.gl, this.debug, \"OES_texture_float\"), this.colorBufferFloatExtension = this.gl.getExtension(\"WEBGL_color_buffer_float\"), s.getBool(\"WEBGL_RENDER_FLOAT32_ENABLED\") || (this.textureHalfFloatExtension = Gt(this.gl, this.debug, \"OES_texture_half_float\"), this.colorBufferHalfFloatExtension = this.gl.getExtension(\"EXT_color_buffer_half_float\"))) : this.colorBufferFloatExtension = Gt(this.gl, this.debug, \"EXT_color_buffer_float\"), this.vertexBuffer = Ua(this.gl, this.debug), this.indexBuffer = za(this.gl, this.debug), this.framebuffer = ne(this.gl, this.debug), this.textureConfig = Va(this.gl, this.textureHalfFloatExtension);\n  }\n\n  return Object.defineProperty(t.prototype, \"debug\", {\n    get: function () {\n      return s.getBool(\"DEBUG\");\n    },\n    enumerable: !0,\n    configurable: !0\n  }), t.prototype.dispose = function () {\n    var t = this;\n\n    if (!this.disposed) {\n      null != this.program && console.warn(\"Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing.\"), null != this.outputTexture && console.warn(\"Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.\");\n      var e = this.gl;\n      Lt(e, this.debug, function () {\n        return e.finish();\n      }), Lt(e, this.debug, function () {\n        return e.bindFramebuffer(e.FRAMEBUFFER, null);\n      }), Lt(e, this.debug, function () {\n        return e.deleteFramebuffer(t.framebuffer);\n      }), Lt(e, this.debug, function () {\n        return e.bindBuffer(e.ARRAY_BUFFER, null);\n      }), Lt(e, this.debug, function () {\n        return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, null);\n      }), Lt(e, this.debug, function () {\n        return e.deleteBuffer(t.indexBuffer);\n      }), this.disposed = !0;\n    }\n  }, t.prototype.createFloat32MatrixTexture = function (t, e) {\n    return this.throwIfDisposed(), qa(this.gl, this.debug, t, e, this.textureConfig);\n  }, t.prototype.createFloat16MatrixTexture = function (t, e) {\n    return this.throwIfDisposed(), Ha(this.gl, this.debug, t, e, this.textureConfig);\n  }, t.prototype.createUnsignedBytesMatrixTexture = function (t, e) {\n    return this.throwIfDisposed(), $a(this.gl, this.debug, t, e, this.textureConfig);\n  }, t.prototype.uploadPixelDataToTexture = function (t, e) {\n    this.throwIfDisposed(), Qa(this.gl, this.debug, t, e);\n  }, t.prototype.uploadDenseMatrixToTexture = function (t, e, n, r) {\n    this.throwIfDisposed(), Ya(this.gl, this.debug, t, e, n, r, this.textureConfig);\n  }, t.prototype.createFloat16PackedMatrixTexture = function (t, e) {\n    return this.throwIfDisposed(), Ka(this.gl, this.debug, t, e, this.textureConfig);\n  }, t.prototype.createPackedMatrixTexture = function (t, e) {\n    return this.throwIfDisposed(), ja(this.gl, this.debug, t, e, this.textureConfig);\n  }, t.prototype.deleteMatrixTexture = function (t) {\n    var e = this;\n    this.throwIfDisposed(), this.outputTexture === t && (le(this.gl, this.debug, this.framebuffer), this.outputTexture = null), Lt(this.gl, this.debug, function () {\n      return e.gl.deleteTexture(t);\n    });\n  }, t.prototype.downloadByteEncodedFloatMatrixFromOutputTexture = function (t, e, n) {\n    var r = this;\n    return this.downloadMatrixDriver(t, function () {\n      return ti(r.gl, r.debug, e, n, r.textureConfig);\n    });\n  }, t.prototype.downloadPackedMatrixFromBuffer = function (t, e, n, r, o, a) {\n    return ei(this.gl, t, 0, 0, 0, o, a, this.textureConfig);\n  }, t.prototype.downloadFloat32MatrixFromBuffer = function (t, e) {\n    return Za(this.gl, t, e);\n  }, t.prototype.createBufferFromTexture = function (t, e, n) {\n    this.bindTextureToFrameBuffer(t);\n    var r = Ja(this.gl, this.debug, e, n, this.textureConfig);\n    return this.unbindTextureToFrameBuffer(), r;\n  }, t.prototype.createAndWaitForFence = function () {\n    var t = this.createFence(this.gl);\n    return this.pollFence(t);\n  }, t.prototype.createFence = function (t) {\n    var e,\n        n,\n        r = this;\n\n    if (s.getBool(\"WEBGL_FENCE_API_ENABLED\")) {\n      var o = t,\n          a = o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE, 0);\n      t.flush(), n = function () {\n        var t = o.clientWaitSync(a, 0, 0);\n        return t === o.ALREADY_SIGNALED || t === o.CONDITION_SATISFIED;\n      }, e = a;\n    } else s.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\") > 0 ? (e = this.beginQuery(), this.endQuery(), n = function () {\n      return r.isQueryAvailable(e, s.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\"));\n    }) : n = function () {\n      return !0;\n    };\n\n    return {\n      query: e,\n      isFencePassed: n\n    };\n  }, t.prototype.downloadMatrixFromPackedTexture = function (t, e, n) {\n    var r = this;\n    return this.downloadMatrixDriver(t, function () {\n      return ni(r.gl, r.debug, e, n);\n    });\n  }, t.prototype.createProgram = function (t) {\n    this.throwIfDisposed();\n    var e = this.gl,\n        n = Ht(e, this.debug, t),\n        r = Wa(e, this.debug),\n        o = Xt(e, this.debug);\n    return Lt(e, this.debug, function () {\n      return e.attachShader(o, r);\n    }), Lt(e, this.debug, function () {\n      return e.attachShader(o, n);\n    }), Yt(e, this.debug, o), this.debug && Qt(e, this.debug, o), this.vertexAttrsAreBound || (this.setProgram(o), this.vertexAttrsAreBound = Xa(e, this.debug, this.program, this.vertexBuffer)), o;\n  }, t.prototype.deleteProgram = function (t) {\n    var e = this;\n    this.throwIfDisposed(), t === this.program && (this.program = null), null != t && Lt(this.gl, this.debug, function () {\n      return e.gl.deleteProgram(t);\n    });\n  }, t.prototype.setProgram = function (t) {\n    var e = this;\n    this.throwIfDisposed(), this.program = t, null != this.program && this.debug && Qt(this.gl, this.debug, this.program), Lt(this.gl, this.debug, function () {\n      return e.gl.useProgram(t);\n    });\n  }, t.prototype.getUniformLocation = function (t, e, n) {\n    return void 0 === n && (n = !0), this.throwIfDisposed(), n ? ae(this.gl, this.debug, t, e) : ie(this.gl, t, e);\n  }, t.prototype.getAttributeLocation = function (t, e) {\n    var n = this;\n    return this.throwIfDisposed(), Lt(this.gl, this.debug, function () {\n      return n.gl.getAttribLocation(t, e);\n    });\n  }, t.prototype.getUniformLocationNoThrow = function (t, e) {\n    return this.throwIfDisposed(), this.gl.getUniformLocation(t, e);\n  }, t.prototype.setInputMatrixTexture = function (t, e, n) {\n    this.throwIfDisposed(), this.throwIfNoProgram(), se(this.gl, this.debug, this.program, t, e, n);\n  }, t.prototype.setOutputMatrixTexture = function (t, e, n) {\n    this.setOutputMatrixTextureDriver(t, n, e);\n  }, t.prototype.setOutputPackedMatrixTexture = function (t, e, n) {\n    this.throwIfDisposed();\n    var r = La(e, n),\n        o = r[0],\n        a = r[1];\n    this.setOutputMatrixTextureDriver(t, o, a);\n  }, t.prototype.setOutputMatrixWriteRegion = function (t, e, n, r) {\n    this.setOutputMatrixWriteRegionDriver(n, t, r, e);\n  }, t.prototype.setOutputPackedMatrixWriteRegion = function (t, e, n, r) {\n    throw new Error(\"setOutputPackedMatrixWriteRegion not implemented.\");\n  }, t.prototype.debugValidate = function () {\n    null != this.program && Qt(this.gl, this.debug, this.program), ce(this.gl);\n  }, t.prototype.executeProgram = function () {\n    this.throwIfDisposed(), this.throwIfNoProgram();\n    var t = this.gl;\n    this.debug && this.debugValidate(), Lt(t, this.debug, function () {\n      return t.drawElements(t.TRIANGLES, 6, t.UNSIGNED_SHORT, 0);\n    });\n  }, t.prototype.blockUntilAllProgramsCompleted = function () {\n    var t = this;\n    this.throwIfDisposed(), Lt(this.gl, this.debug, function () {\n      return t.gl.finish();\n    });\n  }, t.prototype.getQueryTimerExtension = function () {\n    return null == this.disjointQueryTimerExtension && (this.disjointQueryTimerExtension = Gt(this.gl, this.debug, 2 === s.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\") ? \"EXT_disjoint_timer_query_webgl2\" : \"EXT_disjoint_timer_query\")), this.disjointQueryTimerExtension;\n  }, t.prototype.getQueryTimerExtensionWebGL2 = function () {\n    return this.getQueryTimerExtension();\n  }, t.prototype.getQueryTimerExtensionWebGL1 = function () {\n    return this.getQueryTimerExtension();\n  }, t.prototype.beginQuery = function () {\n    if (2 === s.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\")) {\n      var t = this.gl,\n          e = this.getQueryTimerExtensionWebGL2(),\n          n = t.createQuery();\n      return t.beginQuery(e.TIME_ELAPSED_EXT, n), n;\n    }\n\n    var r = this.getQueryTimerExtensionWebGL1(),\n        o = r.createQueryEXT();\n    return r.beginQueryEXT(r.TIME_ELAPSED_EXT, o), o;\n  }, t.prototype.endQuery = function () {\n    if (2 !== s.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\")) {\n      var t = this.getQueryTimerExtensionWebGL1();\n      t.endQueryEXT(t.TIME_ELAPSED_EXT);\n    } else {\n      var e = this.gl,\n          n = this.getQueryTimerExtensionWebGL2();\n      e.endQuery(n.TIME_ELAPSED_EXT);\n    }\n  }, t.prototype.waitForQueryAndGetTime = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e = this;\n      return o(this, function (n) {\n        switch (n.label) {\n          case 0:\n            return [4, R(function () {\n              return e.disposed || e.isQueryAvailable(t, s.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\"));\n            })];\n\n          case 1:\n            return n.sent(), [2, this.getQueryTime(t, s.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\"))];\n        }\n      });\n    });\n  }, t.prototype.getQueryTime = function (t, e) {\n    if (0 === e) return null;\n\n    if (2 === e) {\n      var n = this.gl;\n      return n.getQueryParameter(t, n.QUERY_RESULT) / 1e6;\n    }\n\n    var r = this.getQueryTimerExtensionWebGL1();\n    return r.getQueryObjectEXT(t, r.QUERY_RESULT_EXT) / 1e6;\n  }, t.prototype.isQueryAvailable = function (t, e) {\n    if (0 === e) return !0;\n\n    if (2 === e) {\n      var n = this.gl,\n          r = this.getQueryTimerExtensionWebGL2(),\n          o = n.getQueryParameter(t, n.QUERY_RESULT_AVAILABLE);\n      return null == this.disjoint && (this.disjoint = this.gl.getParameter(r.GPU_DISJOINT_EXT)), o && !this.disjoint;\n    }\n\n    o = (r = this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(t, r.QUERY_RESULT_AVAILABLE_EXT);\n    return null == this.disjoint && (this.disjoint = this.gl.getParameter(r.GPU_DISJOINT_EXT)), o && !this.disjoint;\n  }, t.prototype.pollFence = function (t) {\n    var e = this;\n    return new Promise(function (n) {\n      e.addItemToPoll(function () {\n        return t.isFencePassed();\n      }, function () {\n        return n();\n      });\n    });\n  }, t.prototype.pollItems = function () {\n    for (var t = function (t) {\n      for (var e = 0; e < t.length; ++e) {\n        var n = t[e]();\n        if (!n) break;\n      }\n\n      return e - 1;\n    }(this.itemsToPoll.map(function (t) {\n      return t.isDoneFn;\n    })), e = 0; e <= t; ++e) {\n      (0, this.itemsToPoll[e].resolveFn)();\n    }\n\n    this.itemsToPoll = this.itemsToPoll.slice(t + 1);\n  }, t.prototype.addItemToPoll = function (t, e) {\n    var n = this;\n    this.itemsToPoll.push({\n      isDoneFn: t,\n      resolveFn: e\n    }), this.itemsToPoll.length > 1 || R(function () {\n      return n.pollItems(), 0 === n.itemsToPoll.length;\n    });\n  }, t.prototype.bindTextureToFrameBuffer = function (t) {\n    this.throwIfDisposed(), ue(this.gl, this.debug, t, this.framebuffer), this.debug && ce(this.gl);\n  }, t.prototype.unbindTextureToFrameBuffer = function () {\n    null != this.outputTexture ? (ue(this.gl, this.debug, this.outputTexture, this.framebuffer), this.debug && ce(this.gl)) : le(this.gl, this.debug, this.framebuffer);\n  }, t.prototype.downloadMatrixDriver = function (t, e) {\n    this.bindTextureToFrameBuffer(t);\n    var n = e();\n    return this.unbindTextureToFrameBuffer(), n;\n  }, t.prototype.setOutputMatrixTextureDriver = function (t, e, n) {\n    this.throwIfDisposed();\n    var r = this.gl;\n    ue(r, this.debug, t, this.framebuffer), this.debug && ce(r), this.outputTexture = t, Lt(r, this.debug, function () {\n      return r.viewport(0, 0, e, n);\n    }), Lt(r, this.debug, function () {\n      return r.scissor(0, 0, e, n);\n    });\n  }, t.prototype.setOutputMatrixWriteRegionDriver = function (t, e, n, r) {\n    var o = this;\n    this.throwIfDisposed(), Lt(this.gl, this.debug, function () {\n      return o.gl.scissor(t, e, n, r);\n    });\n  }, t.prototype.throwIfDisposed = function () {\n    if (this.disposed) throw new Error(\"Attempted to use disposed GPGPUContext.\");\n  }, t.prototype.throwIfNoProgram = function () {\n    if (null == this.program) throw new Error(\"No GPU program is currently set.\");\n  }, t;\n}();\n\nfunction ai(t, e) {\n  if (t.length !== e.length) throw Error(\"Binary was compiled with \" + t.length + \" inputs, but was executed with \" + e.length + \" inputs\");\n  t.forEach(function (t, n) {\n    var r = t.logicalShape,\n        o = e[n],\n        a = o.shape;\n    if (!x(r, a)) throw Error(\"Binary was compiled with different shapes than the current args. Shapes \" + r + \" and \" + a + \" must match\");\n\n    if (!t.isUniform || !o.isUniform) {\n      var i = t.texShape,\n          s = o.isUniform ? null : o.texData.texShape;\n      if (!x(i, s)) throw Error(\"Binary was compiled with different texture shapes than the current args. Shape \" + i + \" and \" + s + \" must match\");\n    }\n  });\n}\n\nvar ii = function () {\n  return function (t, e, n) {\n    this.variableNames = [\"A\"], this.usesPackedTextures = !0, this.outputShape = t;\n\n    for (var r = n.filterWidth, o = n.inChannels, a = n.strideWidth, i = n.strideHeight, s = n.padInfo, u = n.outWidth, l = n.dilationWidth, c = n.dilationHeight, h = s.left, p = s.top, f = o * r, d = No(), v = \"\", m = 0; m <= 1; m++) for (var g = 0; g <= 1; g++) v += \"\\n          blockIndex = rc.y + \" + g + \";\\n          pos = rc.x + \" + m + \";\\n          \\n          if(blockIndex < \" + t[1] + \" && pos < \" + t[0] + \") {\\n            offsetY = int(blockIndex / (\" + u + \")) * \" + i + \" - \" + p + \";\\n            d0 = offsetY + \" + c + \" * (pos / \" + f + \");\\n  \\n            if(d0 < \" + e[0] + \" && d0 >= 0) {\\n              offsetX = int(mod(float(blockIndex), \" + u + \".) * \" + a + \". - \" + h + \".);\\n              d1 = offsetX + \" + l + \" * (int(mod(float(pos), \" + f + \".) / \" + o + \".));\\n    \\n              if(d1 < \" + e[1] + \" && d1 >= 0) {\\n                innerDims = vec2(d1, int(mod(float(pos), \" + o + \".)));\\n                result[\" + (2 * m + g) + \"] = getChannel(getA(d0, int(innerDims.x),\\n                                                  int(innerDims.y)), innerDims);\\n              }\\n            }\\n  \\n          }\\n        \";\n\n    this.userCode = \"\\n      void main() {\\n        ivec2 rc = getOutputCoords();\\n\\n        vec4 result = vec4(0);\\n\\n        int blockIndex, pos, offsetY, d0, offsetX, d1;\\n        vec2 innerDims;\\n\\n        \" + v + \"\\n\\n        \" + d.output + \" = result;\\n      }\\n    \";\n  };\n}(),\n    si = function () {\n  return function (t, e, n, r, o) {\n    this.variableNames = [\"x\"], this.outputShape = [];\n    var a,\n        i = e,\n        s = t[3] - 1;\n    this.outputShape = t;\n    var u = \"float(\" + n + \") + float(\" + r + \") * sum\";\n    a = .5 === o ? \"inversesqrt(\" + u + \")\" : 1 === o ? \"1.0/(\" + u + \")\" : \"exp(log(\" + u + \") * float(-\" + o + \"));\", this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n        int d = coords[3];\\n        float x = getX(b, r, c, d);\\n        float sum = 0.0;\\n        for (int j = -\" + i + \"; j <= \" + i + \"; j++) {\\n          int idx = d + j;\\n          if (idx >= 0 && idx <=  \" + s + \") {\\n            float z = getX(b, r, c, idx);\\n            sum += z * z;\\n          }\\n        }\\n        float val = x * \" + a + \";\\n        setOutput(val);\\n      }\\n    \";\n  };\n}(),\n    ui = function () {\n  return function (t, e, n, r, o) {\n    this.variableNames = [\"inputImage\", \"outputImage\", \"dy\"], this.outputShape = [], this.outputShape = t, this.depth = t[3], this.depthRadius = e, this.bias = n, this.alpha = r, this.beta = o, this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float result = 0.0;\\n        for (int d = 0; d < \" + this.depth + \"; ++d) {\\n          int depthBegin = int(max(0.0, float(d - \" + e + \")));\\n          int depthEnd = int(min(float(\" + this.depth + \"),\\n              float(d + \" + e + \" + 1)));\\n\\n          const int MIN_DEPTH_BEGIN = 0;\\n          const int MAX_DEPTH_END = \" + this.depth + \";\\n\\n          float norm = 0.0;\\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\\n            if (k < depthBegin){\\n              continue;\\n            }\\n            else if (k >= depthBegin && k < depthEnd) {\\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\\n            }\\n            else {\\n              break;\\n            }\\n          }\\n\\n          norm = float(\" + r + \") * norm + float(\" + n + \");\\n\\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\\n            if (k < depthBegin){\\n              continue;\\n            }\\n            else if (k >= depthBegin && k < depthEnd){\\n              float dyi = -2.0 * float(\" + r + \")\\n                * float(\" + o + \")\\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\\n                / norm;\\n              if (k == d) {\\n                dyi += pow(norm, -1.0 * \" + o + \");\\n              }\\n              if (k == coords[3]) {\\n                dyi *= getDy(b, r, c, d);\\n                result += dyi;\\n              }\\n            }\\n            else {\\n              break;\\n            }\\n          }\\n      }\\n      setOutput(result);\\n      }\\n    \";\n  };\n}(),\n    li = function () {\n  return function (t, e, n, r, o) {\n    this.variableNames = [\"x\"], this.outputShape = [], this.usesPackedTextures = !0;\n    var a,\n        i = e,\n        s = t[3] - 1;\n    this.outputShape = t;\n    var u = \"float(\" + n + \") + float(\" + r + \") * sum\";\n    a = .5 === o ? \"inversesqrt(\" + u + \")\" : 1 === o ? \"1.0/(\" + u + \")\" : \"exp(log(\" + u + \") * float(-\" + o + \"));\", this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords.x;\\n        int r = coords.y;\\n        int c = coords.z;\\n        int d = coords.w;\\n\\n        bool hasNextCol = d < \" + this.outputShape[3] + \";\\n        bool hasNextRow = c < \" + this.outputShape[2] + \";\\n\\n        vec4 sum = vec4(0.);\\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\\n\\n        vec4 xAtOutputCoords = vec4(\\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\\n          hasNextCol ?\\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\\n          hasNextRow ?\\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\\n        );\\n\\n        int firstChannel = d - \" + i + \";\\n        vec2 cache = vec2(0.);\\n        if(firstChannel >= 0){\\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\\n            if(hasNextRow){\\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\\n            }\\n        }\\n\\n        ivec2 depth = ivec2(d, d + 1);\\n        for (int j = - \" + i + \"; j <= \" + i + \"; j++) {\\n          ivec2 idx = depth + j;\\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(\" + s + \"));\\n\\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\\n\\n          if(depthInRange || depthPlusOneInRange){\\n            vec4 z = vec4(0.);\\n            vec4 xFragAtCurrentDepth;\\n            z.xz = cache.xy;\\n            if(depthPlusOneInRange && hasNextCol){\\n              xFragAtCurrentDepth = idx.y != d ?\\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\\n              if(hasNextRow){\\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\\n              }\\n            }\\n            cache.xy = z.yw;\\n            sum += z * z;\\n          }\\n        }\\n        vec4 result = xAtOutputCoords * \" + a + \";\\n        setOutput(result);\\n      }\\n    \";\n  };\n}(),\n    ci = function () {\n  return function (t) {\n    this.variableNames = [\"dy\", \"maxPos\"], this.outputShape = t.inShape;\n    var e = t.strideHeight,\n        n = t.strideWidth,\n        r = t.dilationHeight,\n        o = t.effectiveFilterHeight,\n        a = t.effectiveFilterWidth,\n        i = o - 1 - t.padInfo.top,\n        s = a - 1 - t.padInfo.left,\n        u = o * a - 1;\n    this.userCode = \"\\n      const ivec2 pads = ivec2(\" + i + \", \" + s + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + o + \";\\n          wR += \" + r + \") {\\n          float dyR = float(dyRCorner + wR) / \" + e + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + t.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \" + a + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + n + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + t.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n            int maxPosValue = \" + u + \" - int(getMaxPos(b, idyR, idyC, d));\\n\\n            // Get the current value, check it against the value from the\\n            // position matrix.\\n            int curPosValue = wR * \" + a + \" + wC;\\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n            dotProd += dyValue * mask;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n  };\n}(),\n    hi = function () {\n  return function (t, e, n, r, o, a) {\n    void 0 === n && (n = !1), void 0 === r && (r = !1), void 0 === o && (o = !1), void 0 === a && (a = null), this.variableNames = [\"matrixA\", \"matrixB\"], this.usesPackedTextures = !0, this.outputShape = e;\n    var i = n ? t[1] : t[2],\n        s = Math.ceil(i / 2),\n        u = n ? \"i * 2, rc.y\" : \"rc.y, i * 2\",\n        l = r ? \"rc.z, i * 2\" : \"i * 2, rc.z\",\n        c = n ? [\"a.xxyy\", \"a.zzww\"] : [\"a.xxzz\", \"a.yyww\"],\n        h = r ? [\"b.xzxz\", \"b.ywyw\"] : [\"b.xyxy\", \"b.zwzw\"],\n        p = \"\",\n        f = \"\";\n    a && (p = \"vec4 activation(vec4 x) {\\n        \" + a + \"\\n      }\", f = \"result = activation(result);\");\n    var d = o ? \"result += getBiasAtOutCoords();\" : \"\";\n    o && this.variableNames.push(\"bias\"), this.userCode = \"\\n      \" + p + \"\\n\\n      const float sharedDimension = \" + s + \".0;\\n\\n      vec4 dot2x2ARowBCol(ivec3 rc) {\\n        vec4 result = vec4(0);\\n        for (int i = 0; i < \" + s + \"; i++) {\\n          vec4 a = getMatrixA(rc.x, \" + u + \");\\n          vec4 b = getMatrixB(rc.x, \" + l + \");\\n\\n          // These swizzled products need to be separately added.\\n          // See: https://github.com/tensorflow/tfjs/issues/1735\\n          result += (\" + c[0] + \" * \" + h[0] + \");\\n          result += (\" + c[1] + \" * \" + h[1] + \");\\n        }\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n        vec4 result = dot2x2ARowBCol(rc);\\n\\n        \" + d + \"\\n\\n        \" + f + \"\\n\\n        setOutput(result);\\n      }\\n    \";\n  };\n}(),\n    pi = function () {\n  function t(t, e, n) {\n    this.variableNames = [\"probs\"], this.outputShape = [t, n], this.userCode = \"\\n      uniform float seed;\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n\\n        float r = random(seed);\\n        float cdf = 0.0;\\n\\n        for (int i = 0; i < \" + (e - 1) + \"; i++) {\\n          cdf += getProbs(batch, i);\\n\\n          if (r < cdf) {\\n            setOutput(float(i));\\n            return;\\n          }\\n        }\\n\\n        // If no other event happened, last event happened.\\n        setOutput(float(\" + (e - 1) + \"));\\n      }\\n    \";\n  }\n\n  return t.prototype.getCustomSetupFunc = function (t) {\n    var e = this;\n    return function (n, r) {\n      null == e.seedLoc && (e.seedLoc = n.getUniformLocation(r, \"seed\")), n.gl.uniform1f(e.seedLoc, t);\n    };\n  }, t;\n}(),\n    fi = function () {\n  return function (t, e, n, r) {\n    this.variableNames = [\"indices\"], this.outputShape = [t, e], this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int index = round(getIndices(coords.x));\\n        setOutput(mix(float(\" + r + \"), float(\" + n + \"),\\n                      float(index == coords.y)));\\n      }\\n    \";\n  };\n}(),\n    di = function () {\n  return function (t) {\n    this.variableNames = [\"A\"], this.outputShape = t;\n    var e = t.length;\n    if (0 === e) this.userCode = \"\\n        void main() {\\n          setOutput(vec4(getA(), 0., 0., 0.));\\n        }\\n      \";else {\n      var n = So(\"rc\", e),\n          r = Uo(e),\n          o = function (t, e, n) {\n        if (1 === t) return \"rc > \" + e[0];\n\n        for (var r = \"\", o = t - 2; o < t; o++) r += n[o] + \" >= \" + e[o], o < t - 1 && (r += \"||\");\n\n        return r;\n      }(e, t, n),\n          a = function (t, e, n, r) {\n        if (1 === t) return \"\";\n        var o = r.slice(-2);\n        return \"\\n    int r = \" + o[0] + \";\\n    int c = \" + o[1] + \";\\n    int rp1 = r + 1;\\n    int cp1 = c + 1;\\n\\n    bool cEdge = cp1 >= \" + e + \";\\n    bool rEdge = rp1 >= \" + n + \";\\n  \";\n      }(e, t[t.length - 1], t[t.length - 2], n),\n          i = function (t, e) {\n        var n = t.length,\n            r = function (t, e) {\n          for (var n = [], r = 0; r <= 1; r++) for (var o = 0; o <= 1; o++) {\n            for (var a = (0 === r ? \"r\" : \"rp1\") + \", \" + (0 === o ? \"c\" : \"cp1\"), i = 2; i < t; i++) a = e[e.length - 1 - i] + \",\" + a;\n\n            n.push(a);\n          }\n\n          return n;\n        }(n, e);\n\n        return 1 === n ? \"getA(rc),\\n            rc + 1 >= \" + t[0] + \" ? 0. : getA(rc + 1),\\n            0, 0\" : \"getA(\" + r[0] + \"),\\n          cEdge ? 0. : getA(\" + r[1] + \"),\\n          rEdge ? 0. : getA(\" + r[2] + \"),\\n          rEdge || cEdge ? 0. : getA(\" + r[3] + \")\";\n      }(t, n);\n\n      this.userCode = \"\\n        void main() {\\n          \" + r + \" rc = getOutputCoords();\\n\\n          if(\" + o + \") {\\n            setOutput(vec4(0));\\n          } else {\\n            \" + a + \"\\n\\n            setOutput(vec4(\" + i + \"));\\n          }\\n        }\\n      \";\n    }\n  };\n}();\n\nvar vi = function () {\n  return function (t, e, n) {\n    this.variableNames = [\"x\"], this.outputShape = e.map(function (e, n) {\n      return e[0] + t[n] + e[1];\n    });\n    var r = t.length,\n        o = Uo(r),\n        a = e.map(function (t) {\n      return t[0];\n    }).join(\",\"),\n        i = e.map(function (e, n) {\n      return e[0] + t[n];\n    }).join(\",\"),\n        s = [\"coords[0]\", \"coords[1]\", \"coords[2]\", \"coords[3]\"].slice(0, r);\n    this.userCode = 1 !== r ? \"\\n      \" + o + \" start = \" + o + \"(\" + a + \");\\n      \" + o + \" end = \" + o + \"(\" + i + \");\\n\\n      void main() {\\n        \" + o + \" outC = getOutputCoords();\\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\\n          setOutput(float(\" + n + \"));\\n        } else {\\n          \" + o + \" coords = outC - start;\\n          setOutput(getX(\" + s + \"));\\n        }\\n      }\\n    \" : \"\\n        int start = \" + a + \";\\n        int end = \" + i + \";\\n\\n        void main() {\\n          int outC = getOutputCoords();\\n          if (outC < start || outC >= end) {\\n            setOutput(float(\" + n + \"));\\n          } else {\\n            setOutput(getX(outC - start));\\n          }\\n        }\\n      \";\n  };\n}(),\n    mi = function () {\n  return function (t, e, n) {\n    this.variableNames = [\"x\"], this.usesPackedTextures = !0, this.outputShape = e.map(function (e, n) {\n      return e[0] + t[n] + e[1];\n    });\n\n    for (var r = t.length, o = Uo(r), a = e.map(function (t) {\n      return t[0];\n    }).join(\",\"), i = e.map(function (e, n) {\n      return e[0] + t[n];\n    }).join(\",\"), s = So(\"rc\", r), u = So(\"source\", r), l = s[r - 1] + \" < \" + this.outputShape[r - 1], c = 1 === r ? \"source\" : \"vec2(\" + u.slice(-2).join() + \")\", h = [o + \" rc = outputLoc;\", s[r - 1] + \" += 1;\\n       if(\" + l + \") {\\n      \", 1 === r ? \"\" : \"}\\n       rc = outputLoc;\\n       \" + s[r - 2] + \" += 1;\\n       if(\" + s[r - 2] + \" < \" + this.outputShape[r - 2] + \") {\", 1 === r ? \"\" : \"  \" + s[r - 1] + \" += 1;\\n         if(\" + l + \") {\"], p = 1 === r ? \"rc < start || rc >= end\" : \"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))\", f = \"\", d = 0, v = 1 === r ? 2 : 4; d < v; d++) f += \"\\n        \" + h[d] + \"\\n        if (\" + p + \") {\\n          result[\" + d + \"] = float(\" + n + \");\\n        } else {\\n          \" + o + \" source = rc - start;\\n          result[\" + d + \"] = getChannel(getX(\" + u.join() + \"), \" + c + \");\\n        }\\n      \";\n\n    f += 1 === r ? \"} \" : \"}}\", this.userCode = \"\\n      const \" + o + \" start = \" + o + \"(\" + a + \");\\n      const \" + o + \" end = \" + o + \"(\" + i + \");\\n\\n      void main() {\\n        \" + o + \" outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        \" + f + \"\\n        setOutput(result);\\n      }\\n    \";\n  };\n}(),\n    gi = function () {\n  return function (t, e, n) {\n    if (this.variableNames = [\"x\"], \"avg\" === e && n) throw new Error(\"Cannot compute positions for average pool.\");\n    var r = t.filterWidth,\n        o = t.strideHeight,\n        a = t.strideWidth,\n        i = t.dilationHeight,\n        s = t.dilationWidth,\n        u = t.effectiveFilterHeight,\n        l = t.effectiveFilterWidth,\n        c = t.padInfo.top,\n        h = t.padInfo.left;\n    this.outputShape = t.outShape;\n    var p = \"avg\" === e,\n        f = \"0.0\";\n    if (p || (f = \"-1.0 / 1e-20\"), n) this.userCode = \"\\n        const ivec2 strides = ivec2(\" + o + \", \" + a + \");\\n        const ivec2 pads = ivec2(\" + c + \", \" + h + \");\\n\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int batch = coords[0];\\n          int d = coords[3];\\n\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\n          int xRCorner = xRCCorner.x;\\n          int xCCorner = xRCCorner.y;\\n\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n          float avgValue = 0.0;\\n\\n          for (int wR = 0; wR < \" + u + \";\\n              wR += \" + i + \") {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= \" + t.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \" + l + \";\\n                wC += \" + s + \") {\\n              int xC = xCCorner + wC;\\n\\n              if (xC < 0 || xC >= \" + t.inWidth + \") {\\n                continue;\\n              }\\n\\n              float value = getX(batch, xR, xC, d);\\n\\n              // If a min / max value has already been found, use it. If not,\\n              // use the current value.\\n              float currMinMaxValue = mix(\\n                  value, minMaxValue, minMaxValueFound);\\n              if (value >= currMinMaxValue) {\\n                minMaxValue = value;\\n                minMaxValueFound = 1.0;\\n                minMaxPosition = wR * \" + l + \" + wC;\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      \";else {\n      var d = e + \"(\" + e + \"(\" + e + \"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])\";\n      \"avg\" === e && (d = \"avgValue / count\");\n      var v = 4 * Math.floor(r / 4),\n          m = r % 4,\n          g = \"\\n      if (\" + p + \") {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = max(values, minMaxValue);\\n      }\\n    \";\n      this.userCode = \"\\n      const ivec2 strides = ivec2(\" + o + \", \" + a + \");\\n      const ivec2 pads = ivec2(\" + c + \", \" + h + \");\\n      const float initializationValue = \" + f + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xR, int xC, int d) {\\n        if (xC < 0 || xC >= \" + t.inWidth + \") {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xR, xC, d);\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(\" + f + \");\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wR = 0; wR < \" + u + \";\\n            wR += \" + i + \") {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \" + t.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + v + \"; wC += 4) {\\n            int xC = xCCorner + wC * \" + s + \";\\n\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + \" + s + \", d),\\n              getValue(batch, xR, xC + 2 * \" + s + \", d),\\n              getValue(batch, xR, xC + 3 * \" + s + \", d)\\n            );\\n\\n            \" + g + \"\\n          }\\n\\n          int xC = xCCorner + \" + v + \";\\n          if (\" + (1 === m) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              initializationValue,\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \" + g + \"\\n          } else if (\" + (2 === m) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + \" + s + \", d),\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \" + g + \"\\n          } else if (\" + (3 === m) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + \" + s + \", d),\\n              getValue(batch, xR, xC + 2 * \" + s + \", d),\\n              initializationValue\\n            );\\n\\n            \" + g + \"\\n          }\\n        }\\n        setOutput(\" + d + \");\\n      }\\n    \";\n    }\n  };\n}(),\n    yi = function () {\n  return function (t, e) {\n    this.variableNames = [\"x\"];\n    var n = t.windowSize,\n        r = t.batchSize,\n        o = t.inSize,\n        a = Math.ceil(o / n);\n    this.outputShape = [r, a];\n    var i = \"0.0\",\n        s = \"\";\n    \"prod\" === e ? i = \"1.0\" : \"min\" === e ? (i = \"1.0 / 1e-20\", s = \"min\") : \"max\" === e && (i = \"-1.0 / 1e-20\", s = \"max\");\n    var u = e + \"(\" + e + \"(\" + e + \"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])\";\n    \"sum\" === e ? u = \"sumValue\" : \"prod\" === e ? u = \"prodValue\" : \"all\" === e ? u = \"allValue\" : \"any\" === e && (u = \"anyValue\");\n    var l = 4 * Math.floor(n / 4),\n        c = n % 4,\n        h = \"\\n      if (\" + (\"sum\" === e) + \") {\\n        sumValue += dot(values, ones);\\n      } else if (\" + (\"prod\" === e) + \") {\\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\\n        prodValue *= tmp[0] * tmp[1];\\n      } else {\\n        minMaxValue = \" + s + \"(values, minMaxValue);\\n      }\\n    \",\n        p = \"vec4\";\n    \"all\" === e ? (i = \"1.0\", h = \"\\n        bool reducedAllValue = all(values);\\n        float floatedReducedAllValue = float(reducedAllValue);\\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\\n      \", p = \"bvec4\") : \"any\" === e && (i = \"0.0\", h = \"\\n        bool reducedAnyValue = any(values);\\n        float floatedReducedAnyValue = float(reducedAnyValue);\\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\\n      \", p = \"bvec4\");\n    var f = \"\";\n    o % n > 0 && (f = \"\\n        if (inIdx < 0 || inIdx >= \" + o + \") {\\n          return initializationValue;\\n        }\\n      \"), this.userCode = \"\\n      const float initializationValue = \" + i + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        \" + f + \"\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + n + \";\\n\\n        vec4 minMaxValue = vec4(\" + i + \");\\n        float prodValue = 1.0;\\n        float sumValue = 0.0;\\n        float allValue = 1.0;\\n        float anyValue = 0.0;\\n\\n        for (int i = 0; i < \" + l + \"; i += 4) {\\n          int inIdx = inOffset + i;\\n          \" + p + \" values = \" + p + \"(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          \" + h + \"\\n        }\\n\\n        int inIdx = inOffset + \" + l + \";\\n        if (\" + (1 === c) + \") {\\n          \" + p + \" values = \" + p + \"(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          \" + h + \"\\n        } else if (\" + (2 === c) + \") {\\n          \" + p + \" values = \" + p + \"(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          \" + h + \"\\n        } else if (\" + (3 === c) + \") {\\n          \" + p + \" values = \" + p + \"(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          \" + h + \"\\n        }\\n        setOutput(\" + u + \");\\n      }\\n    \";\n  };\n}(),\n    xi = function () {\n  return function (t, e) {\n    this.variableNames = [\"A\"], this.usesPackedTextures = !0, this.outputShape = t;\n\n    for (var n = \"\", r = 0; r < 4; r++) {\n      var o = \"thisRC = rc;\";\n      r % 2 == 1 && (o += \"thisRC.z += 1;\"), r > 1 && (o += \"thisRC.y += 1;\"), n += \"\\n        \" + o + \"\\n        \" + (r > 0 ? \"if(thisRC.y < rows && thisRC.z < cols){\" : \"\") + \"\\n          int flatIndex = getFlatIndex(thisRC);\\n\\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\\n\\n          result[\" + r + \"] =\\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\\n        \" + (r > 0 ? \"}\" : \"\") + \"\\n      \";\n    }\n\n    this.userCode = \"\\n      \\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\\n      \" + ko([\"r\", \"c\", \"d\"], e) + \"\\n      return ivec3(r, c, d);\\n    }\\n  \\n      \" + Ao(t) + \"\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n\\n        vec4 result = vec4(0.);\\n\\n        ivec3 thisRC;\\n        int rows = \" + t[1] + \";\\n        int cols = \" + t[2] + \";\\n\\n        \" + n + \"\\n\\n        setOutput(result);\\n      }\\n    \";\n  };\n}();\n\nvar bi = function () {\n  return function (t, e, n) {\n    this.variableNames = [\"dy\"], this.outputShape = [], this.outputShape = e.shape;\n    var r = e.shape,\n        o = r[1],\n        a = r[2],\n        i = t.shape,\n        s = i[1],\n        u = i[2],\n        l = [n && s > 1 ? o - 1 : o, n && u > 1 ? a - 1 : a],\n        c = [n && s > 1 ? s - 1 : s, n && u > 1 ? u - 1 : u],\n        h = l[0] / c[0],\n        p = l[1] / c[1],\n        f = 1 / h,\n        d = 1 / p,\n        v = 2 * Math.ceil(f) + 2,\n        m = 2 * Math.ceil(d) + 2;\n    this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float accumulator = 0.0;\\n\\n        const float heightScale = float(\" + h + \");\\n        const float widthScale = float(\" + p + \");\\n\\n        const float invHeightScale = float(\" + f + \");\\n        const float invWidthScale = float(\" + d + \");\\n\\n        const int winHeight = int(\" + v + \");\\n        const int winWidth = int(\" + m + \");\\n\\n        // Compute bounds for where in dy we will look\\n        float startRLerp = floor(float(r) * invHeightScale);\\n        int startDyR = int(startRLerp - float(winHeight / 2));\\n\\n        float startCLerp = floor(float(c) * invWidthScale);\\n        int startDyC = int(startCLerp - float(winWidth / 2));\\n\\n        // Loop over dy\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\n          int dyR = dyROffset + startDyR;\\n\\n          // Guard against the window exceeding the bounds of dy\\n          if (dyR < 0 || dyR >= \" + s + \") {\\n            continue;\\n          }\\n\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\n            int dyC = dyCOffset + startDyC;\\n\\n            // Guard against the window exceeding the bounds of dy\\n            if (dyC < 0 || dyC >= \" + u + \") {\\n              continue;\\n            }\\n\\n            float dxR = float(dyR) * heightScale;\\n            int topDxRIndex = int(floor(dxR));\\n            int bottomDxRIndex = int(min(ceil(dxR), \" + (o - 1) + \".0));\\n            float dxRLerp = dxR - float(topDxRIndex);\\n            float inverseDxRLerp = 1.0 - dxRLerp;\\n\\n            float dxC = float(dyC) * widthScale;\\n            int leftDxCIndex = int(floor(dxC));\\n            int rightDxCIndex = int(min(ceil(dxC), \" + (a - 1) + \".0));\\n            float dxCLerp = dxC - float(leftDxCIndex);\\n            float inverseDxCLerp = 1.0 - dxCLerp;\\n\\n            if (r == topDxRIndex && c == leftDxCIndex) {\\n              // topLeft\\n              accumulator +=\\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\\n            }\\n\\n            if (r == topDxRIndex && c == rightDxCIndex) {\\n              // topRight\\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\\n            }\\n\\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\\n              // bottomLeft\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\\n            }\\n\\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\\n              // bottomRight\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\\n            }\\n          }\\n        }\\n        // End loop over dy\\n\\n        setOutput(accumulator);\\n      }\\n    \";\n  };\n}(),\n    wi = function () {\n  return function (t, e, n, r) {\n    this.variableNames = [\"A\"], this.outputShape = [];\n    var o = t[0],\n        a = t[1],\n        i = t[2],\n        s = t[3];\n    this.outputShape = [o, e, n, s];\n    var u = [r && e > 1 ? a - 1 : a, r && n > 1 ? i - 1 : i],\n        l = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n];\n    this.userCode = \"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \" + u[0] / l[0] + \",\\n          \" + u[1] / l[1] + \");\\n      const vec2 inputShapeRC = vec2(\" + a + \".0, \" + i + \".0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the four integer indices.\\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\\n        ivec2 sourceCeilRC = ivec2(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\\n\\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\\n\\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\\n        float newValue = top + (bottom - top) * fracRC.x;\\n\\n        setOutput(newValue);\\n      }\\n    \";\n  };\n}(),\n    Ci = function () {\n  return function (t, e, n, r) {\n    this.variableNames = [\"A\"], this.usesPackedTextures = !0, this.outputShape = [];\n    var o = t[0],\n        a = t[1],\n        i = t[2],\n        s = t[3];\n    this.outputShape = [o, e, n, s];\n    var u = [r && e > 1 ? a - 1 : a, r && n > 1 ? i - 1 : i],\n        l = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n];\n    this.userCode = \"\\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\\n          \" + u[0] / l[0] + \",\\n          \" + u[1] / l[1] + \",\\n          \" + u[1] / l[1] + \");\\n      const vec3 inputShapeRC = vec3(\" + a + \".0, \" + i + \".0,\\n                                     \" + i + \".0);\\n\\n      float getAValue(int b, int r, int c, int d) {\\n        return getChannel(getA(b, r, c, d), vec2(c, d));\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        // Calculate values for next column in yRC.z.\\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\\n\\n        // Fractional source index.\\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the four integer indices.\\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\\n        ivec3 sourceCeilRC = ivec3(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n        \\n        // Should we calculate next column and row elements in 2x2 packed cell.\\n        bool hasNextCol = d < \" + (s - 1) + \"; \\n        bool hasNextRow = coords.z < \" + (n - 1) + \";\\n\\n        // In parallel, construct four corners for all four components in\\n        // packed 2x2 cell.\\n        vec4 topLeft = vec4(\\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\\n\\n        vec4 bottomLeft = vec4(\\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\\n\\n        vec4 topRight = vec4(\\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\\n\\n        vec4 bottomRight = vec4(\\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\\n\\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\\n\\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\\n        vec4 newValue = mix(top, bottom, fracRC.x);\\n\\n        setOutput(newValue);\\n      }\\n    \";\n  };\n}(),\n    Ei = function () {\n  return function (t, e, n) {\n    this.variableNames = [\"dy\"], this.outputShape = [], this.outputShape = e.shape;\n    var r = e.shape,\n        o = r[1],\n        a = r[2],\n        i = t.shape,\n        s = i[1],\n        u = i[2],\n        l = [n && s > 1 ? o - 1 : o, n && u > 1 ? a - 1 : a],\n        c = [n && s > 1 ? s - 1 : s, n && u > 1 ? u - 1 : u],\n        h = l[0] / c[0],\n        p = l[1] / c[1],\n        f = 1 / h,\n        d = 1 / p,\n        v = 2 * Math.ceil(f) + 2,\n        m = 2 * Math.ceil(d) + 2;\n    this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float accumulator = 0.0;\\n\\n        const float heightScale = float(\" + h + \");\\n        const float widthScale = float(\" + p + \");\\n\\n        const float invHeightScale = float(\" + f + \");\\n        const float invWidthScale = float(\" + d + \");\\n\\n        const int winHeight = int(\" + v + \");\\n        const int winWidth = int(\" + m + \");\\n\\n        // Compute bounds for where in dy we will look\\n        float startRLerp = floor(float(r) * invHeightScale);\\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\\n\\n        float startCLerp = floor(float(c) * invWidthScale);\\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\\n\\n        // Loop over dy\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\n          int dyR = dyROffset + startDyR;\\n\\n          // Guard against the window exceeding the bounds of dy\\n          if (dyR < 0 || dyR >= \" + s + \") {\\n            continue;\\n          }\\n\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\n            int dyC = dyCOffset + startDyC;\\n\\n            // Guard against the window exceeding the bounds of dy\\n            if (dyC < 0 || dyC >= \" + u + \") {\\n              continue;\\n            }\\n\\n            float sourceFracRow =\\n              float(\" + l[0] + \") *\\n                (float(dyR) / float(\" + c[0] + \"));\\n\\n            float sourceFracCol =\\n                float(\" + l[1] + \") *\\n                  (float(dyC) / float(\" + c[1] + \"));\\n\\n            int sourceNearestRow = int(min(\\n                float(int(\" + o + \") - 1),\\n                \" + n + \" ? float(round(sourceFracRow)) :\\n                                  float(floor(sourceFracRow))));\\n\\n            int sourceNearestCol = int(min(\\n                float(int(\" + a + \") - 1),\\n                \" + n + \" ? float(round(sourceFracCol)) :\\n                                  float(floor(sourceFracCol))));\\n\\n            if (r == sourceNearestRow && c == sourceNearestCol) {\\n              accumulator += getDy(b, dyR, dyC, d);\\n            }\\n          }\\n        }\\n        // End loop over dy\\n\\n        setOutput(accumulator);\\n      }\\n    \";\n  };\n}(),\n    Ri = function () {\n  return function (t, e, n, r) {\n    this.variableNames = [\"A\"], this.outputShape = [];\n    var o = t[0],\n        a = t[1],\n        i = t[2],\n        s = t[3];\n    this.outputShape = [o, e, n, s];\n    var u = [r && e > 1 ? a - 1 : a, r && n > 1 ? i - 1 : i],\n        l = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n],\n        c = r ? \"0.5\" : \"0.0\";\n    this.userCode = \"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \" + u[0] / l[0] + \",\\n          \" + u[1] / l[1] + \");\\n      const vec2 inputShapeRC = vec2(\" + a + \".0, \" + i + \".0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the coordinators of nearest neighbor point.\\n        ivec2 sourceNearestRC = ivec2(\\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + \" + c + \")));\\n\\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\\n\\n        setOutput(newValue);\\n      }\\n    \";\n  };\n}(),\n    Ii = function () {\n  return function (t, e) {\n    this.variableNames = [\"x\"];\n    var n = t.length;\n    if (n > 4) throw new Error(\"WebGL backend: Reverse of rank-\" + n + \" tensor is not yet supported\");\n\n    if (this.outputShape = t, 1 !== n) {\n      var r = t.map(function (n, r) {\n        return function (n) {\n          return -1 !== e.indexOf(n) && 1 !== t[n] ? t[n] + \" - coords[\" + n + \"] - 1\" : \"coords[\" + n + \"]\";\n        }(r);\n      }).join(\",\"),\n          o = Uo(n);\n      this.userCode = \"\\n      void main() {\\n        \" + o + \" coords = getOutputCoords();\\n        setOutput(getX(\" + r + \"));\\n      }\\n    \";\n    } else this.userCode = \"\\n        void main() {\\n          int coord = getOutputCoords();\\n          setOutput(getX(\" + t[0] + \" - coord - 1));\\n        }\\n      \";\n  };\n}(),\n    Si = function () {\n  return function (t, e) {\n    this.variableNames = [\"x\"], this.usesPackedTextures = !0;\n    var n = t.length;\n    if (n > 4) throw new Error(\"WebGL backend: Reverse of rank-\" + n + \" tensor is not yet supported\");\n    this.outputShape = t;\n    var r = So(\"rc\", n),\n        o = r[n - 1] + \" + 1 < \" + this.outputShape[n - 1],\n        a = r[n - 2] + \" + 1 < \" + this.outputShape[n - 2],\n        i = Uo(n);\n\n    function s(n) {\n      var r = t.map(function (r, o) {\n        return function (n, r) {\n          return -1 !== e.indexOf(n) && 1 !== t[n] ? t[n] + \" - \" + r[n] + \" - 1\" : \"\" + r[n];\n        }(o, n);\n      });\n      return \"getChannel(getX(\" + r.join(\",\") + \"), vec2(\" + r.slice(-2).join(\",\") + \"))\";\n    }\n\n    this.userCode = 1 === n ? \"\\n        void main(){\\n          int rc = getOutputCoords();\\n          vec4 result = vec4(0.);\\n          result.r = getChannel(getX(\" + t[0] + \" - rc - 1),\\n            \" + t[0] + \" - rc - 1);\\n          if(\" + o + \"){\\n              result.g = getChannel(getX(\" + t[0] + \" - (rc  + 1) - 1),\\n                \" + t[0] + \" - (rc  + 1) - 1);\\n          }\\n          setOutput(result);\\n        }\\n      \" : \"\\n        void main() {\\n          \" + i + \" rc = getOutputCoords();\\n          vec4 result = vec4(0.);\\n          result.r = \" + function (t) {\n      return s(t);\n    }(r.slice()) + \";\\n          if(\" + o + \"){\\n            result.g = \" + function (t) {\n      return t[n - 1] = \"(\" + t[n - 1] + \" + 1)\", s(t);\n    }(r.slice()) + \";\\n          }\\n          if(\" + a + \") {\\n            result.b = \" + function (t) {\n      return t[n - 2] = \"(\" + t[n - 2] + \" + 1)\", s(t);\n    }(r.slice()) + \";\\n            if(\" + o + \") {\\n              result.a = \" + function (t) {\n      return t[n - 1] = \"(\" + t[n - 1] + \" + 1)\", t[n - 2] = \"(\" + t[n - 2] + \" + 1)\", s(t);\n    }(r.slice()) + \";\\n            }\\n          }\\n          setOutput(result);\\n        }\\n    \";\n  };\n}(),\n    Ni = function () {\n  return function (t, e, n, r, o, a, i) {\n    void 0 === i && (i = !0), this.variableNames = [\"updates\", \"indices\", \"defaultValue\"], this.outputShape = a;\n    var s = Uo(o.length),\n        u = Uo(a.length),\n        l = \"\";\n    1 === n ? l = \"i\" : 2 === n && (l = \"i, j\");\n    var c = \"getIndices(\" + l + \")\",\n        h = \"\";\n    1 === r ? h = \"i\" : 2 === r && (h = \"i, coords[1]\");\n    var p = \"getUpdates(\" + h + \")\",\n        f = e > 1 ? \"strides[j]\" : \"strides\";\n    this.userCode = \"\\n        \" + s + \" strides = \" + s + \"(\" + o + \");\\n\\n        void main() {\\n          \" + u + \" coords = getOutputCoords();\\n          float sum = 0.0;\\n          bool found = false;\\n          for (int i = 0; i < \" + t + \"; i++) {\\n            int flattenedIndex = 0;\\n            for (int j = 0; j < \" + e + \"; j++) {\\n              int index = round(\" + c + \");\\n              flattenedIndex += index * \" + f + \";\\n            }\\n            if (flattenedIndex == coords[0]) {\\n              sum += \" + p + \";\\n              found = true;\\n            }\\n          }\\n          setOutput(mix(getDefaultValue(), sum, float(found)));\\n        }\\n      \";\n  };\n}(),\n    ki = function () {\n  return function (t, e) {\n    this.variableNames = [\"x\", \"segmentIds\"];\n    var n = t.windowSize,\n        r = t.batchSize,\n        o = t.inSize,\n        a = t.numSegments,\n        i = a * Math.ceil(o / n);\n    this.outputShape = [r, i];\n    var s = 4 * Math.floor(n / 4),\n        u = n % 4,\n        l = \"\\n        sumValue += dot(values, segFilter);\\n    \",\n        c = \"\";\n    o % n > 0 && (c = \"\\n        if (inIdx < 0 || inIdx >= \" + o + \") {\\n          return initializationValue;\\n        }\\n      \");\n    var h = \"\";\n    o % n > 0 && (h = \"\\n        if (inIdx < 0 || inIdx >= \" + o + \") {\\n          return -1.0;\\n        }\\n      \"), this.userCode = \"\\n      const float initializationValue = 0.0;\\n\\n      float getValue(int batch, int inIdx) {\\n        \" + c + \"\\n        return getX(batch, inIdx);\\n      }\\n\\n      float getSegmentIdAtIndex(int inIdx) {\\n        \" + h + \"\\n        return getSegmentIds(inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = int(floor(float(outIdx) / float(\\n          \" + a + \")) * float(\" + n + \"));\\n        int currentSeg = int(mod(float(outIdx), float(\" + a + \")));\\n\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < \" + s + \"; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\\n          );\\n\\n          \" + l + \"\\n        }\\n\\n        int inIdx = inOffset + \" + s + \";\\n        if (\" + (1 === u) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            0,\\n            0,\\n            0\\n          );\\n\\n          \" + l + \"\\n        } else if (\" + (2 === u) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n              0,\\n              0\\n          );\\n\\n          \" + l + \"\\n        } else if (\" + (3 === u) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\n            0\\n          );\\n\\n          \" + l + \"\\n        }\\n        setOutput(sumValue);\\n      }\\n    \";\n  };\n}(),\n    Ai = function () {\n  return function (t, e, n) {\n    var r, o;\n    if (this.variableNames = [\"c\", \"a\", \"b\"], this.outputShape = e, n > 4) throw Error(\"Where for rank \" + n + \" is not yet supported\");\n    if (1 === n) o = \"resRC\", r = \"resRC\";else {\n      for (var a = [\"resRC.x\", \"resRC.y\", \"resRC.z\", \"resRC.w\"], i = [], s = [], u = 0; u < e.length; u++) s.push(\"\" + a[u]), u < t && i.push(\"\" + a[u]);\n\n      r = i.join(), o = s.join();\n    }\n    var l = Uo(n);\n    this.userCode = \"\\n      void main() {\\n        \" + l + \" resRC = getOutputCoords();\\n        float cVal = getC(\" + r + \");\\n        if (cVal >= 1.0) {\\n          setOutput(getA(\" + o + \"));\\n        } else {\\n          setOutput(getB(\" + o + \"));\\n        }\\n      }\\n    \";\n  };\n}(),\n    Ti = function () {\n  function t(t) {\n    this.variableNames = [\"source\"], this.outputShape = t, this.rank = t.length;\n\n    var e,\n        n = Uo(this.rank),\n        r = \"uniform int start[\" + this.rank + \"];\",\n        o = function (t) {\n      if (1 === t) return \"sourceLoc\";\n      if (t <= 6) return Di.slice(0, t).map(function (t) {\n        return \"sourceLoc.\" + t;\n      }).join(\",\");\n      throw Error(\"Slicing for rank \" + t + \" is not yet supported\");\n    }(this.rank);\n\n    e = \"\\n        \" + n + \" sourceLoc;\\n        \" + n + \" coords = getOutputCoords();\\n        \" + t.map(function (t, e) {\n      return \"sourceLoc.\" + Di[e] + \" = start[\" + e + \"] + coords.\" + Di[e] + \";\";\n    }).join(\"\\n\") + \"\\n      \", this.userCode = \"\\n      \" + r + \"\\n      void main() {\\n        \" + e + \"\\n        setOutput(getSource(\" + o + \"));\\n      }\\n    \";\n  }\n\n  return t.prototype.getCustomSetupFunc = function (t) {\n    var e = this;\n    if (t.length !== this.rank) throw Error(\"The rank (\" + this.rank + \") of the program must match the length of start (\" + t.length + \")\");\n    return function (n, r) {\n      null == e.startLoc && (e.startLoc = n.getUniformLocationNoThrow(r, \"start\"), null == e.startLoc) || n.gl.uniform1iv(e.startLoc, t);\n    };\n  }, t;\n}(),\n    Di = [\"x\", \"y\", \"z\", \"w\", \"u\", \"v\"];\n\nvar _i = function () {\n  function t(t) {\n    this.variableNames = [\"source\"], this.usesPackedTextures = !0, this.outputShape = t, this.rank = t.length;\n    var e = Uo(this.rank),\n        n = So(\"coords\", this.rank),\n        r = So(\"sourceLoc\", this.rank),\n        o = 1 === this.rank ? \"sourceLoc\" : \"vec2(\" + r.slice(-2).join() + \")\",\n        a = \"getChannel(getSource(\" + r.join() + \"), \" + o + \")\",\n        i = \"\\n      result.x = \" + a + \";\\n      if (++\" + n[this.rank - 1] + \" < \" + t[this.rank - 1] + \") {\\n        ++\" + r[this.rank - 1] + \";\\n        result.y = \" + a + \";\\n        --\" + r[this.rank - 1] + \";\\n      }\\n    \",\n        s = 1 === this.rank ? \"\" : \"\\n      --\" + n[this.rank - 1] + \";\\n      if (++\" + n[this.rank - 2] + \" < \" + t[this.rank - 2] + \") {\\n        ++\" + r[this.rank - 2] + \";\\n        result.z = \" + a + \";\\n        if (++\" + n[this.rank - 1] + \" < \" + t[this.rank - 1] + \") {\\n          ++\" + r[this.rank - 1] + \";\\n          result.w = \" + a + \";\\n        }\\n      }\\n    \",\n        u = this.rank <= 4 ? \"sourceLoc = coords +\\n            \" + e + \"(\" + t.map(function (t, e) {\n      return \"start[\" + e + \"]\";\n    }).join() + \");\" : t.map(function (t, e) {\n      return r[e] + \" = \" + n[e] + \" + start[\" + e + \"];\";\n    }).join(\"\\n\");\n    this.userCode = \"\\n      uniform int start[\" + this.rank + \"];\\n      void main() {\\n        \" + e + \" coords = getOutputCoords();\\n        \" + e + \" sourceLoc;\\n        \" + u + \" \\n        vec4 result = vec4(0.);\\n        \" + i + \"\\n        \" + s + \"\\n        setOutput(result);\\n      }\\n    \";\n  }\n\n  return t.prototype.getCustomSetupFunc = function (t) {\n    var e = this;\n    if (t.length !== this.rank) throw Error(\"The rank (\" + this.rank + \") of the program must match the length of start (\" + t.length + \")\");\n    return function (n, r) {\n      null == e.startLoc && (e.startLoc = n.getUniformLocationNoThrow(r, \"start\"), null == e.startLoc) || n.gl.uniform1iv(e.startLoc, t);\n    };\n  }, t;\n}(),\n    Oi = function () {\n  return function (t, e, n, r) {\n    this.variableNames = [\"x\"];\n    var o = n.filter(function (t, e) {\n      return -1 === r.indexOf(e);\n    });\n    this.outputShape = o;\n    var a = n.length,\n        i = Uo(n.length),\n        s = Uo(o.length),\n        u = \"\";\n    if (1 === a) u = \"coords * strides + begin\";else {\n      var l = 0;\n      u = n.map(function (t, e) {\n        return -1 === r.indexOf(e) ? (l++, 1 === o.length ? \"coords * strides[\" + e + \"] + begin[\" + e + \"]\" : \"coords[\" + (l - 1) + \"] * strides[\" + e + \"] + begin[\" + e + \"]\") : \"begin[\" + e + \"]\";\n      }).join(\",\");\n    }\n    this.userCode = \"\\n      \" + i + \" begin = \" + i + \"(\" + t + \");\\n      \" + i + \" strides = \" + i + \"(\" + e + \");\\n\\n      void main() {\\n        \" + s + \" coords = getOutputCoords();\\n        setOutput(getX(\" + u + \"));\\n      }\\n    \";\n  };\n}(),\n    Mi = function () {\n  function t(t) {\n    this.gpgpu = t, this.numUsedTextures = 0, this.numFreeTextures = 0, this.freeTextures = {}, this.logEnabled = !1, this.usedTextures = {};\n  }\n\n  return t.prototype.acquireTexture = function (t, e, n) {\n    var r,\n        o = Fi(e, n),\n        a = Bi(t, o, n);\n\n    if (a in this.freeTextures || (this.freeTextures[a] = []), a in this.usedTextures || (this.usedTextures[a] = []), this.freeTextures[a].length > 0) {\n      this.numFreeTextures--, this.numUsedTextures++, this.log();\n      var i = this.freeTextures[a].shift();\n      return this.usedTextures[a].push(i), i;\n    }\n\n    return this.numUsedTextures++, this.log(), o === Ma.PACKED_2X2_FLOAT32 ? r = this.gpgpu.createPackedMatrixTexture(t[0], t[1]) : o === Ma.PACKED_2X2_FLOAT16 ? r = this.gpgpu.createFloat16PackedMatrixTexture(t[0], t[1]) : o === Ma.UNPACKED_FLOAT32 ? r = this.gpgpu.createFloat32MatrixTexture(t[0], t[1]) : o === Ma.UNPACKED_FLOAT16 ? r = this.gpgpu.createFloat16MatrixTexture(t[0], t[1]) : o === Ma.PACKED_4X1_UNSIGNED_BYTE && (r = this.gpgpu.createUnsignedBytesMatrixTexture(t[0], t[1])), this.usedTextures[a].push(r), r;\n  }, t.prototype.releaseTexture = function (t, e, n, r) {\n    if (null != this.freeTextures) {\n      var o = Bi(e, Fi(n, r), r);\n      o in this.freeTextures || (this.freeTextures[o] = []), this.freeTextures[o].push(t), this.numFreeTextures++, this.numUsedTextures--;\n      var a = this.usedTextures[o],\n          i = a.indexOf(t);\n      if (i < 0) throw new Error(\"Cannot release a texture that was never provided by this texture manager\");\n      a.splice(i, 1), this.log();\n    }\n  }, t.prototype.log = function () {\n    if (this.logEnabled) {\n      var t = this.numFreeTextures + this.numUsedTextures;\n      console.log(\"Free/Used\", this.numFreeTextures + \" / \" + this.numUsedTextures, \"(\" + t + \")\");\n    }\n  }, t.prototype.getNumUsedTextures = function () {\n    return this.numUsedTextures;\n  }, t.prototype.getNumFreeTextures = function () {\n    return this.numFreeTextures;\n  }, t.prototype.dispose = function () {\n    var t = this;\n\n    if (null != this.freeTextures) {\n      for (var e in this.freeTextures) this.freeTextures[e].forEach(function (e) {\n        t.gpgpu.deleteMatrixTexture(e);\n      });\n\n      for (var e in this.usedTextures) this.usedTextures[e].forEach(function (e) {\n        t.gpgpu.deleteMatrixTexture(e);\n      });\n\n      this.freeTextures = null, this.usedTextures = null, this.numUsedTextures = 0, this.numFreeTextures = 0;\n    }\n  }, t;\n}();\n\nfunction Fi(t, e) {\n  if (t === Oa.UPLOAD) return Ma.PACKED_2X2_FLOAT32;\n  if (t === Oa.RENDER || null == t) return e ? s.getBool(\"WEBGL_RENDER_FLOAT32_ENABLED\") ? Ma.PACKED_2X2_FLOAT32 : Ma.PACKED_2X2_FLOAT16 : s.getBool(\"WEBGL_RENDER_FLOAT32_ENABLED\") ? Ma.UNPACKED_FLOAT32 : Ma.UNPACKED_FLOAT16;\n  if (t === Oa.DOWNLOAD || t === Oa.PIXELS) return Ma.PACKED_4X1_UNSIGNED_BYTE;\n  throw new Error(\"Unknown logical texture type \" + t);\n}\n\nfunction Bi(t, e, n) {\n  return t[0] + \"_\" + t[1] + \"_\" + e + \"_\" + n;\n}\n\nvar Pi = function () {\n  return function (t, e) {\n    this.variableNames = [\"A\"];\n\n    for (var n = new Array(t.length), r = 0; r < n.length; r++) n[r] = t[r] * e[r];\n\n    this.outputShape = n, this.rank = n.length;\n\n    var o = Uo(this.rank),\n        a = function (t) {\n      var e = t.length;\n      if (e > 5) throw Error(\"Tile for rank \" + e + \" is not yet supported\");\n      if (1 === e) return \"imod(resRC, \" + t[0] + \")\";\n\n      for (var n = [\"resRC.x\", \"resRC.y\", \"resRC.z\", \"resRC.w\", \"resRC.u\"], r = [], o = 0; o < t.length; o++) r.push(\"imod(\" + n[o] + \", \" + t[o] + \")\");\n\n      return r.join();\n    }(t);\n\n    this.userCode = \"\\n      void main() {\\n        \" + o + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + a + \"));\\n      }\\n    \";\n  };\n}();\n\nvar Li = function () {\n  return function (t, e) {\n    this.variableNames = [\"A\"];\n\n    for (var n = new Array(t.length), r = 0; r < n.length; r++) n[r] = t[e[r]];\n\n    this.outputShape = n, this.rank = n.length;\n\n    var o = Uo(this.rank),\n        a = function (t) {\n      var e = t.length;\n      if (e > 6) throw Error(\"Transpose for rank \" + e + \" is not yet supported\");\n\n      for (var n = [\"resRC.x\", \"resRC.y\", \"resRC.z\", \"resRC.w\", \"resRC.u\", \"resRC.v\"], r = new Array(e), o = 0; o < t.length; o++) r[t[o]] = n[o];\n\n      return r.join();\n    }(e);\n\n    this.userCode = \"\\n    void main() {\\n      \" + o + \" resRC = getOutputCoords();\\n      setOutput(getA(\" + a + \"));\\n    }\\n    \";\n  };\n}();\n\nvar Wi = function () {\n  return function (t, e) {\n    this.variableNames = [\"A\"], this.usesPackedTextures = !0;\n\n    for (var n = new Array(t.length), r = 0; r < n.length; r++) n[r] = t[e[r]];\n\n    if (this.outputShape = n, this.rank = n.length, this.rank > 6) throw Error(\"Packed transpose for rank \" + this.rank + \" is not yet supported.\");\n    var o = Uo(this.rank),\n        a = Io(\"rc\", this.rank),\n        i = new Array(this.rank);\n\n    for (r = 0; r < e.length; r++) i[e[r]] = a[r];\n\n    var s = \"vec2(\" + i.slice(-2).join() + \")\",\n        u = \"++\" + a[this.rank - 1] + \" < \" + n[this.rank - 1],\n        l = \"getChannel(getA(\" + i.join() + \"), \" + s + \")\";\n    this.userCode = \"\\n    void main() {\\n      \" + o + \" rc = getOutputCoords();\\n      vec4 result = vec4(0.);\\n      result[0] = \" + l + \";\\n      if(\" + u + \") {\\n        result[1] = \" + l + \";\\n      }\\n      --\" + a[this.rank - 1] + \";\\n      if(++\" + a[this.rank - 2] + \" < \" + n[this.rank - 2] + \") {\\n        result[2] = \" + l + \";\\n        if(\" + u + \") {\\n          result[3] = \" + l + \";\\n        }\\n      }  \\n      setOutput(result);\\n    }\\n    \";\n  };\n}(),\n    Ui = 1.7580993408473768,\n    zi = 1.0507009873554805,\n    Vi = function () {\n  return function (t, e) {\n    this.variableNames = [\"A\"], this.outputShape = t, this.userCode = \"\\n      float unaryOperation(float x) {\\n        \" + e + \"\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \";\n  };\n}(),\n    Gi = \"if (isnan(x)) return x;\",\n    qi = \"return x;\",\n    Hi = Gi + \"\\n  return (x < 0.0) ? 0.0 : x;\\n\",\n    $i = \"\\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\\n  // see: https://arxiv.org/abs/1706.02515\\n  float scaleAlpha = \" + Ui + \";\\n  float scale = \" + zi + \";\\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\\n\";\n\nvar ji = \"return exp(x);\",\n    Ki = Gi + \"\\n  return sin(x);\\n\",\n    Xi = Gi + \"\\n  return cos(x);\\n\",\n    Yi = Gi + \"\\n  return atan(x);\\n\",\n    Qi = Gi + \"\\n  if (x < 1.0) return NAN;\\n  return log(x + sqrt(x * x - 1.0));\",\n    Ji = Gi + \"\\n  if ((x < -1.0) || (x > 1.0)) return NAN;\\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;\",\n    Zi = \"return x;\",\n    ts = \"\\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n\",\n    es = function () {\n  return function (t, e) {\n    this.variableNames = [\"A\"], this.usesPackedTextures = !0, this.outputShape = t, this.userCode = \"\\n      vec4 unaryOperation(vec4 x) {\\n        \" + e + \"\\n      }\\n\\n      void main() {\\n        vec4 x = getAAtOutCoords();\\n        vec4 y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \";\n  };\n}(),\n    ns = function () {\n  return function (t) {\n    this.variableNames = [\"A\"], this.usesPackedTextures = !0, this.outputShape = t;\n\n    var e = t.length,\n        n = So(\"rc\", e),\n        r = Uo(e),\n        o = function (t, e) {\n      if (1 === t) return \"rc\";\n\n      for (var n = \"\", r = 0; r < t; r++) n += e[r], r < t - 1 && (n += \",\");\n\n      return n;\n    }(e, n),\n        a = n.slice(-2),\n        i = e <= 1 ? \"rc\" : \"vec2(\" + a.join(\",\") + \")\";\n\n    this.userCode = \"\\n      void main() {\\n        \" + r + \" rc = getOutputCoords();\\n        vec4 packedInput = getA(\" + o + \");\\n\\n        setOutput(getChannel(packedInput, \" + i + \"));\\n      }\\n    \";\n  };\n}(),\n    rs = {};\n\nvar os = 600;\n\nvar as = function () {\n  function t(t) {\n    if (this.gpgpu = t, this.pendingRead = new WeakMap(), this.pendingDisposal = new WeakSet(), this.dataRefCount = new WeakMap(), this.numBytesInGPU = 0, this.uploadWaitMs = 0, this.downloadWaitMs = 0, this.warnedAboutMemory = !1, this.disposed = !1, !s.getBool(\"HAS_WEBGL\")) throw new Error(\"WebGL is not supported on this device\");\n\n    if (null == t) {\n      var e = Bt(s.getNumber(\"WEBGL_VERSION\"));\n      this.binaryCache = (n = s.getNumber(\"WEBGL_VERSION\")) in rs ? rs[n] : (rs[n] = {}, rs[n]), this.gpgpu = new oi(e), this.canvas = e.canvas, this.gpgpuCreatedLocally = !0;\n    } else this.binaryCache = {}, this.gpgpuCreatedLocally = !1, this.canvas = t.gl.canvas;\n\n    var n;\n    this.textureManager = new Mi(this.gpgpu), this.numMBBeforeWarning = null == s.global.screen ? 1024 : s.global.screen.height * s.global.screen.width * window.devicePixelRatio * os / 1024 / 1024, this.texData = new $r(this, Dt);\n  }\n\n  return t.prototype.register = function (t, e, n) {\n    if (this.texData.has(t)) throw new Error(\"Data buffer is already registered\");\n    this.texData.set(t, {\n      shape: e,\n      dtype: n\n    });\n  }, t.prototype.fromPixels = function (t, e) {\n    if (null == t) throw new Error(\"pixels passed to tf.browser.fromPixels() can not be null\");\n    var n = [t.height, t.width],\n        r = [t.height, t.width, e],\n        o = \"undefined\" != typeof OffscreenCanvas && t instanceof OffscreenCanvas || \"undefined\" != typeof HTMLCanvasElement && t instanceof HTMLCanvasElement,\n        a = t.data instanceof Uint8Array,\n        i = \"undefined\" != typeof ImageData && t instanceof ImageData,\n        u = \"undefined\" != typeof HTMLVideoElement && t instanceof HTMLVideoElement,\n        l = \"undefined\" != typeof HTMLImageElement && t instanceof HTMLImageElement;\n    if (!(o || a || i || u || l)) throw new Error(\"pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was \" + t.constructor.name);\n\n    if (l || u) {\n      if (null == this.fromPixels2DContext) {\n        if (\"complete\" !== document.readyState) throw new Error(\"The DOM is not ready yet. Please call tf.browser.fromPixels() once the DOM is ready. One way to do that is to add an event listener for `DOMContentLoaded` on the document object\");\n        this.fromPixels2DContext = Pt(s.getNumber(\"WEBGL_VERSION\")).getContext(\"2d\");\n      }\n\n      this.fromPixels2DContext.canvas.width = t.width, this.fromPixels2DContext.canvas.height = t.height, this.fromPixels2DContext.drawImage(t, 0, 0, t.width, t.height), t = this.fromPixels2DContext.canvas;\n    }\n\n    var c,\n        h,\n        p = this.makeTensorHandle(n, \"int32\");\n\n    if (this.texData.get(p.dataId).usage = Oa.PIXELS, this.gpgpu.uploadPixelDataToTexture(this.getTexture(p.dataId), t), s.getBool(\"WEBGL_PACK\")) {\n      c = new Da(r);\n      var f = this.makePackedTensor(c.outputShape, p.dtype);\n      h = this.compileAndRun(c, [p], f);\n    } else c = new Ta(r), h = this.compileAndRun(c, [p]);\n\n    return this.disposeData(p.dataId), h;\n  }, t.prototype.makeTensorHandle = function (t, e) {\n    var n = {};\n    return this.register(n, t, e), {\n      dataId: n,\n      shape: t,\n      dtype: e\n    };\n  }, t.prototype.write = function (t, e) {\n    if (null == e) throw new Error(\"MathBackendWebGL.write(): values can not be null\");\n    if (s.getBool(\"DEBUG\")) for (var n = 0; n < e.length; n++) {\n      var r = e[n];\n      if (!zt(r)) throw Error(\"The value \" + r + \" cannot be represented on this device.\");\n    }\n    var o = this.texData.get(t);\n    if (\"complex64\" === o.dtype) throw new Error(\"Cannot write to a complex64 dtype. Please use tf.complex(real, imag).\");\n    this.releaseGPUData(t), o.usage = Oa.UPLOAD, o.values = e;\n  }, t.prototype.readSync = function (t) {\n    var e = this.texData.get(t),\n        n = e.values,\n        r = e.dtype,\n        o = e.complexTensors,\n        a = e.slice,\n        i = e.shape;\n\n    if (null != a) {\n      var s = new Vi(i, \"return x;\"),\n          u = this.compileAndRun(s, [{\n        dataId: t,\n        shape: i,\n        dtype: r\n      }]),\n          l = this.readSync(u.dataId);\n      return u.dispose(), l;\n    }\n\n    if (null != n) return this.convertAndCacheOnCPU(t);\n    if (\"string\" === r) return n;\n    var c,\n        h,\n        p = null != this.activeTimers;\n    (p && (c = K()), \"complex64\" === r) ? h = ho(o.real.dataSync(), o.imag.dataSync()) : h = this.getValuesFromTexture(t);\n    return p && (this.downloadWaitMs += K() - c), this.convertAndCacheOnCPU(t, h);\n  }, t.prototype.read = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e, n, r, a, i, u, l, c, h, p, f, d, v, m, g, x, b, w, C, E, R;\n      return o(this, function (o) {\n        switch (o.label) {\n          case 0:\n            if (this.pendingRead.has(t)) return n = this.pendingRead.get(t), [2, new Promise(function (t) {\n              return n.push(t);\n            })];\n            if (r = this.texData.get(t), a = r.values, i = r.shape, u = r.slice, l = r.dtype, c = r.complexTensors, null != u) return h = new Vi(i, \"return x;\"), p = this.compileAndRun(h, [{\n              dataId: t,\n              shape: i,\n              dtype: l\n            }]), f = this.read(p.dataId), p.dispose(), [2, f];\n            if (null != a) return [2, this.convertAndCacheOnCPU(t)];\n            if (!s.getBool(\"WEBGL_DOWNLOAD_FLOAT_ENABLED\") && 2 === s.getNumber(\"WEBGL_VERSION\")) throw new Error(\"tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.\");\n            return d = null, \"complex64\" !== l && s.get(\"WEBGL_BUFFER_SUPPORTED\") && (v = this.decode(t), t = v.dataId, m = this.texData.get(v.dataId), d = (e = this.gpgpu).createBufferFromTexture.apply(e, [m.texture].concat(Pa(i)))), this.pendingRead.set(t, []), \"complex64\" === l ? [3, 2] : [4, this.gpgpu.createAndWaitForFence()];\n\n          case 1:\n            o.sent(), o.label = 2;\n\n          case 2:\n            return \"complex64\" !== l ? [3, 4] : [4, Promise.all([c.real.data(), c.imag.data()])];\n\n          case 3:\n            return x = o.sent(), b = x[0], w = x[1], g = ho(b, w), [3, 5];\n\n          case 4:\n            null == d ? g = this.getValuesFromTexture(t) : (C = y(i), g = this.gpgpu.downloadFloat32MatrixFromBuffer(d, C), this.disposeData(t)), o.label = 5;\n\n          case 5:\n            return E = this.convertAndCacheOnCPU(t, g), R = this.pendingRead.get(t), this.pendingRead.delete(t), R.forEach(function (t) {\n              return t(E);\n            }), this.pendingDisposal.has(t) && (this.pendingDisposal.delete(t), this.disposeData(t)), [2, E];\n        }\n      });\n    });\n  }, t.prototype.getValuesFromTexture = function (t) {\n    var e,\n        n = this,\n        r = this.texData.get(t),\n        o = r.shape,\n        a = r.dtype,\n        i = r.isPacked,\n        u = y(o);\n\n    if (s.getBool(\"WEBGL_DOWNLOAD_FLOAT_ENABLED\")) {\n      var l = this.decode(t),\n          c = this.texData.get(l.dataId),\n          h = (e = this.gpgpu).downloadMatrixFromPackedTexture.apply(e, [c.texture].concat(Pa(o))).subarray(0, u);\n      return this.disposeData(l.dataId), h;\n    }\n\n    var p = s.getBool(\"WEBGL_PACK\") && !0 === i,\n        f = p ? me(o) : o,\n        d = this.makeTensorHandle(f, \"float32\");\n    d.size = y(o), this.texData.get(d.dataId).usage = Oa.DOWNLOAD;\n    var v = Pe(function () {\n      var e = p ? new Ea(f) : new Ca(f);\n      return n.compileAndRun(e, [{\n        shape: f,\n        dtype: a,\n        dataId: t\n      }], d, null);\n    }),\n        m = this.texData.get(v.dataId),\n        g = this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(m.texture, m.texShape[0], m.texShape[1]).subarray(0, u);\n    return this.disposeData(d.dataId), g;\n  }, t.prototype.time = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e, n, r, a, i, s, u;\n      return o(this, function (o) {\n        switch (o.label) {\n          case 0:\n            return e = this.activeTimers, n = [], r = !1, null == this.programTimersStack ? (this.programTimersStack = n, r = !0) : this.activeTimers.push(n), this.activeTimers = n, t(), a = g(this.activeTimers.map(function (t) {\n              return t.query;\n            })).filter(function (t) {\n              return null != t;\n            }), i = g(this.activeTimers.map(function (t) {\n              return t.name;\n            })).filter(function (t) {\n              return null != t;\n            }), this.activeTimers = e, r && (this.programTimersStack = null), [4, Promise.all(a)];\n\n          case 1:\n            return s = o.sent(), u = {\n              uploadWaitMs: this.uploadWaitMs,\n              downloadWaitMs: this.downloadWaitMs,\n              kernelMs: f(s),\n              getExtraProfileInfo: function () {\n                return s.map(function (t, e) {\n                  return {\n                    name: i[e],\n                    ms: t\n                  };\n                }).map(function (t) {\n                  return t.name + \": \" + t.ms;\n                }).join(\", \");\n              },\n              wallMs: null\n            }, this.uploadWaitMs = 0, this.downloadWaitMs = 0, [2, u];\n        }\n      });\n    });\n  }, t.prototype.memory = function () {\n    return {\n      unreliable: !1,\n      numBytesInGPU: this.numBytesInGPU\n    };\n  }, t.prototype.startTimer = function () {\n    return s.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\") > 0 ? this.gpgpu.beginQuery() : {\n      startMs: K(),\n      endMs: null\n    };\n  }, t.prototype.endTimer = function (t) {\n    return s.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\") > 0 ? (this.gpgpu.endQuery(), t) : (t.endMs = K(), t);\n  }, t.prototype.getQueryTime = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e;\n      return o(this, function (n) {\n        return s.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\") > 0 ? [2, this.gpgpu.waitForQueryAndGetTime(t)] : [2, (e = t).endMs - e.startMs];\n      });\n    });\n  }, t.prototype.disposeData = function (t) {\n    if (!this.pendingDisposal.has(t)) if (this.pendingRead.has(t)) this.pendingDisposal.add(t);else if (this.texData.has(t)) {\n      this.releaseGPUData(t);\n      var e = this.texData.get(t).complexTensors;\n      null != e && (e.real.dispose(), e.imag.dispose()), this.texData.delete(t);\n    }\n  }, t.prototype.releaseGPUData = function (t) {\n    var e = this.texData.get(t),\n        n = e.texture,\n        r = e.dtype,\n        o = e.texShape,\n        a = e.usage,\n        i = e.isPacked,\n        s = e.slice,\n        u = s && s.origDataId || t,\n        l = this.dataRefCount.get(u);\n    l > 1 ? this.dataRefCount.set(u, l - 1) : (this.dataRefCount.delete(u), null != n && (this.numBytesInGPU -= this.computeBytes(o, r), this.textureManager.releaseTexture(n, o, a, i)));\n    var c = this.texData.get(t);\n    c.texture = null, c.texShape = null, c.isPacked = !1, c.slice = null;\n  }, t.prototype.getTexture = function (t) {\n    return this.uploadToGPU(t), this.texData.get(t).texture;\n  }, t.prototype.getCPUBackend = function () {\n    return s.getBool(\"WEBGL_CPU_FORWARD\") ? (null == this.cpuBackend && (this.cpuBackend = Dt.findBackend(\"cpu\")), this.cpuBackend) : null;\n  }, t.prototype.shouldExecuteOnCPU = function (t, e) {\n    var n = this;\n    return void 0 === e && (e = 128), null != this.getCPUBackend() && t.every(function (t) {\n      return null == n.texData.get(t.dataId).texture && t.size < e;\n    });\n  }, t.prototype.getGPGPUContext = function () {\n    return this.gpgpu;\n  }, t.prototype.complex = function (t, e) {\n    var n = this.makeOutputArray(t.shape, \"complex64\");\n    return this.texData.get(n.dataId).complexTensors = {\n      real: Dt.keep(t.clone()),\n      imag: Dt.keep(e.clone())\n    }, n;\n  }, t.prototype.real = function (t) {\n    return this.texData.get(t.dataId).complexTensors.real.clone();\n  }, t.prototype.imag = function (t) {\n    return this.texData.get(t.dataId).complexTensors.imag.clone();\n  }, t.prototype.slice = function (t, e, n) {\n    if (this.shouldExecuteOnCPU([t])) return this.cpuBackend.slice(t, e, n);\n    if (0 === y(n)) return mn([], n, t.dtype);\n    var r = this.texData.get(t.dataId).isPacked,\n        o = Fr(t.shape, e, n);\n\n    if (r || !o) {\n      var a = s.getBool(\"WEBGL_PACK_ARRAY_OPERATIONS\") ? new _i(n) : new Ti(n),\n          i = a.getCustomSetupFunc(e);\n      return this.compileAndRun(a, [t], null, i);\n    }\n\n    return this.uploadToGPU(t.dataId), this.shallowSlice(t, e, n);\n  }, t.prototype.shallowSlice = function (t, e, n) {\n    var r = this.texData.get(t.dataId),\n        o = ft.make(n, {}, t.dtype, this),\n        a = this.texData.get(o.dataId);\n    Object.assign(a, r), a.shape = n, a.dtype = t.dtype;\n    var i = Br(e, t.strides);\n    r.slice && (i += r.slice.flatOffset), a.slice = {\n      flatOffset: i,\n      origDataId: r.slice && r.slice.origDataId || t.dataId\n    };\n    var s = this.dataRefCount.get(a.slice.origDataId) || 1;\n    return this.dataRefCount.set(a.slice.origDataId, s + 1), o;\n  }, t.prototype.stridedSlice = function (t, e, n, r, o, a, i, s, u) {\n    if (this.shouldExecuteOnCPU([t])) return this.cpuBackend.stridedSlice(t, e, n, r, o, a, i, s, u);\n\n    var l = _r(t.shape, e, n, r, o, a, i, s, u),\n        c = l[0],\n        h = l[1],\n        p = l[2],\n        f = h.filter(function (t, e) {\n      return -1 === p.indexOf(e);\n    });\n\n    if (f.some(function (t) {\n      return 0 === t;\n    })) return mn([], f);\n    var d = new Oi(c, r, h, p);\n    return this.compileAndRun(d, [t]);\n  }, t.prototype.reverse = function (t, e) {\n    var n = s.getBool(\"WEBGL_PACK_ARRAY_OPERATIONS\") ? new Si(t.shape, e) : new Ii(t.shape, e);\n    return this.compileAndRun(n, [t]);\n  }, t.prototype.concat = function (t, e) {\n    if (this.shouldExecuteOnCPU(t)) return this.cpuBackend.concat(t, e);\n    if (1 === t.length) return t[0];\n\n    if (t.length > s.getNumber(\"WEBGL_MAX_TEXTURES_IN_SHADER\")) {\n      var n = Math.floor(t.length / 2),\n          r = this.concat(t.slice(0, n), e),\n          o = this.concat(t.slice(n), e);\n      return this.concat([r, o], e);\n    }\n\n    if (s.getBool(\"WEBGL_PACK_ARRAY_OPERATIONS\") && t[0].rank > 1) {\n      var a = new aa(t.map(function (t) {\n        return t.shape;\n      }), e);\n      return this.compileAndRun(a, t);\n    }\n\n    var i = hn(t.map(function (t) {\n      return t.shape;\n    }), e),\n        u = t.map(function (t) {\n      return t.as2D(-1, y(t.shape.slice(e)));\n    }),\n        l = new oa(u.map(function (t) {\n      return t.shape;\n    }));\n    return this.compileAndRun(l, u).reshape(i);\n  }, t.prototype.neg = function (t) {\n    var e = new Vi(t.shape, \"return -x;\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.batchMatMul = function (t, e, n, r) {\n    var o = n ? t.shape[2] : t.shape[1],\n        a = r ? e.shape[1] : e.shape[2],\n        i = n ? t.shape[1] : t.shape[2],\n        s = t.shape[0];\n\n    if ((1 === o || 1 === a) && i > 1e3) {\n      n && (t = t.transpose([0, 2, 1])), r && (e = e.transpose([0, 2, 1]));\n      var u = 1 === a ? t : t.as3D(s, i, 1),\n          l = 1 === a ? 2 : 1,\n          c = 1 === a ? e.as3D(s, 1, i) : e;\n      return this.multiply(u, c).sum(l, !0);\n    }\n\n    var h = Ct(t.dtype, e.dtype),\n        p = new hi(t.shape, [s, o, a], n, r),\n        f = this.makePackedTensor(p.outputShape, h);\n    return this.compileAndRun(p, [t, e], f);\n  }, t.prototype.fusedBatchMatMul = function (t, e, n, r, o, a) {\n    var i = n ? t.shape[2] : t.shape[1],\n        s = r ? e.shape[1] : e.shape[2],\n        u = t.shape[0],\n        l = Ct(t.dtype, e.dtype),\n        c = new hi(t.shape, [u, i, s], n, r, !!o, a ? function (t, e) {\n      if (void 0 === e && (e = !1), \"linear\" === t) return e ? Zi : qi;\n      if (\"relu\" === t) return e ? ts : Hi;\n      throw new Error(\"Activation \" + t + \" has not been implemented for the WebGL backend.\");\n    }(a, !0) : null),\n        h = this.makePackedTensor(c.outputShape, l),\n        p = [t, e];\n    return o && p.push(o), this.compileAndRun(c, p, h);\n  }, t.prototype.multiply = function (t, e) {\n    if (\"complex64\" === t.dtype) {\n      var n = this.texData.get(t.dataId),\n          r = this.texData.get(e.dataId),\n          o = new Xo(jo, t.shape, e.shape),\n          a = new Xo(Ko, t.shape, e.shape),\n          i = [this.makeComplexComponentTensorHandle(t, n.complexTensors.real), this.makeComplexComponentTensorHandle(t, n.complexTensors.imag), this.makeComplexComponentTensorHandle(e, r.complexTensors.real), this.makeComplexComponentTensorHandle(e, r.complexTensors.imag)],\n          u = this.compileAndRun(o, i),\n          l = this.compileAndRun(a, i),\n          c = this.complex(u, l);\n      return u.dispose(), l.dispose(), c;\n    }\n\n    if (this.shouldExecuteOnCPU([t, e])) return this.cpuBackend.multiply(t, e);\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) return this.packedBinaryOp(t, e, Jo, t.dtype);\n    var h = new Zo(Jo, t.shape, e.shape),\n        p = this.makeOutputArray(h.outputShape, t.dtype);\n    return this.compileAndRun(h, [t, e], p);\n  }, t.prototype.batchNormalization = function (t, e, n, r, o, a) {\n    var i = [t, e, n],\n        u = null;\n    null != a && (u = a.shape, i.push(a));\n    var l = null;\n\n    if (null != o && (l = o.shape, i.push(o)), s.getBool(\"WEBGL_PACK_NORMALIZATION\")) {\n      var c = new $o(t.shape, e.shape, n.shape, u, l, r);\n      return this.compileAndRun(c, i);\n    }\n\n    var h = new Ho(t.shape, e.shape, n.shape, u, l, r);\n    return this.compileAndRun(h, i);\n  }, t.prototype.localResponseNormalization4D = function (t, e, n, r, o) {\n    var a = s.getBool(\"WEBGL_PACK_NORMALIZATION\") ? new li(t.shape, e, n, r, o) : new si(t.shape, e, n, r, o);\n    return this.compileAndRun(a, [t]);\n  }, t.prototype.LRNGrad = function (t, e, n, r, o, a, i) {\n    var s = new ui(e.shape, r, o, a, i);\n    return this.compileAndRun(s, [e, n, t]);\n  }, t.prototype.tile = function (t, e) {\n    if (\"string\" === t.dtype) {\n      var n = this.readSync(t.dataId).map(function (t) {\n        return J(t);\n      });\n      return xo(Xn(t.shape, t.dtype, n), e);\n    }\n\n    var r = new Pi(t.shape, e);\n    return this.compileAndRun(r, [t]);\n  }, t.prototype.pad = function (t, e, n) {\n    var r = s.getBool(\"WEBGL_PACK_ARRAY_OPERATIONS\") ? new mi(t.shape, e, n) : new vi(t.shape, e, n);\n    return this.compileAndRun(r, [t]);\n  }, t.prototype.transpose = function (t, e) {\n    if (this.shouldExecuteOnCPU([t])) return this.cpuBackend.transpose(t, e);\n    var n = s.getBool(\"WEBGL_PACK_ARRAY_OPERATIONS\") ? new Wi(t.shape, e) : new Li(t.shape, e);\n    return this.compileAndRun(n, [t]);\n  }, t.prototype.gather = function (t, e, n) {\n    if (this.shouldExecuteOnCPU([t, e])) return this.cpuBackend.gather(t, e, n);\n    var r = new _a(t.shape, e.size, n);\n    return this.compileAndRun(r, [t, e]);\n  }, t.prototype.batchToSpaceND = function (t, e, n) {\n    d(t.rank <= 4, function () {\n      return \"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet\";\n    });\n    var r = e.reduce(function (t, e) {\n      return t * e;\n    }),\n        o = Cr(t.shape, e, r),\n        a = Er(o.length, e.length),\n        i = Rr(t.shape, e, r),\n        s = Ir(n, e.length),\n        u = Sr(i, n, e.length);\n    return t.reshape(o).transpose(a).reshape(i).slice(s, u);\n  }, t.prototype.spaceToBatchND = function (t, e, n) {\n    d(t.rank <= 4, function () {\n      return \"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet\";\n    });\n    var r = e.reduce(function (t, e) {\n      return t * e;\n    }),\n        o = [[0, 0]];\n    o.push.apply(o, n);\n\n    for (var a = 1 + e.length; a < t.shape.length; ++a) o.push([0, 0]);\n\n    var i = t.pad(o),\n        s = Cr(i.shape, e, r, !1),\n        u = Er(s.length, e.length, !1),\n        l = Rr(i.shape, e, r, !1);\n    return i.reshape(s).transpose(u).reshape(l);\n  }, t.prototype.reduce = function (t, e, n) {\n    var r = t.shape[0],\n        o = t.shape[1],\n        a = Ar(o),\n        i = new yi({\n      windowSize: a,\n      inSize: o,\n      batchSize: r\n    }, e),\n        s = i.outputShape,\n        u = s[0],\n        l = s[1],\n        c = this.makeOutputArray([u, l], n);\n    return this.compileAndRun(i, [t], c), 1 === c.shape[1] ? c : this.reduce(c, e, n);\n  }, t.prototype.argReduce = function (t, e, n) {\n    void 0 === n && (n = null);\n    var r = t.shape[0],\n        o = t.shape[1];\n    null != n && (r = n.shape[0], o = n.shape[1]);\n    var a = Ar(o),\n        i = new Ro({\n      windowSize: a,\n      inSize: o,\n      batchSize: r\n    }, e, null == n),\n        s = i.outputShape,\n        u = s[0],\n        l = s[1],\n        c = this.makeOutputArray([u, l], \"int32\"),\n        h = [t];\n    return null != n && h.push(n), this.compileAndRun(i, h, c), 1 === c.shape[1] ? c : this.argReduce(t, e, c);\n  }, t.prototype.argReducePacked = function (t, e, n) {\n    void 0 === n && (n = null);\n    var r = null != n ? n.shape : t.shape,\n        o = Ar(r[r.length - 1]),\n        a = new Go(r, o, e, null == n),\n        i = this.makePackedTensor(a.outputShape, \"int32\"),\n        s = null == n ? [t] : [t, n];\n    return this.compileAndRun(a, s, i), i.rank === t.rank ? this.argReducePacked(t, e, i) : i;\n  }, t.prototype.sum = function (t, e) {\n    an(\"sum\", e, t.rank);\n    var n = rn(t.shape, e),\n        r = n[0],\n        o = y(n[1]),\n        a = t.as2D(-1, o),\n        i = Et(t.dtype);\n    return this.reduce(a, \"sum\", i).reshape(r);\n  }, t.prototype.prod = function (t, e) {\n    if (this.shouldExecuteOnCPU([t])) return this.cpuBackend.prod(t, e);\n    var n = rn(t.shape, e),\n        r = n[0],\n        o = y(n[1]),\n        a = t.as2D(-1, o),\n        i = Et(t.dtype);\n    return this.reduce(a, \"prod\", i).reshape(r);\n  }, t.prototype.unsortedSegmentSum = function (t, e, n) {\n    var r = 0,\n        o = sn([r], t.rank),\n        a = t;\n    null != o && (a = t.transpose(o), r = ln(1, t.rank)[0]);\n\n    var i = function (t, e, n) {\n      for (var r = [], o = t.length, a = 0; a < o; a++) a !== e ? r.push(t[a]) : r.push(n);\n\n      return r;\n    }(a.shape, r, n),\n        s = y([a.shape[r]]),\n        u = a.as2D(-1, s),\n        l = Et(t.dtype),\n        c = this.segOpCompute(u, \"unsortedSegmentSum\", e, l, n).reshape(i);\n\n    return null != o && (c = c.transpose(un(o))), c;\n  }, t.prototype.segOpCompute = function (t, e, n, r, o) {\n    var a = t.shape[0],\n        i = t.shape[1],\n        s = function (t, e) {\n      var n,\n          r = !1;\n\n      for (t <= kr ? (n = t, r = !0) : n = V(t, Math.floor(Math.sqrt(t))); !r;) n > e || n === t ? r = !0 : n = V(t, n + 1);\n\n      return n;\n    }(i, o),\n        u = new ki({\n      windowSize: s,\n      inSize: i,\n      batchSize: a,\n      numSegments: o\n    }, e),\n        l = u.outputShape,\n        c = l[0],\n        h = l[1],\n        p = this.makeOutputArray([c, h], r);\n\n    return this.compileAndRun(u, [t, n], p), p.shape[1] === o ? p : (n = An(0, o).tile([i / s]), this.segOpCompute(p, e, n, r, o));\n  }, t.prototype.argMinMaxReduce = function (t, e, n) {\n    var r = [e];\n\n    if (an(\"arg\" + n.charAt(0).toUpperCase() + n.slice(1), r, t.rank), !s.getBool(\"WEBGL_PACK_REDUCE\") || t.rank <= 2) {\n      var o = rn(t.shape, r),\n          a = o[0],\n          i = y(o[1]),\n          u = t.as2D(-1, i);\n      return this.argReduce(u, n).reshape(a);\n    }\n\n    return this.argReducePacked(t, n);\n  }, t.prototype.argMin = function (t, e) {\n    return this.argMinMaxReduce(t, e, \"min\");\n  }, t.prototype.argMax = function (t, e) {\n    return this.argMinMaxReduce(t, e, \"max\");\n  }, t.prototype.cumsum = function (t, e, n, r) {\n    if (e !== t.rank - 1) throw new Error(\"WebGL cumsum shader expects an inner-most axis=\" + (t.rank - 1) + \" but got axis=\" + e);\n    var o = new ga(t.shape, n, r);\n    return this.compileAndRun(o, [t]);\n  }, t.prototype.equal = function (t, e) {\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) return this.packedBinaryOp(t, e, \"\\n  return vec4(equal(a, b));\\n\", \"bool\");\n    var n = new Zo(\"return float(a == b);\", t.shape, e.shape),\n        r = this.makeOutputArray(n.outputShape, \"bool\");\n    return this.compileAndRun(n, [t, e], r);\n  }, t.prototype.notEqual = function (t, e) {\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) return this.packedBinaryOp(t, e, \"\\n  return vec4(notEqual(a, b));\\n\", \"bool\");\n    var n = new Zo(\"return float(a != b);\", t.shape, e.shape),\n        r = this.makeOutputArray(n.outputShape, \"bool\");\n    return this.compileAndRun(n, [t, e], r);\n  }, t.prototype.less = function (t, e) {\n    if (this.shouldExecuteOnCPU([t, e])) return this.cpuBackend.less(t, e);\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) return this.packedBinaryOp(t, e, \"\\n  return vec4(lessThan(a, b));\\n\", \"bool\");\n    var n = new Zo(\"return float(a < b);\", t.shape, e.shape),\n        r = this.makeOutputArray(n.outputShape, \"bool\");\n    return this.compileAndRun(n, [t, e], r);\n  }, t.prototype.lessEqual = function (t, e) {\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) return this.packedBinaryOp(t, e, \"\\n  return vec4(lessThanEqual(a, b));\\n\", \"bool\");\n    var n = new Zo(\"return float(a <= b);\", t.shape, e.shape),\n        r = this.makeOutputArray(n.outputShape, \"bool\");\n    return this.compileAndRun(n, [t, e], r);\n  }, t.prototype.greater = function (t, e) {\n    if (this.shouldExecuteOnCPU([t, e])) return this.cpuBackend.greater(t, e);\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) return this.packedBinaryOp(t, e, \"\\n  return vec4(greaterThan(a, b));\\n\", \"bool\");\n    var n = new Zo(\"return float(a > b);\", t.shape, e.shape),\n        r = this.makeOutputArray(n.outputShape, \"bool\");\n    return this.compileAndRun(n, [t, e], r);\n  }, t.prototype.greaterEqual = function (t, e) {\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) return this.packedBinaryOp(t, e, \"\\n  return vec4(greaterThanEqual(a, b));\\n\", \"bool\");\n    var n = new Zo(\"return float(a >= b);\", t.shape, e.shape),\n        r = this.makeOutputArray(n.outputShape, \"bool\");\n    return this.compileAndRun(n, [t, e], r);\n  }, t.prototype.logicalNot = function (t) {\n    var e = new Vi(t.shape, \"return float(!(x >= 1.0));\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.logicalAnd = function (t, e) {\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) return this.packedBinaryOp(t, e, \"\\n  return vec4(\\n    vec4(greaterThanEqual(a, vec4(1.0))) *\\n    vec4(greaterThanEqual(b, vec4(1.0))));\\n\", \"bool\");\n    var n = new Zo(\"return float(a >= 1.0 && b >= 1.0);\", t.shape, e.shape),\n        r = this.makeOutputArray(n.outputShape, \"bool\");\n    return this.compileAndRun(n, [t, e], r);\n  }, t.prototype.logicalOr = function (t, e) {\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) return this.packedBinaryOp(t, e, \"\\n  return min(\\n    vec4(greaterThanEqual(a, vec4(1.0))) +\\n    vec4(greaterThanEqual(b, vec4(1.0))),\\n    vec4(1.0));\\n\", \"bool\");\n    var n = new Zo(\"return float(a >= 1.0 || b >= 1.0);\", t.shape, e.shape),\n        r = this.makeOutputArray(n.outputShape, \"bool\");\n    return this.compileAndRun(n, [t, e], r);\n  }, t.prototype.select = function (t, e, n) {\n    var r = new Ai(t.rank, e.shape, e.rank),\n        o = this.makeOutputArray(r.outputShape, Ct(e.dtype, n.dtype));\n    return this.compileAndRun(r, [t, e, n], o);\n  }, t.prototype.where = function (t) {\n    Ye(\"tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead\");\n    var e = t.dataSync();\n    return wo(t.shape, e);\n  }, t.prototype.topk = function (t, e, n) {\n    return bo(t.dataSync(), t.shape, t.dtype, e);\n  }, t.prototype.min = function (t, e) {\n    an(\"min\", e, t.rank);\n    var n = rn(t.shape, e),\n        r = n[0],\n        o = y(n[1]),\n        a = t.as2D(-1, o);\n    return this.reduce(a, \"min\", a.dtype).reshape(r);\n  }, t.prototype.minimum = function (t, e) {\n    if (this.shouldExecuteOnCPU([t, e])) return this.cpuBackend.minimum(t, e);\n    var n = s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\") ? new ta(\"\\n  vec4 result = vec4(min(a, b));\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\\n  return result;\\n\", t.shape, e.shape) : new Zo(\"\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n\\n  return min(a, b);\\n\", t.shape, e.shape);\n    return this.compileAndRun(n, [t, e]);\n  }, t.prototype.mod = function (t, e) {\n    var n = s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\") ? new ta(\"\\n  vec4 result = mod(a, b);\\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\\n  \\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\\n  return result;\\n\", t.shape, e.shape) : new Zo(\"if (b == 0.0) return NAN;\\n  return mod(a, b);\", t.shape, e.shape);\n    return this.compileAndRun(n, [t, e]);\n  }, t.prototype.max = function (t, e) {\n    if (this.shouldExecuteOnCPU([t])) return this.cpuBackend.max(t, e);\n    an(\"max\", e, t.rank);\n    var n = rn(t.shape, e),\n        r = n[0],\n        o = y(n[1]),\n        a = t.as2D(-1, o);\n    return this.reduce(a, \"max\", a.dtype).reshape(r);\n  }, t.prototype.maximum = function (t, e) {\n    if (this.shouldExecuteOnCPU([t, e])) return this.cpuBackend.maximum(t, e);\n    var n = s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\") ? new ta(\"\\n  vec4 result = vec4(max(a, b));\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\\n  return result;\\n\", t.shape, e.shape) : new Zo(\"\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n\\n  return max(a, b);\\n\", t.shape, e.shape);\n    return this.compileAndRun(n, [t, e]);\n  }, t.prototype.all = function (t, e) {\n    an(\"all\", e, t.rank);\n    var n = rn(t.shape, e),\n        r = n[0],\n        o = y(n[1]),\n        a = t.as2D(-1, o);\n    return this.reduce(a, \"all\", a.dtype).reshape(r);\n  }, t.prototype.any = function (t, e) {\n    an(\"any\", e, t.rank);\n    var n = rn(t.shape, e),\n        r = n[0],\n        o = y(n[1]),\n        a = t.as2D(-1, o);\n    return this.reduce(a, \"any\", a.dtype).reshape(r);\n  }, t.prototype.squaredDifference = function (t, e) {\n    var n = s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\") ? new ta(\"return (a - b) * (a - b);\", t.shape, e.shape) : new Zo(\"return (a - b) * (a - b);\", t.shape, e.shape);\n    return this.compileAndRun(n, [t, e]);\n  }, t.prototype.realDivide = function (t, e) {\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) {\n      return this.packedBinaryOp(t, e, \"\\n  // vec4 one = vec4(equal(a, b));\\n  // return one + (vec4(1.0) - one) * a / b;\\n  vec4 result = a / b;\\n  if(b.x == 0.0) {\\n    result.x = NAN;\\n  } else if(a.x == b.x) {\\n    result.x = 1.;\\n  }\\n  if(b.y == 0.0) {\\n    result.y = NAN;\\n  } else if(a.y == b.y) {\\n    result.y = 1.;\\n  }\\n  if(b.z == 0.0) {\\n    result.z = NAN;\\n  } else if(a.z == b.z) {\\n    result.z = 1.;\\n  }\\n  if(b.w == 0.0) {\\n    result.w = NAN;\\n  } else if(a.w == b.w) {\\n    result.w = 1.;\\n  }\\n\\n  return result;\\n\", \"float32\", !0);\n    }\n\n    var n = new Zo(\"\\nif (b == 0.0) {\\n  return NAN;\\n}\\nif (a == b) {\\n  return 1.0;\\n};\\nreturn a / b;\", t.shape, e.shape),\n        r = this.makeOutputArray(n.outputShape, \"float32\");\n    return this.compileAndRun(n, [t, e], r);\n  }, t.prototype.floorDiv = function (t, e) {\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) return this.packedBinaryOp(t, e, \"\\n  ivec4 ia = round(a);\\n  ivec4 ib = round(b);\\n  bvec4 cond = notEqual(ib, ivec4(0));\\n  ivec4 result = ivec4(0);\\n  vec4 s = sign(a) * sign(b);\\n\\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n  if (cond[0]) {\\n    result[0] = idiv(ia[0], ib[0], s[0]);\\n  }\\n  if (cond[1]) {\\n    result[1] = idiv(ia[1], ib[1], s[1]);\\n  }\\n  if (cond[2]) {\\n    result[2] = idiv(ia[2], ib[2], s[2]);\\n  }\\n  if (cond[3]) {\\n    result[3] = idiv(ia[3], ib[3], s[3]);\\n  }\\n  return vec4(result);\\n\", \"int32\");\n    var n = new Zo(\"\\n  float s = sign(a) * sign(b);\\n  int ia = round(a);\\n  int ib = round(b);\\n  if (ib != 0) {\\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n    return float(idiv(ia, ib, s));\\n  } else {\\n    return NAN;\\n  }\\n\", t.shape, e.shape),\n        r = this.makeOutputArray(n.outputShape, \"int32\");\n    return this.compileAndRun(n, [t, e], r);\n  }, t.prototype.add = function (t, e) {\n    if (\"complex64\" === t.dtype && \"complex64\" === e.dtype) return this.complexSeparableBinaryOp(t, e, Yo);\n    if (this.shouldExecuteOnCPU([t, e])) return this.cpuBackend.add(t, e);\n    var n = Ct(t.dtype, e.dtype);\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) return this.packedBinaryOp(t, e, Yo, n);\n    var r = new Zo(Yo, t.shape, e.shape),\n        o = this.makeOutputArray(r.outputShape, n);\n    return this.compileAndRun(r, [t, e], o);\n  }, t.prototype.packedBinaryOp = function (t, e, n, r, o) {\n    void 0 === o && (o = !1);\n    var a = new ta(n, t.shape, e.shape, o),\n        i = this.makePackedTensor(a.outputShape, r);\n    return this.compileAndRun(a, [t, e], i);\n  }, t.prototype.complexSeparableBinaryOp = function (t, e, n) {\n    var r = this,\n        o = this.texData.get(t.dataId),\n        a = this.texData.get(e.dataId),\n        i = [[o.complexTensors.real, a.complexTensors.real], [o.complexTensors.imag, a.complexTensors.imag]].map(function (o) {\n      var a = o[0],\n          i = o[1],\n          s = r.makeComplexComponentTensorHandle(t, a),\n          u = r.makeComplexComponentTensorHandle(e, i),\n          l = new Zo(n, t.shape, e.shape),\n          c = r.makeOutputArray(l.outputShape, Ct(a.dtype, i.dtype));\n      return r.compileAndRun(l, [s, u], c);\n    }),\n        s = i[0],\n        u = i[1],\n        l = this.complex(s, u);\n    return s.dispose(), u.dispose(), l;\n  }, t.prototype.makeComplexComponentTensorHandle = function (t, e) {\n    return {\n      dataId: e.dataId,\n      dtype: e.dtype,\n      shape: t.shape\n    };\n  }, t.prototype.addN = function (t) {\n    if (1 === t.length) return t[0];\n\n    if (t.length > s.get(\"WEBGL_MAX_TEXTURES_IN_SHADER\")) {\n      var e = Math.floor(t.length / 2),\n          n = this.addN(t.slice(0, e)),\n          r = this.addN(t.slice(e));\n      return this.addN([n, r]);\n    }\n\n    var o = t.map(function (t) {\n      return t.dtype;\n    }).reduce(function (t, e) {\n      return Ct(t, e);\n    }),\n        a = t.map(function (t) {\n      return t.shape;\n    }),\n        i = s.getBool(\"WEBGL_PACK\"),\n        u = i ? new Eo(t[0].shape, a) : new Co(t[0].shape, a),\n        l = i ? this.makePackedTensor(u.outputShape, o) : this.makeOutputArray(u.outputShape, o);\n    return this.compileAndRun(u, t, l);\n  }, t.prototype.subtract = function (t, e) {\n    if (\"complex64\" === t.dtype && \"complex64\" === e.dtype) return this.complexSeparableBinaryOp(t, e, Qo);\n    if (this.shouldExecuteOnCPU([t, e])) return this.cpuBackend.subtract(t, e);\n    var n = Ct(t.dtype, e.dtype);\n    if (s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")) return this.packedBinaryOp(t, e, Qo, t.dtype);\n    var r = new Zo(Qo, t.shape, e.shape),\n        o = this.makeOutputArray(r.outputShape, n);\n    return this.compileAndRun(r, [t, e], o);\n  }, t.prototype.pow = function (t, e) {\n    var n = s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"),\n        r = n ? new ta(\"\\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\\n  vec4 result = multiplier * pow(abs(a), b);\\n\\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\\n  bvec4 isExpZero = equal(b, vec4(0.0));\\n  result.r = isExpZero.r ? 1.0 : result.r;\\n  result.g = isExpZero.g ? 1.0 : result.g;\\n  result.b = isExpZero.b ? 1.0 : result.b;\\n  result.a = isExpZero.a ? 1.0 : result.a;\\n\\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\\n  \\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\\n  return result;\\n\", t.shape, e.shape) : new Zo(\"\\nif(a < 0.0 && floor(b) < b){\\n  return NAN;\\n}\\nif (b == 0.0) {\\n  return 1.0;\\n}\\nreturn (round(mod(b, 2.0)) != 1) ?\\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\\n\", t.shape, e.shape),\n        o = Ct(t.dtype, e.dtype),\n        a = n ? this.makePackedTensor(r.outputShape, o) : this.makeOutputArray(r.outputShape, o);\n    return this.compileAndRun(r, [t, e], a);\n  }, t.prototype.ceil = function (t) {\n    var e = new Vi(t.shape, \"return ceil(x);\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.floor = function (t) {\n    var e = new Vi(t.shape, \"return floor(x);\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.sign = function (t) {\n    var e = new Vi(t.shape, \"\\n  if (isnan(x)) { return 0.0; }\\n  return sign(x);\\n\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.isNaN = function (t) {\n    var e = new Vi(t.shape, \"return float(isnan(x));\"),\n        n = this.makeOutputArray(e.outputShape, \"bool\");\n    return this.compileAndRun(e, [t], n);\n  }, t.prototype.isInf = function (t) {\n    var e = new Vi(t.shape, \"return float(isinf(x));\"),\n        n = this.makeOutputArray(e.outputShape, \"bool\");\n    return this.compileAndRun(e, [t], n);\n  }, t.prototype.isFinite = function (t) {\n    var e = new Vi(t.shape, \"return float(!isnan(x) && !isinf(x));\"),\n        n = this.makeOutputArray(e.outputShape, \"bool\");\n    return this.compileAndRun(e, [t], n);\n  }, t.prototype.round = function (t) {\n    var e = new Vi(t.shape, \"\\n  // OpenGL ES does not support round function.\\n  // The algorithm is based on banker's rounding.\\n  float base = floor(x);\\n  if ((x - base) < 0.5) {\\n    return floor(x);\\n  } else if ((x - base) > 0.5) {\\n    return ceil(x);\\n  } else {\\n    if (mod(base, 2.0) == 0.0) {\\n      return base;\\n    } else {\\n      return base + 1.0;\\n    }\\n  }\\n\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.exp = function (t) {\n    var e;\n    return e = s.getBool(\"WEBGL_PACK\") ? new es(t.shape, ji) : new Vi(t.shape, ji), this.compileAndRun(e, [t]);\n  }, t.prototype.expm1 = function (t) {\n    var e = new Vi(t.shape, \"return exp(x) - 1.0;\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.log = function (t) {\n    var e;\n    return e = s.getBool(\"WEBGL_PACK\") ? new es(t.shape, \"\\n  vec4 result = log(x);\\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\\n\\n  return result;\\n\") : new Vi(t.shape, \"if (x < 0.0) return NAN;\\n  return log(x);\"), this.compileAndRun(e, [t]);\n  }, t.prototype.log1p = function (t) {\n    var e = new Vi(t.shape, \"return log(1.0 + x);\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.sqrt = function (t) {\n    var e = new Vi(t.shape, \"return sqrt(x);\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.rsqrt = function (t) {\n    if (this.shouldExecuteOnCPU([t])) return this.cpuBackend.rsqrt(t);\n    var e = new Vi(t.shape, \"return inversesqrt(x);\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.square = function (t) {\n    var e = new Vi(t.shape, \"return x * x;\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.reciprocal = function (t) {\n    var e = new Vi(t.shape, \"return 1.0 / x;\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.relu = function (t) {\n    var e;\n    return e = s.getBool(\"WEBGL_PACK\") ? new es(t.shape, ts) : new Vi(t.shape, Hi), this.compileAndRun(e, [t]);\n  }, t.prototype.prelu = function (t, e) {\n    var n = s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\") ? new ta(\"\\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\\n\", t.shape, e.shape) : new Zo(\"return (a < 0.) ? b * a : a;\", t.shape, e.shape);\n    return this.compileAndRun(n, [t, e]);\n  }, t.prototype.elu = function (t) {\n    var e = new Vi(t.shape, \"return (x >= 0.0) ? x : (exp(x) - 1.0);\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.eluDer = function (t, e) {\n    var n = s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\") ? new ta(\"\\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\\n\", t.shape, e.shape) : new Zo(\"return (b >= 1.0) ? a : a * (b + 1.0);\", t.shape, e.shape);\n    return this.compileAndRun(n, [t, e]);\n  }, t.prototype.selu = function (t) {\n    var e = new Vi(t.shape, $i);\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.int = function (t) {\n    var e = new Vi(t.shape, \"return float(int(x));\"),\n        n = this.makeOutputArray(e.outputShape, \"int32\");\n    return this.compileAndRun(e, [t], n);\n  }, t.prototype.clip = function (t, e, n) {\n    var r,\n        o = (r = s.getBool(\"WEBGL_PACK_CLIP\") ? new na(t.shape) : new ea(t.shape)).getCustomSetupFunc(e, n);\n    return this.compileAndRun(r, [t], null, o);\n  }, t.prototype.abs = function (t) {\n    var e = new Vi(t.shape, \"return abs(x);\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.complexAbs = function (t) {\n    var e = this.texData.get(t.dataId),\n        n = new ra(t.shape),\n        r = [this.makeComplexComponentTensorHandle(t, e.complexTensors.real), this.makeComplexComponentTensorHandle(t, e.complexTensors.imag)];\n    return this.compileAndRun(n, r);\n  }, t.prototype.sigmoid = function (t) {\n    var e = new Vi(t.shape, \"return 1.0 / (1.0 + exp(-1.0 * x));\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.softplus = function (t) {\n    var e = new Vi(t.shape, \"\\n  float epsilon = 1.1920928955078125e-7;\\n  float threshold = log(epsilon) + 2.0;\\n\\n  bool too_large = x > -threshold;\\n  bool too_small = x < threshold;\\n\\n  float result;\\n  float exp_x = exp(x);\\n\\n  if (too_large){\\n    result = x;\\n  }\\n  else if (too_small){\\n    result = exp_x;\\n  }\\n  else{\\n    result = log(exp_x + 1.0);\\n  }\\n  return result;\\n\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.sin = function (t) {\n    var e = new Vi(t.shape, Ki);\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.cos = function (t) {\n    var e = new Vi(t.shape, Xi);\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.tan = function (t) {\n    var e = new Vi(t.shape, \"return tan(x);\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.asin = function (t) {\n    var e = new Vi(t.shape, \"return asin(x);\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.acos = function (t) {\n    var e = new Vi(t.shape, \"return acos(x);\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.atan = function (t) {\n    var e = new Vi(t.shape, Yi);\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.atan2 = function (t, e) {\n    var n = s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\") ? new ta(\"\\n  vec4 result = atan(a, b);\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\\n  return result;\\n\", t.shape, e.shape) : new Zo(\"\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n\\n  return atan(a, b);\\n\", t.shape, e.shape);\n    return this.compileAndRun(n, [t, e]);\n  }, t.prototype.sinh = function (t) {\n    var e = new Vi(t.shape, \"\\n  float e2x = exp(x);\\n  return (e2x - 1.0 / e2x) / 2.0;\\n\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.cosh = function (t) {\n    var e = new Vi(t.shape, \"\\n  float e2x = exp(-x);\\n  return (e2x + 1.0 / e2x) / 2.0;\\n\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.tanh = function (t) {\n    var e = new Vi(t.shape, \"\\n  float e2x = exp(-2.0 * abs(x));\\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\\n\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.asinh = function (t) {\n    var e = new Vi(t.shape, \"return log(x + sqrt(x * x + 1.0));\");\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.acosh = function (t) {\n    var e = new Vi(t.shape, Qi);\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.atanh = function (t) {\n    var e = new Vi(t.shape, Ji);\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.erf = function (t) {\n    var e = new Vi(t.shape, '\\n  // Error function is calculated approximately with elementary function.\\n  // See \"Handbook of Mathematical Functions with Formulas,\\n  // Graphs, and Mathematical Tables\", Abramowitz and Stegun.\\n  float p = 0.3275911;\\n  float a1 = 0.254829592;\\n  float a2 = -0.284496736;\\n  float a3 = 1.421413741;\\n  float a4 = -1.453152027;\\n  float a5 = 1.061405429;\\n\\n  float t = 1.0 / (1.0 + p * x);\\n  return 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x);\\n');\n    return this.compileAndRun(e, [t]);\n  }, t.prototype.step = function (t, e) {\n    var n = new Vi(t.shape, function (t) {\n      return void 0 === t && (t = 0), Gi + \"\\n    return x > 0.0 ? 1.0 : float(\" + t + \");\\n  \";\n    }(e));\n    return this.compileAndRun(n, [t]);\n  }, t.prototype.conv2dByMatMul = function (t, e, n) {\n    var r = t.shape,\n        o = this.texData.get(t.dataId),\n        a = n.inChannels,\n        i = r[0] * r[1] * r[2],\n        u = n.outChannels,\n        l = (1 === i || 1 === u) && a > 1e3,\n        c = r[2] % 2 != 0 && !!o.isPacked;\n\n    if (l || !s.getBool(\"WEBGL_LAZILY_UNPACK\") || !s.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\") || !c) {\n      var h = this.reshape(t, [1, r[0] * r[1] * r[2], n.inChannels]),\n          p = this.reshape(e, [1, n.inChannels, n.outChannels]);\n      return this.reshape(this.batchMatMul(h, p, !1, !1), n.outShape);\n    }\n\n    var f = ft.make([1, r[0] * r[1] * (r[2] + 1), n.inChannels], {\n      dataId: t.dataId\n    }, t.dtype, this),\n        v = o.shape;\n    o.shape = o.shape.slice(), o.shape[o.shape.length - 2]++, d(xe(o.shape, f.shape), function () {\n      return \"packed reshape \" + o.shape + \" to \" + f.shape + \" isn't free\";\n    });\n    var m = this.reshape(e, [1, n.inChannels, n.outChannels]),\n        g = this.batchMatMul(f, m, !1, !1),\n        y = this.texData.get(g.dataId);\n    return d(y.isPacked, function () {\n      return \"batchMatMul result is expected to be packed\";\n    }), o.shape = v, y.shape = n.outShape, ft.make(n.outShape, {\n      dataId: g.dataId\n    }, g.dtype, this);\n  }, t.prototype.conv2dWithIm2Row = function (t, e, n) {\n    var r = n.filterWidth,\n        o = n.filterHeight,\n        a = n.inChannels,\n        i = n.outWidth,\n        s = n.outHeight,\n        u = r * o * a,\n        l = s * i,\n        c = [u, l],\n        h = t.squeeze([0]),\n        p = e.reshape([1, u, -1]),\n        f = new ii(c, h.shape, n),\n        d = this.compileAndRun(f, [h]).reshape([1, c[0], c[1]]),\n        v = new hi(d.shape, [1, l, n.outChannels], !0, !1);\n    return this.compileAndRun(v, [d, p]).reshape([1, s, i, n.outChannels]);\n  }, t.prototype.conv2d = function (t, e, n) {\n    if (1 === n.filterHeight && 1 === n.filterWidth && 1 === n.dilationHeight && 1 === n.dilationWidth && 1 === n.strideHeight && 1 === n.strideWidth && (\"SAME\" === n.padInfo.type || \"VALID\" === n.padInfo.type)) return this.conv2dByMatMul(t, e, n);\n    if (s.getBool(\"WEBGL_CONV_IM2COL\") && 1 === t.shape[0]) return this.conv2dWithIm2Row(t, e, n);\n    var r = new pa(n);\n    return this.compileAndRun(r, [t, e]);\n  }, t.prototype.conv2dDerInput = function (t, e, n) {\n    var r = new sa(n);\n    return this.compileAndRun(r, [t, e]);\n  }, t.prototype.conv2dDerFilter = function (t, e, n) {\n    var r = new ia(n);\n    return this.compileAndRun(r, [t, e]);\n  }, t.prototype.depthwiseConv2D = function (t, e, n) {\n    var r;\n    return s.getBool(\"WEBGL_PACK_DEPTHWISECONV\") && n.strideWidth <= 2 && n.outChannels / n.inChannels == 1 ? (r = new va(n), this.compileAndRun(r, [t, e], this.makePackedTensor(n.outShape, t.dtype))) : (r = new da(n), this.compileAndRun(r, [t, e]));\n  }, t.prototype.depthwiseConv2DDerInput = function (t, e, n) {\n    var r = new ha(n);\n    return this.compileAndRun(r, [t, e]);\n  }, t.prototype.depthwiseConv2DDerFilter = function (t, e, n) {\n    var r = new ca(n);\n    return this.compileAndRun(r, [t, e]);\n  }, t.prototype.conv3d = function (t, e, n) {\n    var r = new fa(n);\n    return this.compileAndRun(r, [t, e]);\n  }, t.prototype.conv3dDerInput = function (t, e, n) {\n    var r = new la(n);\n    return this.compileAndRun(r, [t, e]);\n  }, t.prototype.conv3dDerFilter = function (t, e, n) {\n    var r = new ua(n);\n    return this.compileAndRun(r, [t, e]);\n  }, t.prototype.maxPool = function (t, e) {\n    var n = new gi(e, \"max\", !1),\n        r = this.makeOutputArray(n.outputShape, t.dtype);\n    return this.compileAndRun(n, [t], r);\n  }, t.prototype.avgPool = function (t, e) {\n    var n = new gi(e, \"avg\", !1),\n        r = this.makeOutputArray(n.outputShape, \"float32\");\n    return this.compileAndRun(n, [t], r);\n  }, t.prototype.maxPoolBackprop = function (t, e, n, r) {\n    var o = new gi(r, \"max\", !0),\n        a = this.compileAndRun(o, [e]),\n        i = new ci(r),\n        s = this.makeOutputArray(i.outputShape, e.dtype),\n        u = this.compileAndRun(i, [t, a], s);\n    return a.dispose(), u;\n  }, t.prototype.avgPoolBackprop = function (t, e, n) {\n    var r = new qo(n),\n        o = this.makeOutputArray(r.outputShape, e.dtype);\n    return this.compileAndRun(r, [t], o);\n  }, t.prototype.cast = function (t, e) {\n    return so(t, e, this);\n  }, t.prototype.unstack = function (t, e) {\n    for (var n = t.shape[e], r = new Array(t.rank - 1), o = 0, a = 0; a < t.rank; a++) a !== e && (r[o++] = t.shape[a]);\n\n    var i = new Array(t.rank).fill(0),\n        s = t.shape.slice();\n    s[e] = 1;\n    var u = new Array(n);\n\n    for (a = 0; a < u.length; a++) i[e] = a, u[a] = this.slice(t, i, s).reshape(r);\n\n    return u;\n  }, t.prototype.reshape = function (t, e) {\n    var n = this.texData.get(t.dataId);\n    return !n.isPacked || xe(t.shape, e) || null !== n.texture && xe(n.shape, e) ? uo(t, e) : this.packedReshape(t, e);\n  }, t.prototype.resizeBilinear = function (t, e, n, r) {\n    var o = s.getBool(\"WEBGL_PACK_IMAGE_OPERATIONS\") ? new Ci(t.shape, e, n, r) : new wi(t.shape, e, n, r);\n    return this.compileAndRun(o, [t]);\n  }, t.prototype.resizeBilinearBackprop = function (t, e, n) {\n    var r = new bi(t, e, n);\n    return this.compileAndRun(r, [t]);\n  }, t.prototype.resizeNearestNeighbor = function (t, e, n, r) {\n    var o = new Ri(t.shape, e, n, r);\n    return this.compileAndRun(o, [t]);\n  }, t.prototype.resizeNearestNeighborBackprop = function (t, e, n) {\n    var r = new Ei(t, e, n);\n    return this.compileAndRun(r, [t]);\n  }, t.prototype.multinomial = function (t, e, n, r) {\n    var o = e ? t : qr(t),\n        a = o.shape[0],\n        i = o.shape[1],\n        s = new pi(a, i, n),\n        u = this.makeOutputArray(s.outputShape, \"int32\"),\n        l = s.getCustomSetupFunc(r);\n    return this.compileAndRun(s, [o], u, l);\n  }, t.prototype.oneHot = function (t, e, n, r) {\n    var o = new fi(t.size, e, n, r);\n    return this.compileAndRun(o, [t]);\n  }, t.prototype.nonMaxSuppression = function (t, e, n, r, o) {\n    return Ye(\"tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead\"), mo(t.dataSync(), e.dataSync(), n, r, o);\n  }, t.prototype.cropAndResize = function (t, e, n, r, o, a) {\n    var i = new ma(t.shape, e.shape, r, o, a);\n    return this.compileAndRun(i, [t, e, n]);\n  }, t.prototype.depthToSpace = function (t, e, n) {\n    d(e > 1, function () {\n      return \"blockSize should be > 1 for depthToSpace, but was: \" + e;\n    });\n    var r = t.shape[0],\n        o = \"NHWC\" === n ? t.shape[1] : t.shape[2],\n        a = \"NHWC\" === n ? t.shape[2] : t.shape[3],\n        i = \"NHWC\" === n ? t.shape[3] : t.shape[1],\n        s = o * e,\n        u = a * e,\n        l = i / (e * e),\n        c = new wa(\"NHWC\" === n ? [r, s, u, l] : [r, l, s, u], e, n);\n    return this.compileAndRun(c, [t]);\n  }, t.prototype.split = function (t, e, n) {\n    return yo(t, e, n);\n  }, t.prototype.scatterND = function (t, e, n) {\n    var r = Dr(0, t, n),\n        o = r.sliceRank,\n        a = r.numUpdates,\n        i = r.sliceSize,\n        s = r.strides,\n        u = r.outputSize,\n        l = [u / i, i],\n        c = t.reshape([a, o]),\n        h = e.reshape([a, i]);\n    if (0 === u) return uo(mn([]), n);\n    var p = yn(0),\n        f = new Ni(a, o, c.rank, h.rank, s, l);\n    return this.compileAndRun(f, [h, c, p]).reshape(n);\n  }, t.prototype.sparseToDense = function (t, e, n, r) {\n    var o = Dr(0, t, n),\n        a = o.sliceRank,\n        i = o.numUpdates,\n        s = o.strides,\n        u = o.outputSize,\n        l = new Ni(i, a, t.rank, e.rank, s, [u, 1], !1);\n    return this.compileAndRun(l, [e, t, r]).reshape(n);\n  }, t.prototype.fft = function (t) {\n    return this.fftImpl(t, !1);\n  }, t.prototype.ifft = function (t) {\n    return this.fftImpl(t, !0);\n  }, t.prototype.fftImpl = function (t, e) {\n    var n = this.texData.get(t.dataId),\n        r = new ka(Sa, t.shape, e),\n        o = new ka(Na, t.shape, e),\n        a = [this.makeComplexComponentTensorHandle(t, n.complexTensors.real), this.makeComplexComponentTensorHandle(t, n.complexTensors.imag)],\n        i = this.compileAndRun(r, a),\n        s = this.compileAndRun(o, a),\n        u = this.complex(i, s).as2D(t.shape[0], t.shape[1]);\n    return i.dispose(), s.dispose(), u;\n  }, t.prototype.gatherND = function (t, e) {\n    var n = e.shape,\n        r = n[n.length - 1],\n        o = Nr(t, e),\n        a = o[0],\n        i = o[1],\n        s = o[2],\n        u = o[3],\n        l = e.reshape([i, r]),\n        c = t.reshape([t.size / s, s]),\n        h = new Fa(r, u, [i, s]);\n    return this.compileAndRun(h, [c, l]).reshape(a);\n  }, t.prototype.fill = function (t, e, n) {\n    if (\"string\" === (n = n || U(e))) {\n      var r = A(n, y(t));\n      return r.fill(e), ft.make(t, {\n        values: r\n      }, n);\n    }\n\n    var o = new Aa(t, e),\n        a = o.getCustomSetupFunc(e),\n        i = this.makeOutputArray(t, n);\n    return this.compileAndRun(o, [], i, a);\n  }, t.prototype.onesLike = function (t) {\n    if (\"string\" === t.dtype) throw new Error(\"onesLike is not supported under string dtype\");\n    return this.fill(t.shape, 1, t.dtype);\n  }, t.prototype.zerosLike = function (t) {\n    return this.fill(t.shape, \"string\" === t.dtype ? \"\" : 0, t.dtype);\n  }, t.prototype.linspace = function (t, e, n) {\n    return lo(t, e, n);\n  }, t.prototype.makeOutputArray = function (t, e) {\n    return ft.make(t, {}, e, this);\n  }, t.prototype.makePackedTensor = function (t, e) {\n    var n = ft.make(t, {}, e, this);\n    return this.texData.get(n.dataId).isPacked = !0, n;\n  }, t.prototype.unpackTensor = function (t) {\n    var e = new ns(t.shape);\n    return this.compileAndRun(e, [t], ft.make(e.outputShape, {}, t.dtype, this));\n  }, t.prototype.packTensor = function (t) {\n    var e = new di(t.shape);\n    return this.compileAndRun(e, [t], this.makePackedTensor(t.shape, t.dtype), null, !0);\n  }, t.prototype.packedReshape = function (t, e) {\n    var n = t.reshape([de(t.shape)].concat(ve(t.shape))),\n        r = [de(e)].concat(ve(e)),\n        o = new xi(r, n.shape);\n    return this.compileAndRun(o, [n]).reshape(e);\n  }, t.prototype.decode = function (t) {\n    var e,\n        n = this.texData.get(t),\n        r = n.isPacked,\n        o = n.shape,\n        a = n.dtype,\n        i = me(o),\n        s = Pa(o),\n        u = this.makeTensorHandle(o, \"float32\");\n    return this.texData.get(u.dataId).isPacked = !0, this.texData.get(u.dataId).dtype = a, this.texData.get(u.dataId).texShape = s.map(function (t) {\n      return 2 * t;\n    }), e = r ? new ba(i, s) : new xa(i, s), this.compileAndRun(e, [{\n      shape: i,\n      dtype: a,\n      dataId: t\n    }], u, null, !0), u;\n  }, t.prototype.compileAndRun = function (t, e, n, r, o) {\n    var a = this;\n    if (void 0 === o && (o = !1), null == n && (n = t.usesPackedTextures ? this.makePackedTensor(t.outputShape, e[0].dtype) : this.makeOutputArray(t.outputShape, e[0].dtype)), 0 === n.size) return this.texData.get(n.dataId).values = k(n.dtype, 0), n;\n    var i = e.map(function (e) {\n      if (\"complex64\" === e.dtype) throw new Error(\"GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.\");\n      var n = a.texData.get(e.dataId);\n\n      if (null == n.texture) {\n        if (!t.usesPackedTextures && y(e.shape) <= s.getNumber(\"WEBGL_SIZE_UPLOAD_UNIFORM\")) return {\n          shape: e.shape,\n          texData: null,\n          isUniform: !0,\n          uniformValues: n.values\n        };\n        t.usesPackedTextures && (n.isPacked = !0, n.shape = e.shape);\n      } else if (!!n.isPacked != !!t.usesPackedTextures) e = n.isPacked ? a.unpackTensor(e) : a.packTensor(e), n = a.texData.get(e.dataId);else if (n.isPacked && !xe(n.shape, e.shape)) {\n        var r = e,\n            o = e.shape;\n        e.shape = n.shape, e = a.packedReshape(e, o), n = a.texData.get(e.dataId), r.shape = o;\n      }\n\n      return a.uploadToGPU(e.dataId), {\n        shape: e.shape,\n        texData: n,\n        isUniform: !1\n      };\n    });\n    this.uploadToGPU(n.dataId);\n\n    var u,\n        l = {\n      shape: n.shape,\n      texData: this.texData.get(n.dataId),\n      isUniform: !1\n    },\n        c = function (t, e, n) {\n      var r = \"\";\n      e.concat(n).forEach(function (t) {\n        var e = null != t.texData && null != t.texData.slice && t.texData.slice.flatOffset > 0,\n            n = t.isUniform ? \"uniform\" : t.texData.texShape;\n        r += t.shape + \"_\" + n + \"_\" + e;\n      });\n      var o = t.userCode,\n          a = t.constructor.name;\n      return a += \"_\" + r + \"_\" + o;\n    }(t, i, l),\n        h = this.getAndSaveBinary(c, function () {\n      return function (t, e, n, r) {\n        var o = e.userCode,\n            a = n.map(function (t, n) {\n          var r = {\n            logicalShape: t.shape,\n            texShape: t.isUniform ? null : t.texData.texShape,\n            isUniform: t.isUniform,\n            isPacked: !t.isUniform && t.texData.isPacked,\n            flatOffset: null\n          };\n          return null != t.texData && null != t.texData.slice && t.texData.slice.flatOffset > 0 && (r.flatOffset = t.texData.slice.flatOffset), {\n            name: e.variableNames[n],\n            shapeInfo: r\n          };\n        }),\n            i = a.map(function (t) {\n          return t.shapeInfo;\n        }),\n            u = {\n          logicalShape: r.shape,\n          texShape: r.texData.texShape,\n          isUniform: !1,\n          isPacked: r.texData.isPacked,\n          flatOffset: null\n        },\n            l = Do(a, u, o, e.usesPackedTextures),\n            c = t.createProgram(l),\n            h = null,\n            p = t.getUniformLocation(c, \"NAN\", !1);\n        1 === s.getNumber(\"WEBGL_VERSION\") && (h = t.getUniformLocation(c, \"INFINITY\", !1));\n\n        for (var f = {}, d = 0; d < e.variableNames.length; d++) {\n          var v = e.variableNames[d];\n          f[v] = t.getUniformLocation(c, v, !1), f[\"offset\" + v] = t.getUniformLocation(c, \"offset\" + v, !1);\n        }\n\n        return {\n          program: e,\n          source: l,\n          webGLProgram: c,\n          uniformLocations: f,\n          inShapeInfos: i,\n          outShapeInfo: u,\n          infLoc: h,\n          nanLoc: p\n        };\n      }(a.gpgpu, t, i, l);\n    }),\n        p = null != this.activeTimers;\n\n    return p && (u = this.startTimer()), function (t, e, n, r, o) {\n      ai(e.inShapeInfos, n), ai([e.outShapeInfo], [r]);\n      var a = r.texData.texture,\n          i = r.texData.texShape;\n      r.texData.isPacked ? t.setOutputPackedMatrixTexture(a, i[0], i[1]) : t.setOutputMatrixTexture(a, i[0], i[1]), t.setProgram(e.webGLProgram), 1 === s.getNumber(\"WEBGL_VERSION\") && null !== e.infLoc && t.gl.uniform1f(e.infLoc, 1 / 0), null !== e.nanLoc && t.gl.uniform1f(e.nanLoc, NaN), n.forEach(function (n, r) {\n        var o = e.program.variableNames[r],\n            a = e.uniformLocations[o],\n            i = e.uniformLocations[\"offset\" + o];\n        if (null != a) if (n.isUniform) {\n          if (y(n.shape) < 2) t.gl.uniform1f(a, n.uniformValues[0]);else {\n            var s = n.uniformValues;\n            s instanceof Float32Array || (s = new Float32Array(s)), t.gl.uniform1fv(a, s);\n          }\n        } else null != n.texData.slice && null != i && t.gl.uniform1i(i, n.texData.slice.flatOffset), t.setInputMatrixTexture(n.texData.texture, a, r);\n      }), null != o && o(t, e.webGLProgram), t.executeProgram();\n    }(this.gpgpu, h, i, l, r), p && (u = this.endTimer(u), this.activeTimers.push({\n      name: t.constructor.name,\n      query: this.getQueryTime(u)\n    })), !s.getBool(\"WEBGL_LAZILY_UNPACK\") && this.texData.get(n.dataId).isPacked && !1 === o ? this.unpackTensor(n) : n;\n  }, t.prototype.getAndSaveBinary = function (t, e) {\n    return t in this.binaryCache || (this.binaryCache[t] = e()), this.binaryCache[t];\n  }, t.prototype.getTextureManager = function () {\n    return this.textureManager;\n  }, t.prototype.dispose = function () {\n    this.disposed || (this.textureManager.dispose(), null != this.canvas && null != this.canvas.remove ? this.canvas.remove() : this.canvas = null, null != this.fromPixels2DContext && this.fromPixels2DContext.canvas.remove && this.fromPixels2DContext.canvas.remove(), this.gpgpuCreatedLocally && (this.gpgpu.program = null, this.gpgpu.dispose()), this.disposed = !0);\n  }, t.prototype.floatPrecision = function () {\n    var t = this;\n    return null == this.floatPrecisionValue && (this.floatPrecisionValue = Pe(function () {\n      var e = s.getBool(\"DEBUG\");\n      s.set(\"DEBUG\", !1);\n      var n = t.abs(yn(1e-8)).dataSync()[0];\n      return s.set(\"DEBUG\", e), n > 0 ? 32 : 16;\n    })), this.floatPrecisionValue;\n  }, t.prototype.epsilon = function () {\n    return 32 === this.floatPrecision() ? 1e-7 : 1e-4;\n  }, t.prototype.uploadToGPU = function (t) {\n    var e,\n        n = this.texData.get(t),\n        r = n.shape,\n        o = n.dtype,\n        a = n.values,\n        i = n.texture,\n        s = n.usage,\n        u = n.isPacked;\n\n    if (null == i) {\n      var l,\n          c = null != this.activeTimers;\n      c && (l = K());\n      var h = n.texShape;\n\n      if (null == h && (h = ge(r, u), n.texShape = h), null != a) {\n        var p = me(r),\n            f = void 0,\n            d = h[1],\n            v = h[0],\n            m = a instanceof Uint8Array;\n        u ? (d = (e = La(h[0], h[1]))[0], v = e[1], f = new Ia(p, [v, d], m)) : f = new Ra(p, [v, d], m);\n        var g = this.makeTensorHandle([v, d], o);\n        this.texData.get(g.dataId).usage = m ? Oa.PIXELS : Oa.UPLOAD, this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId), d, v, a);\n        var x = this.makeTensorHandle(f.outputShape, g.dtype);\n        x.size = y(f.outputShape), this.texData.get(x.dataId).isPacked = u, this.compileAndRun(f, [g], x);\n        var b = this.texData.get(x.dataId);\n        n.texture = b.texture, n.texShape = b.texShape, n.isPacked = b.isPacked, n.usage = b.usage, this.disposeData(g.dataId), this.texData.delete(x.dataId), n.values = null, c && (this.uploadWaitMs += K() - l);\n      } else {\n        var w = this.acquireTexture(h, s, o, u);\n        n.texture = w;\n      }\n    }\n  }, t.prototype.convertAndCacheOnCPU = function (t, e) {\n    var n = this.texData.get(t),\n        r = n.dtype;\n    return this.releaseGPUData(t), null != e && (n.values = function (t, e) {\n      if (\"float32\" === e || \"complex64\" === e) return t;\n\n      if (\"int32\" === e || \"bool\" === e) {\n        for (var n = \"int32\" === e ? new Int32Array(t.length) : new Uint8Array(t.length), r = 0; r < n.length; ++r) n[r] = Math.round(t[r]);\n\n        return n;\n      }\n\n      throw new Error(\"Unknown dtype \" + e);\n    }(e, r)), n.values;\n  }, t.prototype.acquireTexture = function (t, e, n, r) {\n    if (this.numBytesInGPU += this.computeBytes(t, n), !this.warnedAboutMemory && this.numBytesInGPU > 1024 * this.numMBBeforeWarning * 1024) {\n      var o = (this.numBytesInGPU / 1024 / 1024).toFixed(2);\n      this.warnedAboutMemory = !0, console.warn(\"High memory usage in GPU: \" + o + \" MB, most likely due to a memory leak\");\n    }\n\n    return this.textureManager.acquireTexture(t, e, r);\n  }, t.prototype.computeBytes = function (t, e) {\n    return t[0] * t[1] * F(e);\n  }, t;\n}();\n\n_t() && Dt.registerBackend(\"webgl\", function () {\n  return new as();\n}, 2);\n\nvar is = pn({\n  abs_: function (t) {\n    var e = Ze(t, \"x\", \"abs\");\n    return \"complex64\" === e.dtype ? Dt.runKernel(function (t) {\n      return t.complexAbs(e);\n    }, {\n      $x: e\n    }) : Dt.runKernel(function (t, n) {\n      var r = t.abs(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.mul(n.toFloat().step(-1));\n        }\n      };\n    });\n  }\n}),\n    ss = pn({\n  acos_: function (t) {\n    var e = Ze(t, \"x\", \"acos\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.acos(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.divStrict(yn(1).sub(n.toFloat().square()).sqrt()).neg();\n        }\n      };\n    });\n  }\n}),\n    us = pn({\n  acosh_: function (t) {\n    var e = Ze(t, \"x\", \"acosh\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.acosh(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.divStrict(n.toFloat().square().sub(1).sqrt());\n        }\n      };\n    });\n  }\n}),\n    ls = pn({\n  asin_: function (t) {\n    var e = Ze(t, \"x\", \"asin\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.asin(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.divStrict(yn(1).sub(n.toFloat().square()).sqrt());\n        }\n      };\n    });\n  }\n}),\n    cs = pn({\n  asinh_: function (t) {\n    var e = Ze(t, \"x\", \"asinh\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.asinh(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.divStrict(yn(1).add(n.toFloat().square()).sqrt());\n        }\n      };\n    });\n  }\n}),\n    hs = pn({\n  atan_: function (t) {\n    var e = Ze(t, \"x\", \"atan\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.atan(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.div(n.toFloat().square().add(1));\n        }\n      };\n    });\n  }\n}),\n    ps = pn({\n  atanh_: function (t) {\n    var e = Ze(t, \"x\", \"atanh\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.atanh(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.div(yn(1).sub(n.toFloat().square()));\n        }\n      };\n    });\n  }\n}),\n    fs = pn({\n  ceil_: function (t) {\n    var e = Ze(t, \"x\", \"ceil\");\n    return Dt.runKernel(function (t) {\n      return t.ceil(e);\n    }, {\n      $x: e\n    }, function (t) {\n      return {\n        $x: function () {\n          return Dn(t);\n        }\n      };\n    });\n  }\n}),\n    ds = pn({\n  clipByValue_: function (t, e, n) {\n    var r = Ze(t, \"x\", \"clipByValue\");\n    return d(e <= n, function () {\n      return \"Error in clip: min (\" + e + \") must be less than or equal to max (\" + n + \").\";\n    }), Dt.runKernel(function (t, o) {\n      var a = t.clip(r, e, n);\n      return o([r]), a;\n    }, {\n      $x: r\n    }, function (t, r) {\n      var o = r[0];\n      return {\n        $x: function () {\n          return t.where(o.greaterEqual(e).logicalAnd(o.lessEqual(n)), Dn(t));\n        }\n      };\n    });\n  }\n}),\n    vs = pn({\n  cos_: function (t) {\n    var e = Ze(t, \"x\", \"cos\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.cos(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return n.toFloat().sin().neg().mul(t);\n        }\n      };\n    });\n  }\n}),\n    ms = pn({\n  cosh_: function (t) {\n    var e = Ze(t, \"x\", \"cosh\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.cosh(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return n.toFloat().sinh().mulStrict(t);\n        }\n      };\n    });\n  }\n}),\n    gs = pn({\n  erf_: function (t) {\n    var e = Ze(t, \"x\", \"erf\");\n    return d(\"int32\" === e.dtype || \"float32\" === e.dtype, function () {\n      return \"Input dtype must be `int32` or `float32`.\";\n    }), \"int32\" === e.dtype && (e = e.toFloat()), Dt.runKernel(function (t, n) {\n      var r = t.erf(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.mul(n.square().neg().exp().mul(2 / Math.sqrt(Math.PI)));\n        }\n      };\n    });\n  }\n}),\n    ys = pn({\n  exp_: function (t) {\n    var e = Ze(t, \"x\", \"exp\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.exp(e);\n      return n([r]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      return {\n        $x: function () {\n          return t.mulStrict(e[0]);\n        }\n      };\n    });\n  }\n}),\n    xs = pn({\n  expm1_: function (t) {\n    var e = Ze(t, \"x\", \"expm1\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.expm1(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.mul(n.exp());\n        }\n      };\n    });\n  }\n}),\n    bs = pn({\n  floor_: function (t) {\n    var e = Ze(t, \"x\", \"floor\");\n    return Dt.runKernel(function (t) {\n      return t.floor(e);\n    }, {\n      $x: e\n    }, function (t) {\n      return {\n        $x: function () {\n          return Dn(t);\n        }\n      };\n    });\n  }\n}),\n    ws = pn({\n  log_: function (t) {\n    var e = Ze(t, \"x\", \"log\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.log(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.div(n.toFloat());\n        }\n      };\n    });\n  }\n}),\n    Cs = pn({\n  log1p_: function (t) {\n    var e = Ze(t, \"x\", \"log1p\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.log1p(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.div(n.add(1));\n        }\n      };\n    });\n  }\n}),\n    Es = pn({\n  logSigmoid_: function (t) {\n    var e = Ze(t, \"x\", \"logSigmoid\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.softplus(e.neg()).neg();\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.mul(n.neg().sigmoid());\n        }\n      };\n    });\n  }\n}),\n    Rs = pn({\n  neg_: function (t) {\n    var e = Ze(t, \"x\", \"neg\");\n    return Dt.runKernel(function (t) {\n      return t.neg(e);\n    }, {\n      $x: e\n    }, function (t) {\n      return {\n        $x: function () {\n          return t.neg();\n        }\n      };\n    });\n  }\n}),\n    Is = pn({\n  reciprocal_: function (t) {\n    var e = Ze(t, \"x\", \"reciprocal\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.reciprocal(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.div(n.square().neg());\n        }\n      };\n    });\n  }\n}),\n    Ss = pn({\n  round_: function (t) {\n    var e = Ze(t, \"x\", \"round\");\n    return Dt.runKernel(function (t) {\n      return t.round(e);\n    }, {\n      $x: e\n    }, function (t) {\n      return {\n        $x: function () {\n          return Dn(t);\n        }\n      };\n    });\n  }\n}),\n    Ns = pn({\n  rsqrt_: function (t) {\n    var e = Ze(t, \"x\", \"rsqrt\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.rsqrt(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.div(n.pow(1.5).mul(2)).neg();\n        }\n      };\n    });\n  }\n}),\n    ks = pn({\n  sigmoid_: function (t) {\n    var e = Ze(t, \"x\", \"sigmoid\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.sigmoid(e);\n      return n([r]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.mul(n.mul(yn(1).sub(n)));\n        }\n      };\n    });\n  }\n}),\n    As = pn({\n  sign_: function (t) {\n    var e = Ze(t, \"x\", \"sign\");\n    return Dt.runKernel(function (t) {\n      return t.sign(e);\n    }, {\n      $x: e\n    }, function (t) {\n      return {\n        $x: function () {\n          return Dn(t);\n        }\n      };\n    });\n  }\n}),\n    Ts = pn({\n  isNaN_: function (t) {\n    var e = Ze(t, \"x\", \"isNaN\");\n    return Dt.runKernel(function (t) {\n      return t.isNaN(e);\n    }, {\n      $x: e\n    }, function (t) {\n      return {\n        $x: function () {\n          return Dn(t);\n        }\n      };\n    });\n  }\n}),\n    Ds = pn({\n  isInf_: function (t) {\n    var e = Ze(t, \"x\", \"isInf\");\n    return Dt.runKernel(function (t) {\n      return t.isInf(e);\n    }, {\n      $x: e\n    }, function (t) {\n      return {\n        $x: function () {\n          return Dn(t);\n        }\n      };\n    });\n  }\n}),\n    _s = pn({\n  isFinite_: function (t) {\n    var e = Ze(t, \"x\", \"isFinite\");\n    return Dt.runKernel(function (t) {\n      return t.isFinite(e);\n    }, {\n      $x: e\n    }, function (t) {\n      return {\n        $x: function () {\n          return Dn(t);\n        }\n      };\n    });\n  }\n}),\n    Os = pn({\n  sin_: function (t) {\n    var e = Ze(t, \"x\", \"sin\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.sin(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return n.toFloat().cos().mul(t);\n        }\n      };\n    });\n  }\n}),\n    Ms = pn({\n  sinh_: function (t) {\n    var e = Ze(t, \"x\", \"sinh\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.sinh(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return n.toFloat().cosh().mulStrict(t);\n        }\n      };\n    });\n  }\n}),\n    Fs = pn({\n  softplus_: function (t) {\n    var e = Ze(t, \"x\", \"softplus\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.softplus(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.mul(n.sigmoid());\n        }\n      };\n    });\n  }\n}),\n    Bs = pn({\n  sqrt_: function (t) {\n    var e = Ze(t, \"x\", \"sqrt\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.sqrt(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.div(n.toFloat().sqrt().mul(2));\n        }\n      };\n    });\n  }\n}),\n    Ps = pn({\n  square_: function (t) {\n    var e = Ze(t, \"x\", \"square\");\n    return Dt.runKernel(function (t, n) {\n      return n([e]), t.square(e);\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.mul(n.toFloat().mul(2));\n        }\n      };\n    });\n  }\n}),\n    Ls = pn({\n  step_: function (t, e) {\n    void 0 === e && (e = 0);\n    var n = Ze(t, \"x\", \"step\");\n    return Dt.runKernel(function (t) {\n      return t.step(n, e);\n    }, {\n      $x: n\n    }, function (t) {\n      return {\n        $x: function () {\n          return Dn(t);\n        }\n      };\n    });\n  }\n}),\n    Ws = pn({\n  tan_: function (t) {\n    var e = Ze(t, \"x\", \"tan\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.tan(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.div(n.cos().square());\n        }\n      };\n    });\n  }\n}),\n    Us = pn({\n  tanh_: function (t) {\n    var e = Ze(t, \"x\", \"tanh\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.tanh(e);\n      return n([r]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return yn(1).sub(n.square()).mulStrict(t);\n        }\n      };\n    });\n  }\n});\n\nfunction zs(t, e, n, r, o, a) {\n  var i,\n      s,\n      u = Ze(t, \"x\", \"batchNorm\"),\n      l = Ze(e, \"mean\", \"batchNorm\"),\n      c = Ze(n, \"variance\", \"batchNorm\");\n  return null != o && (i = Ze(o, \"scale\", \"batchNorm\")), null != r && (s = Ze(r, \"offset\", \"batchNorm\")), d(2 === u.rank, function () {\n    return \"Error in batchNorm3D: x must be rank 3 but got rank \" + u.rank + \".\";\n  }), d(2 === l.rank || 1 === l.rank, function () {\n    return \"Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank \" + l.rank + \".\";\n  }), d(2 === c.rank || 1 === c.rank, function () {\n    return \"Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank \" + c.rank + \".\";\n  }), null != i && d(2 === i.rank || 1 === i.rank, function () {\n    return \"Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank \" + i.rank + \".\";\n  }), null != s && d(2 === s.rank || 1 === s.rank, function () {\n    return \"Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank \" + s.rank + \".\";\n  }), qs(u, l, c, s, i, a);\n}\n\nfunction Vs(t, e, n, r, o, a) {\n  var i,\n      s,\n      u = Ze(t, \"x\", \"batchNorm\"),\n      l = Ze(e, \"mean\", \"batchNorm\"),\n      c = Ze(n, \"variance\", \"batchNorm\");\n  return null != o && (i = Ze(o, \"scale\", \"batchNorm\")), null != r && (s = Ze(r, \"offset\", \"batchNorm\")), d(3 === u.rank, function () {\n    return \"Error in batchNorm3D: x must be rank 3 but got rank \" + u.rank + \".\";\n  }), d(3 === l.rank || 1 === l.rank, function () {\n    return \"Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank \" + l.rank + \".\";\n  }), d(3 === c.rank || 1 === c.rank, function () {\n    return \"Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank \" + c.rank + \".\";\n  }), null != i && d(3 === i.rank || 1 === i.rank, function () {\n    return \"Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank \" + i.rank + \".\";\n  }), null != s && d(3 === s.rank || 1 === s.rank, function () {\n    return \"Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank \" + s.rank + \".\";\n  }), qs(u, l, c, s, i, a);\n}\n\nfunction Gs(t, e, n, r, o, a) {\n  var i,\n      s,\n      u = Ze(t, \"x\", \"batchNorm\"),\n      l = Ze(e, \"mean\", \"batchNorm\"),\n      c = Ze(n, \"variance\", \"batchNorm\");\n  return null != o && (i = Ze(o, \"scale\", \"batchNorm\")), null != r && (s = Ze(r, \"offset\", \"batchNorm\")), d(4 === u.rank, function () {\n    return \"Error in batchNorm4D: x must be rank 4 but got rank \" + u.rank + \".\";\n  }), d(4 === l.rank || 1 === l.rank, function () {\n    return \"Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank \" + l.rank + \".\";\n  }), d(4 === c.rank || 1 === c.rank, function () {\n    return \"Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank \" + c.rank + \".\";\n  }), null != i && d(4 === i.rank || 1 === i.rank, function () {\n    return \"Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank \" + i.rank + \".\";\n  }), null != s && d(4 === s.rank || 1 === s.rank, function () {\n    return \"Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank \" + s.rank + \".\";\n  }), qs(u, l, c, s, i, a);\n}\n\nfunction qs(t, e, n, r, o, a) {\n  null == a && (a = .001);\n  var i,\n      s,\n      u,\n      l = Ze(t, \"x\", \"batchNorm\"),\n      c = Ze(e, \"mean\", \"batchNorm\"),\n      h = Ze(n, \"variance\", \"batchNorm\");\n  null != o && (i = Ze(o, \"scale\", \"batchNorm\")), null != r && (s = Ze(r, \"offset\", \"batchNorm\")), d(c.rank === h.rank, function () {\n    return \"Batch normalization gradient requires mean and variance to have equal ranks.\";\n  }), d(null == s || c.rank === s.rank, function () {\n    return \"Batch normalization gradient requires mean and offset to have equal ranks.\";\n  }), d(null == i || c.rank === i.rank, function () {\n    return \"Batch normalization gradient requires mean and scale to have equal ranks.\";\n  }), u = 0 === l.rank || 1 === l.rank ? l.as4D(1, 1, 1, l.size) : 2 === l.rank ? l.as4D(1, 1, l.shape[0], l.shape[1]) : 3 === l.rank ? l.as4D(1, l.shape[0], l.shape[1], l.shape[2]) : l;\n  return Dt.runKernel(function (t, e) {\n    var n = t.batchNormalization(u, Hs(c), Hs(h), a, Hs(i), Hs(s));\n    return e([l, c, h, i]), n;\n  }, {\n    $x: l,\n    $mean: c,\n    $variance: h,\n    $scale: i,\n    $offset: s\n  }, function (t, e) {\n    var n = e,\n        r = n[0],\n        o = n[1],\n        i = n[2],\n        s = n[3],\n        l = null == s ? yn(1) : s,\n        c = Xr(o.shape, u.shape),\n        h = [];\n\n    if (1 === o.rank) {\n      for (var p = 0; p < u.shape.length - 1; ++p) h.push(u.shape[p]);\n\n      h.push(1);\n    }\n\n    var f = r.sub(o),\n        d = t.mul(l),\n        v = Ns(i.add(yn(a))),\n        m = v.mul(v).mul(v).mul(yn(-.5));\n    return {\n      $x: function () {\n        return 1 === o.rank ? t.mul(yr(v.as4D(1, 1, 1, o.shape[0]), h)).mul(l).reshape(r.shape) : t.mul(v).mul(l).reshape(r.shape);\n      },\n      $mean: function () {\n        var t = v.mul(yn(-1)).mul(d);\n        return 1 === o.rank && (t = t.sum(c)), t.reshape(o.shape);\n      },\n      $variance: function () {\n        var t = m.mul(f).mul(d);\n        return 1 === o.rank && (t = t.sum(c)), t.reshape(o.shape);\n      },\n      $scale: function () {\n        var e = f.mul(v),\n            n = t.mul(e);\n        return 1 === o.rank && (n = n.sum(c)), n.reshape(o.shape);\n      },\n      $offset: function () {\n        var e = t;\n        return 1 === o.rank && (e = e.sum(c)), e.reshape(o.shape);\n      }\n    };\n  }).reshape(l.shape);\n}\n\nfunction Hs(t) {\n  return null == t ? null : 0 === t.rank ? t.as1D() : 1 === t.rank ? t : 2 === t.rank ? t.as4D(1, 1, t.shape[0], t.shape[1]) : 3 === t.rank ? t.as4D(1, t.shape[0], t.shape[1], t.shape[2]) : t;\n}\n\nfunction $s() {\n  Oe(\"tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon\");\n}\n\nvar js = pn({\n  batchNormalization2d_: function (t, e, n, r, o, a) {\n    return void 0 === r && (r = .001), $s(), zs(t, e, n, a, o, r);\n  }\n}),\n    Ks = pn({\n  batchNormalization3d_: function (t, e, n, r, o, a) {\n    return void 0 === r && (r = .001), $s(), Vs(t, e, n, a, o, r);\n  }\n}),\n    Xs = pn({\n  batchNormalization4d_: function (t, e, n, r, o, a) {\n    return void 0 === r && (r = .001), $s(), Gs(t, e, n, a, o, r);\n  }\n}),\n    Ys = pn({\n  batchNormalization_: function (t, e, n, r, o, a) {\n    return void 0 === r && (r = .001), $s(), qs(t, e, n, a, o, r);\n  }\n}),\n    Qs = pn({\n  batchNorm_: qs\n}),\n    Js = pn({\n  batchNorm2d_: zs\n}),\n    Zs = pn({\n  batchNorm3d_: Vs\n}),\n    tu = pn({\n  batchNorm4d_: Gs\n});\n\nfunction eu(t, e, n, r, o, a) {\n  d(t.length === e.rank, function () {\n    return \"Length of inShape (\" + t.length + \") and rank of dy (\" + e.rank + \") must match\";\n  });\n  var i = t,\n      s = e,\n      u = !1;\n  3 === e.rank && (u = !0, s = e.as4D(1, e.shape[0], e.shape[1], e.shape[2]), i = [1, t[0], t[1], t[2]]);\n  var l = i[3],\n      c = s.shape[3];\n  d(4 === i.length, function () {\n    return \"Error in conv2dDerInput: inShape must be length 4, but got length \" + i.length + \".\";\n  }), d(4 === s.rank, function () {\n    return \"Error in conv2dDerInput: dy must be rank 4, but got rank \" + s.rank;\n  }), d(4 === n.rank, function () {\n    return \"Error in conv2dDerInput: filter must be rank 4, but got rank \" + n.rank;\n  }), d(l === n.shape[2], function () {\n    return \"Error in conv2dDerInput: depth of input (\" + l + \") must match input depth for filter \" + n.shape[2] + \".\";\n  }), d(c === n.shape[3], function () {\n    return \"Error in conv2dDerInput: depth of output (\" + c + \") must match output depth for filter \" + n.shape[3] + \".\";\n  }), null != a && d(b(o), function () {\n    return \"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode \" + a + \" but got pad \" + o + \".\";\n  });\n  var h = Jr(i, n.shape, r, 1, o, a),\n      p = Dt.runKernel(function (t, e) {\n    var r = t.conv2dDerInput(s, n, h);\n    return e([n, s]), r;\n  }, {\n    dy4D: s,\n    filter: n\n  }, function (t, e) {\n    var n = e[0],\n        i = e[1];\n    return {\n      dy4D: function () {\n        return au(t, n, r, o, \"NHWC\", 1, a);\n      },\n      filter: function () {\n        return su(t, i, n.shape, r, o, a);\n      }\n    };\n  });\n  return u ? p.as3D(p.shape[1], p.shape[2], p.shape[3]) : p;\n}\n\nfunction nu(t, e, n, r, o, a) {\n  var i = t;\n  3 === t.rank && (i = t.as4D(1, t.shape[0], t.shape[1], t.shape[2]));\n  var s = e;\n  3 === s.rank && (s = e.as4D(1, e.shape[0], e.shape[1], e.shape[2])), d(4 === i.rank, function () {\n    return \"Error in conv2dDerFilter: input must be rank 4, but got shape \" + i.shape + \".\";\n  }), d(4 === s.rank, function () {\n    return \"Error in conv2dDerFilter: dy must be rank 4, but got shape \" + s.shape + \".\";\n  }), d(4 === n.length, function () {\n    return \"Error in conv2dDerFilter: filterShape must be length 4, but got \" + n + \".\";\n  }), d(i.shape[3] === n[2], function () {\n    return \"Error in conv2dDerFilter: depth of input \" + i.shape[3] + \") must match input depth in filter (\" + n[2] + \".\";\n  }), d(s.shape[3] === n[3], function () {\n    return \"Error in conv2dDerFilter: depth of dy (\" + s.shape[3] + \") must match output depth for filter (\" + n[3] + \").\";\n  }), null != a && d(b(o), function () {\n    return \"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode \" + a + \" but got pad \" + o + \".\";\n  });\n  var u = Jr(i.shape, n, r, 1, o, a);\n  return Dt.runKernel(function (t) {\n    return t.conv2dDerFilter(i, s, u);\n  }, {\n    x4D: i,\n    dy4D: s\n  });\n}\n\nfunction ru(t) {\n  var e = function (t) {\n    return \"number\" == typeof t ? [t, t, t] : 2 === t.length ? [t[0], t[1], 1] : t;\n  }(t),\n      n = e[0],\n      r = e[1],\n      o = e[2];\n\n  return 1 === n && 1 === r && 1 === o;\n}\n\nvar ou = pn({\n  conv1d_: function (t, e, n, r, o, a, i) {\n    void 0 === o && (o = \"NWC\"), void 0 === a && (a = 1);\n    var s = Ze(t, \"x\", \"conv1d\"),\n        u = Ze(e, \"filter\", \"conv1d\"),\n        l = s,\n        c = !1;\n    2 === s.rank && (c = !0, l = s.as3D(1, s.shape[0], s.shape[1])), d(3 === l.rank, function () {\n      return \"Error in conv1d: input must be rank 3, but got rank \" + l.rank + \".\";\n    }), d(3 === u.rank, function () {\n      return \"Error in conv1d: filter must be rank 3, but got rank \" + u.rank + \".\";\n    }), null != i && d(b(r), function () {\n      return \"Error in conv1d: pad must be an integer when using, dimRoundingMode \" + i + \" but got pad \" + r + \".\";\n    }), d(l.shape[2] === u.shape[1], function () {\n      return \"Error in conv1d: depth of input (\" + l.shape[2] + \") must match input depth for filter \" + u.shape[1] + \".\";\n    }), d(io(n, a), function () {\n      return \"Error in conv1D: Either stride or dilation must be 1. Got stride \" + n + \" and dilation '\" + a + \"'\";\n    }), d(\"NWC\" === o, function () {\n      return \"Error in conv1d: got dataFormat of \" + o + \" but only NWC is currently supported.\";\n    });\n    var h = u.as4D(1, u.shape[0], u.shape[1], u.shape[2]),\n        p = l.as4D(l.shape[0], 1, l.shape[1], l.shape[2]),\n        f = au(p, h, [1, n], r, \"NHWC\", [1, a], i);\n    return c ? f.as2D(f.shape[2], f.shape[3]) : f.as3D(f.shape[0], f.shape[2], f.shape[3]);\n  }\n}),\n    au = pn({\n  conv2d_: function (t, e, n, r, o, a, i) {\n    void 0 === o && (o = \"NHWC\"), void 0 === a && (a = [1, 1]);\n    var s = Ze(t, \"x\", \"conv2d\"),\n        u = Ze(e, \"filter\", \"conv2d\"),\n        l = s,\n        c = !1;\n    3 === s.rank && (c = !0, l = s.as4D(1, s.shape[0], s.shape[1], s.shape[2])), d(4 === l.rank, function () {\n      return \"Error in conv2d: input must be rank 4, but got rank \" + l.rank + \".\";\n    }), d(4 === u.rank, function () {\n      return \"Error in conv2d: filter must be rank 4, but got rank \" + u.rank + \".\";\n    }), null != i && d(b(r), function () {\n      return \"Error in conv2d: pad must be an integer when using, dimRoundingMode \" + i + \" but got pad \" + r + \".\";\n    }), d(l.shape[3] === u.shape[2], function () {\n      return \"Error in conv2d: depth of input (\" + l.shape[3] + \") must match input depth for filter \" + u.shape[2] + \".\";\n    }), d(io(n, a), function () {\n      return \"Error in conv2D: Either strides or dilations must be 1. Got strides \" + n + \" and dilations '\" + a + \"'\";\n    }), d(\"NHWC\" === o, function () {\n      return \"Error in conv2d: got dataFormat of \" + o + \" but only NHWC is currently supported.\";\n    });\n    var h = Jr(l.shape, u.shape, n, a, r, i),\n        p = Dt.runKernel(function (t, e) {\n      var n = t.conv2d(l, u, h);\n      return e([u, l]), n;\n    }, {\n      x: l,\n      $filter: u\n    }, function (t, e) {\n      var o = e,\n          i = o[0],\n          s = o[1];\n      return d(ao(a), function () {\n        return \"Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '\" + a + \"'\";\n      }), {\n        x: function () {\n          return eu(s.shape, t, i, n, r);\n        },\n        $filter: function () {\n          return nu(s, t, i.shape, n, r);\n        }\n      };\n    });\n    return c ? p.as3D(p.shape[1], p.shape[2], p.shape[3]) : p;\n  }\n}),\n    iu = pn({\n  conv3d_: function (t, e, n, r, o, a) {\n    void 0 === o && (o = \"NDHWC\"), void 0 === a && (a = [1, 1, 1]);\n    var i = Ze(t, \"x\", \"conv3d\"),\n        s = Ze(e, \"filter\", \"conv3d\"),\n        u = i,\n        l = !1;\n    4 === i.rank && (l = !0, u = i.as5D(1, i.shape[0], i.shape[1], i.shape[2], i.shape[3])), d(5 === u.rank, function () {\n      return \"Error in conv3d: input must be rank 5, but got rank \" + u.rank + \".\";\n    }), d(5 === s.rank, function () {\n      return \"Error in conv3d: filter must be rank 5, but got rank \" + s.rank + \".\";\n    }), d(u.shape[4] === s.shape[3], function () {\n      return \"Error in conv3d: depth of input (\" + u.shape[4] + \") must match input depth for filter \" + s.shape[3] + \".\";\n    }), d(function (t, e) {\n      return ru(t) || ru(e);\n    }(n, a), function () {\n      return \"Error in conv3D: Either strides or dilations must be 1. Got strides \" + n + \" and dilations '\" + a + \"'\";\n    }), d(\"NDHWC\" === o, function () {\n      return \"Error in conv3d: got dataFormat of \" + o + \" but only NDHWC is currently supported.\";\n    });\n    var c = Zr(u.shape, s.shape, n, a, r),\n        h = Dt.runKernel(function (t, e) {\n      var n = t.conv3d(u, s, c);\n      return e([u, s]), n;\n    }, {\n      x: u,\n      $filter: s\n    }, function (t, e) {\n      d(ru(a), function () {\n        return \"Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '\" + a + \"'\";\n      });\n      var o = e[0],\n          i = e[1];\n      return {\n        x: function () {\n          return function (t, e, n, r, o) {\n            d(t.length === e.rank, function () {\n              return \"Length of inShape (\" + t.length + \") and rank of dy (\" + e.rank + \") must match\";\n            });\n            var a = t,\n                i = e,\n                s = !1;\n            4 === e.rank && (s = !0, i = e.as5D(1, e.shape[0], e.shape[1], e.shape[2], e.shape[3]), a = [1, t[0], t[1], t[2], t[3]]);\n            var u = a[4],\n                l = i.shape[4];\n            d(5 === a.length, function () {\n              return \"Error in conv3dDerInput: inShape must be length 5, but got length \" + a.length + \".\";\n            }), d(5 === i.rank, function () {\n              return \"Error in conv3dDerInput: dy must be rank 5, but got rank \" + i.rank;\n            }), d(5 === n.rank, function () {\n              return \"Error in conv3dDerInput: filter must be rank 5, but got rank \" + n.rank;\n            }), d(u === n.shape[3], function () {\n              return \"Error in conv3dDerInput: depth of input (\" + u + \") must match input depth for filter \" + n.shape[3] + \".\";\n            }), d(l === n.shape[4], function () {\n              return \"Error in conv3dDerInput: depth of output (\" + l + \") must match output depth for filter \" + n.shape[4] + \".\";\n            });\n            var c = Zr(a, n.shape, r, 1, o),\n                h = Dt.runKernel(function (t) {\n              return t.conv3dDerInput(i, n, c);\n            }, {\n              dy5D: i\n            });\n            return s ? h.as4D(h.shape[1], h.shape[2], h.shape[3], h.shape[4]) : h;\n          }(o.shape, t, i, n, r);\n        },\n        $filter: function () {\n          return function (t, e, n, r, o) {\n            var a = t;\n            4 === t.rank && (a = t.as5D(1, t.shape[0], t.shape[1], t.shape[2], t.shape[3]));\n            var i = e;\n            4 === i.rank && (i = e.as5D(1, e.shape[0], e.shape[1], e.shape[2], e.shape[3])), d(5 === a.rank, function () {\n              return \"Error in conv3dDerFilter: input must be rank 5, but got shape \" + a.shape + \".\";\n            }), d(5 === i.rank, function () {\n              return \"Error in conv3dDerFilter: dy must be rank 5, but got shape \" + i.shape + \".\";\n            }), d(5 === n.length, function () {\n              return \"Error in conv3dDerFilter: filterShape must be length 5, but got \" + n + \".\";\n            }), d(a.shape[4] === n[3], function () {\n              return \"Error in conv3dDerFilter: depth of input \" + a.shape[4] + \") must match input depth in filter (\" + n[3] + \".\";\n            }), d(i.shape[4] === n[4], function () {\n              return \"Error in conv3dDerFilter: depth of dy (\" + i.shape[4] + \") must match output depth for filter (\" + n[4] + \").\";\n            });\n            var s = Zr(a.shape, n, r, 1, o);\n            return Dt.runKernel(function (t) {\n              return t.conv3dDerFilter(a, i, s);\n            }, {\n              x5D: a,\n              dy5D: i\n            });\n          }(o, t, i.shape, n, r);\n        }\n      };\n    });\n    return l ? h.as4D(h.shape[1], h.shape[2], h.shape[3], h.shape[4]) : h;\n  }\n}),\n    su = pn({\n  conv2dDerFilter_: nu\n}),\n    uu = pn({\n  depthwiseConv2d_: function (t, e, n, r, o, a, i) {\n    void 0 === o && (o = \"NHWC\"), void 0 === a && (a = [1, 1]);\n    var s = Ze(t, \"x\", \"depthwiseConv2d\"),\n        u = Ze(e, \"filter\", \"depthwiseConv2d\"),\n        l = s,\n        c = !1;\n    3 === s.rank && (c = !0, l = s.as4D(1, s.shape[0], s.shape[1], s.shape[2])), d(4 === l.rank, function () {\n      return \"Error in depthwiseConv2d: input must be rank 4, but got rank \" + l.rank + \".\";\n    }), d(4 === u.rank, function () {\n      return \"Error in depthwiseConv2d: filter must be rank 4, but got rank \" + u.rank + \".\";\n    }), d(l.shape[3] === u.shape[2], function () {\n      return \"Error in depthwiseConv2d: number of input channels (\" + l.shape[3] + \") must match the inChannels dimension in filter \" + u.shape[2] + \".\";\n    }), null == a && (a = [1, 1]), d(io(n, a), function () {\n      return \"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides \" + n + \" and dilations '\" + a + \"'\";\n    }), null != i && d(b(r), function () {\n      return \"Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode \" + i + \" but got pad \" + r + \".\";\n    });\n    var h = Jr(l.shape, u.shape, n, a, r, i, !0),\n        p = Dt.runKernel(function (t, e) {\n      var n = t.depthwiseConv2D(l, u, h);\n      return e([l, u]), n;\n    }, {\n      x: l,\n      $filter: u\n    }, function (t, e) {\n      d(ao(a), function () {\n        return \"Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '\" + a + \"'\";\n      });\n      var n = e[0],\n          r = e[1];\n      return {\n        x: function () {\n          return function (t, e, n, r) {\n            var o = e,\n                a = !1;\n            3 === e.rank && (a = !0, o = e.as4D(1, e.shape[0], e.shape[1], e.shape[2]));\n            var i = Dt.runKernel(function (t) {\n              return t.depthwiseConv2DDerInput(o, n, r);\n            }, {\n              dy4D: o\n            });\n            return a ? i.as3D(i.shape[1], i.shape[2], i.shape[3]) : i;\n          }(n.shape, t, r, h);\n        },\n        $filter: function () {\n          return function (t, e, n, r) {\n            var o = t;\n            3 === t.rank && (o = t.as4D(1, t.shape[0], t.shape[1], t.shape[2]));\n            var a = e;\n            return 3 === a.rank && (a = e.as4D(1, e.shape[0], e.shape[1], e.shape[2])), Dt.runKernel(function (t) {\n              return t.depthwiseConv2DDerFilter(o, a, r);\n            }, {\n              x4D: o,\n              dy4D: a\n            });\n          }(n, t, r.shape, h);\n        }\n      };\n    });\n    return c ? p.as3D(p.shape[1], p.shape[2], p.shape[3]) : p;\n  }\n}),\n    lu = pn({\n  separableConv2d_: function (t, e, n, r, o, a, i) {\n    void 0 === a && (a = [1, 1]), void 0 === i && (i = \"NHWC\");\n    var s = Ze(t, \"x\", \"separableConv2d\"),\n        u = Ze(e, \"depthwiseFilter\", \"separableConv2d\"),\n        l = Ze(n, \"pointwiseFilter\", \"separableConv2d\"),\n        c = s,\n        h = !1;\n    if (3 === s.rank && (h = !0, c = s.as4D(1, s.shape[0], s.shape[1], s.shape[2])), \"NCHW\" === i) throw new Error(\"separableConv2d currently does not support dataFormat NCHW; only NHWC is supported\");\n    d(4 === c.rank, function () {\n      return \"Error in separableConv2d: input must be rank 4, but got rank \" + c.rank + \".\";\n    }), d(4 === u.rank, function () {\n      return \"Error in separableConv2d: depthwise filter must be rank 4, but got rank \" + u.rank + \".\";\n    }), d(4 === l.rank, function () {\n      return \"Error in separableConv2d: pointwise filter must be rank 4, but got rank \" + u.rank + \".\";\n    }), d(1 === l.shape[0], function () {\n      return \"Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got \" + l.shape[0] + \".\";\n    }), d(1 === l.shape[1], function () {\n      return \"Error in separableConv2d: the second dimension of pointwise filter must be 1, but got \" + l.shape[1] + \".\";\n    });\n    var p = u.shape[2],\n        f = u.shape[3];\n    d(l.shape[2] === p * f, function () {\n      return \"Error in separableConv2d: the third dimension of pointwise filter must be \" + p * f + \", but got \" + l.shape[2] + \".\";\n    });\n    var v = uu(c, u, r, o, i, a),\n        m = au(v, l, 1, \"valid\", i);\n    return h ? m.as3D(m.shape[1], m.shape[2], m.shape[3]) : m;\n  }\n}),\n    cu = pn({\n  conv2dTranspose_: function (t, e, n, r, o, a) {\n    return eu(n, Ze(t, \"x\", \"conv2dTranspose\"), Ze(e, \"filter\", \"conv2dTranspose\"), r, o, a);\n  }\n});\nvar hu = pn({\n  matMul_: function (t, e, n, r) {\n    var o;\n    void 0 === n && (n = !1), void 0 === r && (r = !1);\n    var a = Ze(t, \"a\", \"matMul\"),\n        i = Ze(e, \"b\", \"matMul\");\n    o = Rt(a, i), a = o[0], i = o[1];\n    var s = n ? a.shape[a.rank - 2] : a.shape[a.rank - 1],\n        u = r ? i.shape[i.rank - 1] : i.shape[i.rank - 2],\n        l = n ? a.shape[a.rank - 1] : a.shape[a.rank - 2],\n        c = r ? i.shape[i.rank - 2] : i.shape[i.rank - 1],\n        h = a.shape.slice(0, -2),\n        p = i.shape.slice(0, -2),\n        f = y(h),\n        v = y(p);\n    d(a.rank >= 2 && i.rank >= 2 && a.rank === i.rank, function () {\n      return \"Error in matMul: inputs must have the same rank of at least 2, got ranks \" + a.rank + \" and \" + i.rank + \".\";\n    }), d(x(h, p), function () {\n      return \"Error in matMul: outer dimensions (\" + h + \") and (\" + p + \") of Tensors with shapes \" + a.shape + \" and \" + i.shape + \" must match.\";\n    }), d(s === u, function () {\n      return \"Error in matMul: inner shapes (\" + s + \") and (\" + u + \") of Tensors with shapes \" + a.shape + \" and \" + i.shape + \" and transposeA=\" + n + \" and transposeB=\" + r + \" must match.\";\n    });\n    var m = a.shape.slice(0, -2).concat([l, c]),\n        g = n ? a.as3D(f, s, l) : a.as3D(f, l, s),\n        b = r ? i.as3D(v, c, u) : i.as3D(v, u, c);\n    return Dt.runKernel(function (t, e) {\n      var o = t.batchMatMul(g, b, n, r);\n      return e([g, b]), o;\n    }, {\n      $a: g,\n      $b: b\n    }, function (t, e) {\n      var o = e,\n          a = o[0],\n          i = o[1];\n      return n || r ? !n && r ? {\n        $a: function () {\n          return t.matMul(i, !1, !1);\n        },\n        $b: function () {\n          return t.matMul(a, !0, !1);\n        }\n      } : n && !r ? {\n        $a: function () {\n          return i.matMul(t, !1, !0);\n        },\n        $b: function () {\n          return a.matMul(t, !1, !1);\n        }\n      } : {\n        $a: function () {\n          return i.matMul(t, !0, !0);\n        },\n        $b: function () {\n          return t.matMul(a, !0, !0);\n        }\n      } : {\n        $a: function () {\n          return t.matMul(i, !1, !0);\n        },\n        $b: function () {\n          return a.matMul(t, !0, !1);\n        }\n      };\n    }).reshape(m);\n  }\n}),\n    pu = pn({\n  dot_: function (t, e) {\n    var n = Ze(t, \"t1\", \"dot\"),\n        r = Ze(e, \"t2\", \"dot\");\n    d(!(1 !== n.rank && 2 !== n.rank || 1 !== r.rank && 2 !== r.rank), function () {\n      return \"Error in dot: inputs must all be rank 1 or 2, but got ranks \" + n.rank + \" and \" + r.rank + \".\";\n    });\n    var o = 1 === n.rank ? n.size : n.shape[1],\n        a = 1 === r.rank ? r.size : r.shape[0];\n    return d(o === a, function () {\n      return \"Error in dot: inner dimensions of inputs must match, but got \" + o + \" and \" + a + \".\";\n    }), 1 === n.rank && 1 === r.rank ? n.as2D(1, -1).matMul(r.as2D(-1, 1)).asScalar() : 1 === n.rank && 2 === r.rank ? n.as2D(1, -1).matMul(r.as2D(r.shape[0], r.shape[1])).as1D() : 2 === n.rank && 1 === r.rank ? n.matMul(r.as2D(-1, 1)).as1D() : n.matMul(r.as2D(r.shape[0], r.shape[1]));\n  }\n}),\n    fu = pn({\n  outerProduct_: function (t, e) {\n    var n = Ze(t, \"v1\", \"outerProduct\"),\n        r = Ze(e, \"v2\", \"outerProduct\");\n    return d(1 === n.rank && 1 === r.rank, function () {\n      return \"Error in outerProduct: inputs must be rank 1, but got ranks \" + n.rank + \" and \" + r.rank + \".\";\n    }), n.as2D(-1, 1).matMul(r.as2D(1, -1));\n  }\n});\nvar du = pn({\n  reverse_: function (t, e) {\n    var n = Ze(t, \"x\", \"reverse\");\n    if (0 === n.rank) return n.clone();\n    var r = S(e, n.shape);\n    return Dt.runKernel(function (t) {\n      return t.reverse(n, r);\n    }, {\n      $x: n\n    }, function (t) {\n      return {\n        $x: function () {\n          return t.reverse(r);\n        }\n      };\n    }).reshapeAs(n);\n  }\n}),\n    vu = pn({\n  reverse1d_: function (t) {\n    var e = Ze(t, \"x\", \"reverse\");\n    return d(1 === e.rank, function () {\n      return \"Error in reverse1D: x must be rank 1 but got rank \" + e.rank + \".\";\n    }), du(e, 0);\n  }\n}),\n    mu = pn({\n  reverse2d_: function (t, e) {\n    var n = Ze(t, \"x\", \"reverse\");\n    return d(2 === n.rank, function () {\n      return \"Error in reverse2D: x must be rank 2 but got rank \" + n.rank + \".\";\n    }), du(n, e);\n  }\n}),\n    gu = pn({\n  reverse3d_: function (t, e) {\n    var n = Ze(t, \"x\", \"reverse\");\n    return d(3 === n.rank, function () {\n      return \"Error in reverse3D: x must be rank 3 but got rank \" + n.rank + \".\";\n    }), du(n, e);\n  }\n}),\n    yu = pn({\n  reverse4d_: function (t, e) {\n    var n = Ze(t, \"x\", \"reverse\");\n    return d(4 === n.rank, function () {\n      return \"Error in reverse4D: x must be rank 4 but got rank \" + n.rank + \".\";\n    }), du(n, e);\n  }\n});\n\nfunction xu(t, e, n, r, o, a) {\n  var i = Ze(t, \"x\", \"maxPool\"),\n      s = i,\n      u = !1;\n  3 === i.rank && (u = !0, s = i.as4D(1, i.shape[0], i.shape[1], i.shape[2])), null == r && (r = [1, 1]), d(4 === s.rank, function () {\n    return \"Error in maxPool: input must be rank 4 but got rank \" + s.rank + \".\";\n  }), d(io(n, r), function () {\n    return \"Error in maxPool: Either strides or dilations must be 1. Got strides \" + n + \" and dilations '\" + r + \"'\";\n  }), null != a && d(b(o), function () {\n    return \"Error in maxPool: pad must be an integer when using, dimRoundingMode \" + a + \" but got pad \" + o + \".\";\n  });\n  var l = Qr(s.shape, e, n, r, o, a),\n      c = Dt.runKernel(function (t, e) {\n    var n = t.maxPool(s, l);\n    return e([s, n]), n;\n  }, {\n    x: s\n  }, function (t, a) {\n    var i = a[0],\n        s = a[1];\n    return {\n      x: function () {\n        return function (t, e, n, r, o, a, i, s) {\n          var u = Ze(t, \"dy\", \"maxPoolBackprop\"),\n              l = Ze(e, \"input\", \"maxPoolBackprop\"),\n              c = Ze(n, \"output\", \"maxPoolBackprop\");\n          d(l.rank === u.rank, function () {\n            return \"Rank of input (\" + l.rank + \") does not match rank of dy (\" + u.rank + \")\";\n          }), null == a && (a = [1, 1]), d(io(o, a), function () {\n            return \"Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides \" + o + \" and dilations '\" + a + \"'\";\n          }), d(4 === u.rank, function () {\n            return \"Error in maxPoolBackprop: dy must be rank 4 but got rank \" + u.rank + \".\";\n          }), d(4 === l.rank, function () {\n            return \"Error in maxPoolBackprop: input must be rank 4 but got rank \" + l.rank + \".\";\n          }), null != s && d(b(i), function () {\n            return \"Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode \" + s + \" but got pad \" + i + \".\";\n          });\n          var h = Qr(l.shape, r, o, a, i, s);\n          return Dt.runKernel(function (t) {\n            return t.maxPoolBackprop(u, l, c, h);\n          }, {\n            $dy: u,\n            $input: l\n          });\n        }(t, i, s, e, n, r, o);\n      }\n    };\n  });\n  return u ? c.as3D(c.shape[1], c.shape[2], c.shape[3]) : c;\n}\n\nfunction bu(t, e, n, r, o, a) {\n  var i = Ze(t, \"x\", \"avgPool\", \"float32\");\n  null == r && (r = [1, 1]), d(io(n, r), function () {\n    return \"Error in avgPool: Either strides or dilations must be 1. Got strides \" + n + \" and dilations '\" + r + \"'\";\n  });\n  var s = i,\n      u = !1;\n  3 === i.rank && (u = !0, s = i.as4D(1, i.shape[0], i.shape[1], i.shape[2])), d(4 === s.rank, function () {\n    return \"Error in avgPool: x must be rank 4 but got rank \" + s.rank + \".\";\n  }), null != a && d(b(o), function () {\n    return \"Error in avgPool: pad must be an integer when using, dimRoundingMode \" + a + \" but got pad \" + o + \".\";\n  });\n  var l = Qr(s.shape, e, n, r, o, a),\n      c = Dt.runKernel(function (t) {\n    return t.avgPool(s, l);\n  }, {\n    x: s\n  }, function (t) {\n    return {\n      x: function () {\n        return function (t, e, n, r, o, a) {\n          var i = Ze(t, \"dy\", \"avgPoolBackprop\"),\n              s = Ze(e, \"input\", \"avgPoolBackprop\");\n          d(s.rank === i.rank, function () {\n            return \"Rank of input (\" + s.rank + \") does not match rank of dy (\" + i.rank + \")\";\n          }), null == o && (o = [1, 1]), d(io(r, o), function () {\n            return \"Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides \" + r + \" and dilations '\" + o + \"'\";\n          });\n          var u = s,\n              l = i,\n              c = !1;\n          3 === s.rank && (c = !0, u = s.as4D(1, s.shape[0], s.shape[1], s.shape[2]), l = i.as4D(1, i.shape[0], i.shape[1], i.shape[2])), d(4 === l.rank, function () {\n            return \"Error in avgPoolBackprop: dy must be rank 4 but got rank \" + l.rank + \".\";\n          }), d(4 === u.rank, function () {\n            return \"Error in avgPoolBackprop: input must be rank 4 but got rank \" + u.rank + \".\";\n          });\n          var h = Qr(u.shape, n, r, o, a),\n              p = Dt.runKernel(function (t) {\n            return t.avgPoolBackprop(l, u, h);\n          }, {\n            dy4D: l,\n            input4D: u\n          });\n          return c ? p.as3D(p.shape[1], p.shape[2], p.shape[3]) : p;\n        }(t, s, e, n, r, o);\n      }\n    };\n  });\n  return c = c.cast(i.dtype), u ? c.as3D(c.shape[1], c.shape[2], c.shape[3]) : c;\n}\n\nvar wu = pn({\n  maxPool_: function (t, e, n, r, o) {\n    return xu(t, e, n, 1, r, o);\n  }\n}),\n    Cu = pn({\n  avgPool_: function (t, e, n, r, o) {\n    return bu(t, e, n, 1, r, o);\n  }\n}),\n    Eu = pn({\n  pool_: function (t, e, n, r, o, a) {\n    null == o && (o = [1, 1]), null == a && (a = 1), 0 === r && (r = \"valid\");\n    var i = Ze(t, \"x\", \"maxPool\"),\n        s = i,\n        u = !1;\n    3 === i.rank && (u = !0, s = i.as4D(1, i.shape[0], i.shape[1], i.shape[2])), d(io(a, o), function () {\n      return \"Error in pool: Either strides or dilations must be 1. Got strides \" + a + \" and dilations '\" + o + \"'\";\n    });\n    var l,\n        c = Qr(s.shape, e, a, o, r),\n        h = [c.dilationHeight, c.dilationWidth];\n    l = \"same\" === r ? function (t, e) {\n      var n = t.map(function (t, n) {\n        return t + (t - 1) * (e[n] - 1);\n      }).map(function (t) {\n        return t - 1;\n      }),\n          r = n.map(function (t) {\n        return Math.floor(t / 2);\n      }),\n          o = n.map(function (t, e) {\n        return t - r[e];\n      });\n      return n.map(function (t, e) {\n        return [r[e], o[e]];\n      });\n    }([c.filterHeight, c.filterWidth], h) : [[0, 0], [0, 0]];\n\n    var p = 1 === h[0] && 1 === h[1],\n        f = function (t, e, n) {\n      var r = n.map(function (t) {\n        return t[0];\n      }),\n          o = n.map(function (t) {\n        return t[1];\n      }),\n          a = t.concat(r, o),\n          i = e.map(function (t, e) {\n        return (t - a[e] % t) % t;\n      }),\n          s = o.map(function (t, e) {\n        return t + i[e];\n      }),\n          u = e.map(function (t, e) {\n        return [r[e], s[e]];\n      }),\n          l = e.map(function (t, e) {\n        return [0, i[e]];\n      });\n      return [u, l];\n    }([c.inHeight, c.inWidth], h, l),\n        v = f[0],\n        m = f[1],\n        g = p ? r : \"valid\",\n        y = p ? s : vr(s, h, v),\n        x = (\"avg\" === n ? function () {\n      return bu(y, e, a, 1, g);\n    } : function () {\n      return xu(y, e, a, 1, g);\n    })(),\n        b = p ? x : Qn(x, h, m);\n\n    return u ? b.as3D(b.shape[1], b.shape[2], b.shape[3]) : b;\n  }\n});\nvar Ru = pn({\n  slice_: function (t, e, n) {\n    var r,\n        o,\n        a = Ze(t, \"x\", \"slice\");\n    if (0 === a.rank) throw new Error(\"Slicing scalar is not possible\");\n    r = \"number\" == typeof e ? [e].concat(new Array(a.rank - 1).fill(0)) : e.length < a.rank ? e.concat(new Array(a.rank - e.length).fill(0)) : e.slice(), o = (o = null == n ? new Array(a.rank).fill(-1) : \"number\" == typeof n ? [n].concat(new Array(a.rank - 1).fill(-1)) : n.length < a.rank ? n.concat(new Array(a.rank - n.length).fill(-1)) : n).map(function (t, e) {\n      return t >= 0 ? t : (d(-1 === t, function () {\n        return \"Bad value in size\";\n      }), a.shape[e] - r[e]);\n    }), function (t, e, n) {\n      d(t.rank === e.length, function () {\n        return \"Error in slice\" + t.rank + \"D: Length of begin \" + e + \" must match the rank of the array (\" + t.rank + \").\";\n      }), d(t.rank === n.length, function () {\n        return \"Error in slice\" + t.rank + \"D: Length of size \" + n + \" must match the rank of the array (\" + t.rank + \").\";\n      });\n\n      for (var r = function (r) {\n        d(e[r] + n[r] <= t.shape[r], function () {\n          return \"Error in slice\" + t.rank + \"D: begin[\" + r + \"] + size[\" + r + \"] (\" + (e[r] + n[r]) + \") would overflow input.shape[\" + r + \"] (\" + t.shape[r] + \")\";\n        });\n      }, o = 0; o < t.rank; ++o) r(o);\n    }(a, r, o);\n    var i = a.shape;\n    return Dt.runKernel(function (t) {\n      return t.slice(a, r, o);\n    }, {\n      $x: a\n    }, function (t) {\n      for (var e = [], n = 0; n < t.rank; n++) e.push([r[n], i[n] - r[n] - o[n]]);\n\n      return {\n        $x: function () {\n          return t.pad(e);\n        }\n      };\n    });\n  }\n}),\n    Iu = pn({\n  slice1d_: function (t, e, n) {\n    var r = Ze(t, \"x\", \"slice1d\");\n    return d(1 === r.rank, function () {\n      return \"slice1d expects a rank-1 tensor, but got a rank-\" + r.rank + \" tensor\";\n    }), Ru(r, [e], [n]);\n  }\n}),\n    Su = pn({\n  slice2d_: function (t, e, n) {\n    var r = Ze(t, \"x\", \"slice2d\");\n    return d(2 === r.rank, function () {\n      return \"slice2d expects a rank-2 tensor, but got a rank-\" + r.rank + \" tensor\";\n    }), Ru(r, e, n);\n  }\n}),\n    Nu = pn({\n  slice3d_: function (t, e, n) {\n    var r = Ze(t, \"x\", \"slice3d\");\n    return d(3 === r.rank, function () {\n      return \"slice3d expects a rank-3 tensor, but got a rank-\" + r.rank + \" tensor\";\n    }), Ru(r, e, n);\n  }\n}),\n    ku = pn({\n  slice4d_: function (t, e, n) {\n    var r = Ze(t, \"x\", \"slice4d\");\n    return d(4 === r.rank, function () {\n      return \"slice4d expects a rank-4 tensor, but got a rank-\" + r.rank + \" tensor\";\n    }), Ru(r, e, n);\n  }\n});\n\nfunction Au(t, e, n, r, o) {\n  return e.rank < n.rank && (e = e.reshape(on(e.shape, r))), t.rank < n.rank && (t = t.reshape(on(t.shape, r))), {\n    $x: function () {\n      var r = t.mul(n.equal(e).cast(t.dtype));\n      return null == o ? r : r.transpose(o);\n    }\n  };\n}\n\nvar Tu = pn({\n  all_: function (t, e, n) {\n    void 0 === e && (e = null), void 0 === n && (n = !1);\n    var r = Ze(t, \"x\", \"all\", \"bool\"),\n        o = S(e, r.shape),\n        a = o,\n        i = sn(a, r.rank);\n    null != i && (r = r.transpose(i), a = ln(a.length, r.rank));\n    var s = Dt.runKernel(function (t) {\n      return t.all(r, a);\n    }, {\n      $x: r\n    });\n\n    if (n) {\n      var u = on(s.shape, o);\n      return s.reshape(u);\n    }\n\n    return s;\n  }\n}),\n    Du = pn({\n  any_: function (t, e, n) {\n    void 0 === e && (e = null), void 0 === n && (n = !1);\n    var r = Ze(t, \"x\", \"any\", \"bool\"),\n        o = S(e, r.shape),\n        a = o,\n        i = sn(a, r.rank);\n    null != i && (r = r.transpose(i), a = ln(a.length, r.rank));\n    var s = Dt.runKernel(function (t) {\n      return t.any(r, a);\n    }, {\n      $x: r\n    });\n\n    if (n) {\n      var u = on(s.shape, o);\n      return s.reshape(u);\n    }\n\n    return s;\n  }\n}),\n    _u = pn({\n  argMax_: function (t, e) {\n    void 0 === e && (e = 0);\n    var n = Ze(t, \"x\", \"argMax\");\n    null == e && (e = 0);\n    var r = S(e, n.shape),\n        o = sn(r, n.rank);\n    return null != o && (n = n.transpose(o), r = ln(r.length, n.rank)), Dt.runKernel(function (t, e) {\n      var o = t.argMax(n, r[0]);\n      return e([n]), o;\n    }, {\n      $x: n\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return Dn(n);\n        }\n      };\n    });\n  }\n}),\n    Ou = pn({\n  argMin_: function (t, e) {\n    void 0 === e && (e = 0);\n    var n = Ze(t, \"x\", \"argMin\");\n    null == e && (e = 0);\n    var r = S(e, n.shape),\n        o = sn(r, n.rank);\n    return null != o && (n = n.transpose(o), r = ln(r.length, n.rank)), Dt.runKernel(function (t, e) {\n      var o = t.argMin(n, r[0]);\n      return e([n]), o;\n    }, {\n      $x: n\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return Dn(n);\n        }\n      };\n    });\n  }\n}),\n    Mu = pn({\n  logSumExp_: function (t, e, n) {\n    void 0 === e && (e = null), void 0 === n && (n = !1);\n    var r = Ze(t, \"x\", \"logSumExp\"),\n        o = S(e, r.shape),\n        a = r.max(o, !0),\n        i = r.sub(a).exp().sum(o).log(),\n        s = a.reshape(i.shape).add(i);\n\n    if (n) {\n      var u = on(s.shape, o);\n      return s.reshape(u);\n    }\n\n    return s;\n  }\n}),\n    Fu = pn({\n  max_: function (t, e, n) {\n    void 0 === e && (e = null), void 0 === n && (n = !1);\n    var r = Ze(t, \"x\", \"max\"),\n        o = r,\n        a = S(e, r.shape),\n        i = a,\n        s = sn(i, r.rank);\n    null != s && (r = r.transpose(s), i = ln(i.length, r.rank));\n    var u = Dt.runKernel(function (t, e) {\n      var n = t.max(r, i);\n      return e([o, n]), n;\n    }, {\n      $x: r\n    }, function (t, e) {\n      return Au(t, e[1], e[0], a, s);\n    });\n\n    if (n) {\n      var l = on(u.shape, a);\n      u = u.reshape(l);\n    }\n\n    return u;\n  }\n}),\n    Bu = pn({\n  mean_: function (t, e, n) {\n    void 0 === e && (e = null), void 0 === n && (n = !1);\n    var r = Ze(t, \"x\", \"mean\"),\n        o = S(e, r.shape),\n        a = y(rn(r.shape, o)[1]);\n    return Vr(function (t) {\n      var r = yn(a);\n      return {\n        value: (r.dtype === t.dtype ? t : t.cast(r.dtype)).div(r).sum(e, n),\n        gradFunc: function (e) {\n          var n = t.shape.slice();\n          return o.forEach(function (t) {\n            n[t] = 1;\n          }), e.reshape(n).mul(In(t.shape, \"float32\")).div(a);\n        }\n      };\n    })(r);\n  }\n}),\n    Pu = pn({\n  min_: function (t, e, n) {\n    void 0 === e && (e = null), void 0 === n && (n = !1);\n    var r = Ze(t, \"x\", \"min\"),\n        o = r,\n        a = S(e, r.shape),\n        i = a,\n        s = sn(i, r.rank);\n    null != s && (r = r.transpose(s), i = ln(i.length, r.rank));\n    var u = Dt.runKernel(function (t, e) {\n      var n = t.min(r, i);\n      return e([o, n]), n;\n    }, {\n      $x: r\n    }, function (t, e) {\n      return Au(t, e[1], e[0], a, s);\n    });\n\n    if (n) {\n      var l = on(u.shape, a);\n      u = u.reshape(l);\n    }\n\n    return u;\n  }\n}),\n    Lu = pn({\n  moments_: function (t, e, n) {\n    void 0 === e && (e = null), void 0 === n && (n = !1);\n    var r = S(e, (t = Ze(t, \"x\", \"moments\")).shape),\n        o = t.mean(r, n),\n        a = o.shape;\n    n || (a = on(o.shape, r));\n    var i = t.toFloat().sub(o.reshape(a)).square();\n    return {\n      mean: o,\n      variance: i.mean(r, n)\n    };\n  }\n}),\n    Wu = pn({\n  sum_: function (t, e, n) {\n    void 0 === e && (e = null), void 0 === n && (n = !1);\n    var r = Ze(t, \"x\", \"sum\");\n    \"bool\" === r.dtype && (r = r.toInt());\n    var o = S(e, r.shape);\n    return Vr(function (t) {\n      var e = sn(o, t.rank),\n          r = o,\n          a = t;\n      null != e && (a = t.transpose(e), r = ln(r.length, t.rank));\n      var i = Dt.runKernel(function (t) {\n        return t.sum(a, r);\n      }, {\n        permutedX: a\n      });\n\n      if (n) {\n        var s = on(i.shape, o);\n        i = i.reshape(s);\n      }\n\n      return {\n        value: i,\n        gradFunc: function (e) {\n          var n = t.shape.slice();\n          return o.forEach(function (t) {\n            n[t] = 1;\n          }), e.reshape(n).mul(In(t.shape, \"float32\"));\n        }\n      };\n    })(r);\n  }\n}),\n    Uu = pn({\n  prod_: function (t, e, n) {\n    void 0 === e && (e = null), void 0 === n && (n = !1);\n    var r = Ze(t, \"x\", \"prod\");\n    \"bool\" === r.dtype && (r = r.toInt());\n    var o = S(e, r.shape),\n        a = sn(o, r.rank),\n        i = o,\n        s = r;\n    null != a && (s = r.transpose(a), i = ln(i.length, r.rank));\n    var u = Dt.runKernel(function (t) {\n      return t.prod(s, i);\n    }, {\n      permutedX: s\n    });\n\n    if (n) {\n      var l = on(u.shape, o);\n      u = u.reshape(l);\n    }\n\n    return u;\n  }\n});\n\nvar zu = pn({\n  equal_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"equal\"),\n        o = Ze(e, \"b\", \"equal\");\n    return n = Rt(r, o), r = n[0], o = n[1], Yr(r.shape, o.shape), Dt.runKernel(function (t) {\n      return t.equal(r, o);\n    }, {\n      $a: r,\n      $b: o\n    });\n  }\n}),\n    Vu = pn({\n  equalStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"equalStrict\"),\n        r = Ze(e, \"b\", \"equalStrict\");\n    return v(n.shape, r.shape, \"Error in equalStrict: \"), n.equal(r);\n  }\n}),\n    Gu = pn({\n  greater_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"greater\"),\n        o = Ze(e, \"b\", \"greater\");\n    return n = Rt(r, o), r = n[0], o = n[1], Yr(r.shape, o.shape), Dt.runKernel(function (t) {\n      return t.greater(r, o);\n    }, {\n      $a: r,\n      $b: o\n    });\n  }\n}),\n    qu = pn({\n  greaterEqual_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"greaterEqual\"),\n        o = Ze(e, \"b\", \"greaterEqual\");\n    return n = Rt(r, o), r = n[0], o = n[1], Yr(r.shape, o.shape), Dt.runKernel(function (t, e) {\n      var n = t.greaterEqual(r, o);\n      return e([r, o]), n;\n    }, {\n      $a: r,\n      $b: o\n    }, function (t, e) {\n      var n = e[0],\n          r = e[1];\n      return {\n        $a: function () {\n          return Dn(n);\n        },\n        $b: function () {\n          return Dn(r);\n        }\n      };\n    });\n  }\n}),\n    Hu = pn({\n  greaterEqualStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"greaterEqualStrict\"),\n        r = Ze(e, \"b\", \"greaterEqualStrict\");\n    return v(n.shape, r.shape, \"Error in greaterEqualStrict: \"), n.greaterEqual(r);\n  }\n}),\n    $u = pn({\n  greaterStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"greaterStrict\"),\n        r = Ze(e, \"b\", \"greaterStrict\");\n    return v(n.shape, r.shape, \"Error in greaterStrict: \"), n.greater(r);\n  }\n}),\n    ju = pn({\n  less_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"less\"),\n        o = Ze(e, \"b\", \"less\");\n    return n = Rt(r, o), r = n[0], o = n[1], Yr(r.shape, o.shape), Dt.runKernel(function (t) {\n      return t.less(r, o);\n    }, {\n      $a: r,\n      $b: o\n    });\n  }\n}),\n    Ku = pn({\n  lessEqual_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"lessEqual\"),\n        o = Ze(e, \"b\", \"lessEqual\");\n    return n = Rt(r, o), r = n[0], o = n[1], Yr(r.shape, o.shape), Dt.runKernel(function (t) {\n      return t.lessEqual(r, o);\n    }, {\n      $a: r,\n      $b: o\n    });\n  }\n}),\n    Xu = pn({\n  lessEqualStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"lessEqualStrict\"),\n        r = Ze(e, \"b\", \"lessEqualStrict\");\n    return v(n.shape, r.shape, \"Error in lessEqualStrict: \"), n.lessEqual(r);\n  }\n}),\n    Yu = pn({\n  lessStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"lessStrict\"),\n        r = Ze(e, \"b\", \"lessStrict\");\n    return v(n.shape, r.shape, \"Error in lessStrict: \"), n.less(r);\n  }\n}),\n    Qu = pn({\n  notEqual_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"notEqual\"),\n        o = Ze(e, \"b\", \"notEqual\");\n    return n = Rt(r, o), r = n[0], o = n[1], Yr(r.shape, o.shape), Dt.runKernel(function (t) {\n      return t.notEqual(r, o);\n    }, {\n      $a: r,\n      $b: o\n    });\n  }\n}),\n    Ju = pn({\n  notEqualStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"notEqualStrict\"),\n        r = Ze(e, \"b\", \"notEqualStrict\");\n    return v(n.shape, r.shape, \"Error in notEqualStrict: \"), n.notEqual(r);\n  }\n});\nvar Zu = pn({\n  add_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"add\"),\n        o = Ze(e, \"b\", \"add\");\n    n = Rt(r, o), r = n[0], o = n[1];\n    var a = Yr(r.shape, o.shape);\n    return Dt.runKernel(function (t) {\n      return t.add(r, o);\n    }, {\n      $a: r,\n      $b: o\n    }, function (t) {\n      return {\n        $a: function () {\n          var e = t,\n              n = Xr(r.shape, a);\n          return n.length > 0 && (e = e.sum(n)), e.reshape(r.shape);\n        },\n        $b: function () {\n          var e = t,\n              n = Xr(o.shape, a);\n          return n.length > 0 && (e = e.sum(n)), e.reshape(o.shape);\n        }\n      };\n    });\n  }\n}),\n    tl = pn({\n  addN_: function (t) {\n    d(Array.isArray(t), function () {\n      return \"The argument passed to tf.addN() must be a list of tensors\";\n    }), d(t.length >= 1, function () {\n      return \"Must pass at least one tensor to tf.addN(), but got \" + t.length;\n    });\n    var e = t.map(function (t, e) {\n      return Ze(t, \"tensors\" + e, \"addN\");\n    }),\n        n = e[0];\n    e.forEach(function (t) {\n      if (t.dtype !== n.dtype) throw new Error(\"All tensors passed to tf.addN() must have the same dtype\");\n    }), e.forEach(function (t) {\n      if (!x(t.shape, n.shape)) throw new Error(\"All tensors passed to tf.addN() must have the same shape\");\n    });\n    var r = e;\n    return Dt.runKernel(function (t) {\n      return t.addN(e);\n    }, r, function (t) {\n      var n = {};\n      return e.forEach(function (e, r) {\n        n[r] = function () {\n          return t.clone();\n        };\n      }), n;\n    });\n  }\n}),\n    el = pn({\n  addStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"addStrict\"),\n        r = Ze(e, \"b\", \"addStrict\");\n    return v(n.shape, r.shape, \"Error in addStrict: \"), n.add(r);\n  }\n}),\n    nl = pn({\n  atan2_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"atan2\"),\n        o = Ze(e, \"b\", \"atan2\");\n    n = Rt(r, o), r = n[0], o = n[1];\n    var a = Yr(r.shape, o.shape);\n    return Dt.runKernel(function (t, e) {\n      var n = t.atan2(r, o);\n      return e([r, o]), n;\n    }, {\n      $a: r,\n      $b: o\n    }, function (t, e) {\n      var n = e[0],\n          r = e[1];\n      return {\n        $a: function () {\n          var e = Zu(n.square(), r.square()),\n              o = t.mul(r.div(e)),\n              i = Xr(n.shape, a);\n          return i.length > 0 && (o = o.sum(i)), o.reshape(n.shape);\n        },\n        $b: function () {\n          var e = Zu(n.square(), r.square()),\n              o = Rs(t.mul(n.div(e))),\n              i = Xr(r.shape, a);\n          return i.length > 0 && (o = o.sum(i)), o.reshape(r.shape);\n        }\n      };\n    });\n  }\n}),\n    rl = pn({\n  div_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"div\"),\n        o = Ze(e, \"b\", \"div\");\n    if (n = Rt(r, o), r = n[0], o = n[1], \"int32\" === r.dtype && \"int32\" === o.dtype) return al(r, o);\n    var a = Yr(r.shape, o.shape);\n    return Dt.runKernel(function (t, e) {\n      var n = t.realDivide(r, o);\n      return e([r, o]), n;\n    }, {\n      $a: r,\n      $b: o\n    }, function (t, e) {\n      var n = e[0],\n          r = e[1];\n      return {\n        $a: function () {\n          var e = t.div(r.toFloat()),\n              o = Xr(n.shape, a);\n          return o.length > 0 ? e.sum(o).reshape(n.shape) : e;\n        },\n        $b: function () {\n          var e = t.mul(n.toFloat()),\n              o = Xr(r.shape, a);\n          o.length > 0 && (e = e.sum(o).reshape(r.shape));\n          var i = r.square();\n          return e.div(i.toFloat()).neg();\n        }\n      };\n    });\n  }\n}),\n    ol = pn({\n  divStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"div\"),\n        r = Ze(e, \"b\", \"div\");\n    return v(n.shape, r.shape, \"Error in divideStrict: \"), n.div(r);\n  }\n}),\n    al = pn({\n  floorDiv_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"floorDiv\"),\n        o = Ze(e, \"b\", \"floorDiv\");\n    n = Rt(r, o), r = n[0], o = n[1];\n    var a = Yr(r.shape, o.shape);\n    return Dt.runKernel(function (t, e) {\n      var n = t.floorDiv(r, o);\n      return e([r, o]), n;\n    }, {\n      $a: r,\n      $b: o\n    }, function (t, e) {\n      var n = e[0],\n          r = e[1];\n      return {\n        $a: function () {\n          var e = t.div(r.toFloat()),\n              o = Xr(n.shape, a);\n          return o.length > 0 ? e.sum(o).reshape(n.shape) : e;\n        },\n        $b: function () {\n          var e = t.mul(n.toFloat()),\n              o = Xr(r.shape, a);\n          o.length > 0 && (e = e.sum(o).reshape(r.shape));\n          var i = r.square();\n          return e.div(i.toFloat()).neg();\n        }\n      };\n    });\n  }\n}),\n    il = pn({\n  maximum_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"maximum\"),\n        o = Ze(e, \"b\", \"maximum\");\n    return n = Rt(r, o), r = n[0], o = n[1], \"bool\" === r.dtype && (r = r.toInt(), o = o.toInt()), Yr(r.shape, o.shape), Dt.runKernel(function (t, e) {\n      var n = t.maximum(r, o);\n      return e([r, o]), n;\n    }, {\n      $a: r,\n      $b: o\n    }, function (t, e) {\n      var n = e[0],\n          r = e[1];\n      return {\n        $a: function () {\n          return t.mul(n.greaterEqual(r).toFloat());\n        },\n        $b: function () {\n          return t.mul(n.less(r).toFloat());\n        }\n      };\n    });\n  }\n}),\n    sl = pn({\n  maximumStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"maximumStrict\"),\n        r = Ze(e, \"b\", \"maximumStrict\");\n    return v(n.shape, r.shape, \"Error in maximumStrict: \"), n.maximum(r);\n  }\n}),\n    ul = pn({\n  minimum_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"minimum\"),\n        o = Ze(e, \"b\", \"minimum\");\n    return n = Rt(r, o), r = n[0], o = n[1], \"bool\" === r.dtype && (r = r.toInt(), o = o.toInt()), Yr(r.shape, o.shape), Dt.runKernel(function (t, e) {\n      var n = t.minimum(r, o);\n      return e([r, o]), n;\n    }, {\n      $a: r,\n      $b: o\n    }, function (t, e) {\n      var n = e[0],\n          r = e[1];\n      return {\n        $a: function () {\n          return t.mul(n.lessEqual(r).toFloat());\n        },\n        $b: function () {\n          return t.mul(n.greater(r).toFloat());\n        }\n      };\n    });\n  }\n}),\n    ll = pn({\n  minimumStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"minimumStrict\"),\n        r = Ze(e, \"b\", \"minimumStrict\");\n    return v(n.shape, r.shape, \"Error in minimumStrict: \"), n.minimum(r);\n  }\n}),\n    cl = pn({\n  mod_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"mod\"),\n        o = Ze(e, \"b\", \"mod\");\n    n = Rt(r, o), r = n[0], o = n[1];\n    var a = Yr(r.shape, o.shape);\n    return Dt.runKernel(function (t, e) {\n      var n = t.mod(r, o);\n      return e([r, o]), n;\n    }, {\n      $a: r,\n      $b: o\n    }, function (t, e) {\n      var n = e[0],\n          r = e[1];\n      return {\n        $a: function () {\n          var e = Xr(n.shape, a);\n          return e.length > 0 ? t.sum(e).reshape(n.shape) : t;\n        },\n        $b: function () {\n          var e = t.mul(n.div(r).floor().neg()),\n              o = Xr(r.shape, a);\n          return o.length > 0 ? e.sum(o).reshape(r.shape) : e;\n        }\n      };\n    });\n  }\n}),\n    hl = pn({\n  modStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"modStrict\"),\n        r = Ze(e, \"b\", \"modStrict\");\n    return v(n.shape, r.shape, \"Error in modStrict: \"), n.mod(r);\n  }\n}),\n    pl = pn({\n  mul_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"mul\"),\n        o = Ze(e, \"b\", \"mul\");\n    n = Rt(r, o), r = n[0], o = n[1];\n    var a = Yr(r.shape, o.shape);\n    return Dt.runKernel(function (t, e) {\n      var n = t.multiply(r, o);\n      return e([r, o]), n;\n    }, {\n      $a: r,\n      $b: o\n    }, function (t, e) {\n      var n = e[0],\n          r = e[1];\n      return {\n        $a: function () {\n          var e = t.mul(r.toFloat()),\n              o = Xr(n.shape, a);\n          return o.length > 0 ? e.sum(o).reshape(n.shape) : e;\n        },\n        $b: function () {\n          var e = t.mul(n.toFloat()),\n              o = Xr(r.shape, a);\n          return o.length > 0 ? e.sum(o).reshape(r.shape) : e;\n        }\n      };\n    });\n  }\n}),\n    fl = pn({\n  mulStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"mul\"),\n        r = Ze(e, \"b\", \"mul\");\n    return v(n.shape, r.shape, \"Error in multiplyStrict: \"), n.mul(r);\n  }\n}),\n    dl = pn({\n  pow_: function (t, e) {\n    var n = Ze(t, \"base\", \"pow\"),\n        r = Ze(e, \"exp\", \"pow\"),\n        o = Yr(n.shape, r.shape);\n    return t = n.cast(Ct(n.dtype, r.dtype)), e = r.cast(Ct(n.dtype, r.dtype)), Dt.runKernel(function (t, e) {\n      var o = t.pow(n, r);\n      return e([n, r, o]), o;\n    }, {\n      $base: n,\n      $exp: r\n    }, function (t, e) {\n      var n = e[0],\n          r = e[1],\n          a = e[2];\n      return {\n        $base: function () {\n          var e = r.toFloat(),\n              a = t.mul(e.mul(n.pow(e.sub(yn(1))))),\n              i = Xr(n.shape, o);\n          return i.length > 0 && (a = a.sum(i)), a.reshape(n.shape);\n        },\n        $exp: function () {\n          var e = n.greater(0),\n              i = n.log().where(e, Dn(n)),\n              s = t.mul(a.mul(i)),\n              u = Xr(r.shape, o);\n          return u.length > 0 && (s = s.sum(u)), s.reshape(r.shape);\n        }\n      };\n    });\n  }\n}),\n    vl = pn({\n  powStrict_: function (t, e) {\n    return v(t.shape, e.shape, \"Error in powStrict: \"), t.pow(e);\n  }\n}),\n    ml = pn({\n  squaredDifference_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"squaredDifference\"),\n        o = Ze(e, \"b\", \"squaredDifference\");\n    return n = Rt(r, o), r = n[0], o = n[1], Yr(r.shape, o.shape), Dt.runKernel(function (t, e) {\n      var n = t.squaredDifference(r, o);\n      return e([r, o]), n;\n    }, {\n      $a: r,\n      $b: o\n    }, function (t, e) {\n      var n = e[0],\n          r = e[1],\n          o = yn(2);\n      return {\n        $a: function () {\n          return t.mul(n.sub(r).mul(o));\n        },\n        $b: function () {\n          return t.mul(r.sub(n).mul(o));\n        }\n      };\n    });\n  }\n}),\n    gl = pn({\n  squaredDifferenceStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"squaredDifferenceStrict\"),\n        r = Ze(e, \"b\", \"squaredDifferenceStrict\");\n    return v(n.shape, r.shape, \"Error in squaredDifferenceStrict: \"), n.squaredDifference(r);\n  }\n}),\n    yl = pn({\n  sub_: function (t, e) {\n    var n,\n        r = Ze(t, \"a\", \"sub\"),\n        o = Ze(e, \"b\", \"sub\");\n    n = Rt(r, o), r = n[0], o = n[1];\n    var a = Yr(r.shape, o.shape);\n    return Dt.runKernel(function (t) {\n      return t.subtract(r, o);\n    }, {\n      $a: r,\n      $b: o\n    }, function (t) {\n      return {\n        $a: function () {\n          var e = t,\n              n = Xr(r.shape, a);\n          return n.length > 0 && (e = e.sum(n)), e.reshape(r.shape);\n        },\n        $b: function () {\n          var e = t,\n              n = Xr(o.shape, a);\n          return n.length > 0 && (e = e.sum(n)), e.neg().reshape(o.shape);\n        }\n      };\n    });\n  }\n}),\n    xl = pn({\n  subStrict_: function (t, e) {\n    var n = Ze(t, \"a\", \"subStrict\"),\n        r = Ze(e, \"b\", \"subStrict\");\n    return v(n.shape, r.shape, \"Error in subStrict: \"), n.sub(r);\n  }\n});\n\nvar bl = pn({\n  logicalAnd_: function (t, e) {\n    var n = Ze(t, \"a\", \"logicalAnd\", \"bool\"),\n        r = Ze(e, \"b\", \"logicalAnd\", \"bool\");\n    return Yr(n.shape, r.shape), Dt.runKernel(function (t) {\n      return t.logicalAnd(n, r);\n    }, {\n      $a: n,\n      $b: r\n    });\n  }\n}),\n    wl = pn({\n  logicalNot_: function (t) {\n    var e = Ze(t, \"x\", \"logicalNot\", \"bool\");\n    return Dt.runKernel(function (t) {\n      return t.logicalNot(e);\n    }, {\n      $x: e\n    });\n  }\n}),\n    Cl = pn({\n  logicalOr_: function (t, e) {\n    var n = Ze(t, \"a\", \"logicalOr\", \"bool\"),\n        r = Ze(e, \"b\", \"logicalOr\", \"bool\");\n    return Yr(n.shape, r.shape), Dt.runKernel(function (t) {\n      return t.logicalOr(n, r);\n    }, {\n      $a: n,\n      $b: r\n    });\n  }\n}),\n    El = pn({\n  logicalXor_: function (t, e) {\n    var n = Ze(t, \"a\", \"logicalXor\", \"bool\"),\n        r = Ze(e, \"b\", \"logicalXor\", \"bool\");\n    return Yr(n.shape, r.shape), Cl(t, e).logicalAnd(bl(t, e).logicalNot());\n  }\n}),\n    Rl = pn({\n  where_: function (t, e, n) {\n    var r = Ze(e, \"a\", \"where\"),\n        o = Ze(n, \"b\", \"where\"),\n        a = Ze(t, \"condition\", \"where\", \"bool\");\n    return v(r.shape, o.shape, \"Error in where: \"), 1 === a.rank ? d(a.shape[0] === r.shape[0], function () {\n      return \"The first dimension of `a` must match the size of `condition`.\";\n    }) : v(a.shape, o.shape, \"Error in where: \"), Dt.runKernel(function (t, e) {\n      var n = t.select(a, r, o);\n      return e([a]), n;\n    }, {\n      $condition: a,\n      $a: r,\n      $b: o\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $condition: function () {\n          return Dn(n).toFloat();\n        },\n        $a: function () {\n          return t.mul(n.cast(t.dtype));\n        },\n        $b: function () {\n          return t.mul(n.logicalNot().cast(t.dtype));\n        }\n      };\n    });\n  }\n}),\n    Il = function (t) {\n  return r(this, void 0, void 0, function () {\n    var e, n, r;\n    return o(this, function (o) {\n      switch (o.label) {\n        case 0:\n          return [4, (e = Ze(t, \"condition\", \"whereAsync\", \"bool\")).data()];\n\n        case 1:\n          return n = o.sent(), r = wo(e.shape, n), t !== e && e.dispose(), [2, r];\n      }\n    });\n  });\n};\n\nvar Sl = pn({\n  elu_: function (t) {\n    var e = Ze(t, \"x\", \"elu\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.elu(e);\n      return n([r]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return Dt.runKernel(function (e) {\n            return e.eluDer(t, n);\n          }, {\n            dy: t,\n            y: n\n          });\n        }\n      };\n    });\n  }\n}),\n    Nl = pn({\n  leakyRelu_: function (t, e) {\n    void 0 === e && (e = .2);\n    var n = Ze(t, \"x\", \"leakyRelu\");\n    return il(yn(e).mul(n), n);\n  }\n}),\n    kl = pn({\n  prelu_: function (t, e) {\n    var n = Ze(t, \"x\", \"prelu\"),\n        r = Ze(e, \"alpha\", \"prelu\");\n    return Dt.runKernel(function (t, e) {\n      var o = t.prelu(n, r);\n      return e([n, r]), o;\n    }, {\n      $x: n,\n      $alpha: r\n    }, function (t, e) {\n      var n = e[0],\n          r = e[1],\n          o = n.greater(0);\n      return {\n        $x: function () {\n          return Rl(o, t, t.mul(r));\n        },\n        $alpha: function () {\n          var e = Rl(o, Dn(t), t.mul(n)),\n              a = Xr(r.shape, t.shape);\n          return a.length > 0 && (e = e.sum(a)), e.reshape(r.shape);\n        }\n      };\n    });\n  }\n}),\n    Al = pn({\n  relu_: function (t) {\n    var e = Ze(t, \"x\", \"relu\");\n    return \"bool\" === e.dtype ? e.toInt() : Dt.runKernel(function (t, n) {\n      var r = t.relu(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return t.mulStrict(n.step().toFloat());\n        }\n      };\n    });\n  }\n}),\n    Tl = pn({\n  selu_: function (t) {\n    var e = Ze(t, \"x\", \"selu\");\n    return Dt.runKernel(function (t, n) {\n      var r = t.selu(e);\n      return n([e]), r;\n    }, {\n      $x: e\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          var e = n.greater(yn(0)),\n              r = yn(Ui),\n              o = yn(zi),\n              a = t.mul(o),\n              i = t.mul(r).mul(n.toFloat().exp());\n          return Rl(e, a, i);\n        }\n      };\n    });\n  }\n});\nvar Dl = pn({\n  transpose_: function (t, e) {\n    var n = Ze(t, \"x\", \"transpose\");\n    return null == e && (e = n.shape.map(function (t, e) {\n      return e;\n    }).reverse()), d(n.rank === e.length, function () {\n      return \"Error in transpose: rank of input \" + n.rank + \" must match length of perm \" + e + \".\";\n    }), e.forEach(function (t) {\n      d(t >= 0 && t < n.rank, function () {\n        return \"All entries in 'perm' must be between 0 and \" + (n.rank - 1) + \" but got \" + e;\n      });\n    }), n.rank <= 1 ? n.clone() : Dt.runKernel(function (t) {\n      return t.transpose(n, e);\n    }, {\n      $x: n\n    }, function (t) {\n      var n = un(e);\n      return {\n        $x: function () {\n          return t.transpose(n);\n        }\n      };\n    });\n  }\n});\n\nvar _l = pn({\n  localResponseNormalization_: function (t, e, n, r, o) {\n    void 0 === e && (e = 5), void 0 === n && (n = 1), void 0 === r && (r = 1), void 0 === o && (o = .5);\n    var a = Ze(t, \"x\", \"localResponseNormalization\");\n    d(4 === a.rank || 3 === a.rank, function () {\n      return \"Error in localResponseNormalization: x must be rank 3 or 4 but got\\n               rank \" + a.rank + \".\";\n    }), d(b(e), function () {\n      return \"Error in localResponseNormalization: depthRadius must be an integer but got depthRadius \" + e + \".\";\n    });\n    var i = a,\n        s = !1;\n    3 === a.rank && (s = !0, i = a.as4D(1, a.shape[0], a.shape[1], a.shape[2]));\n    var u = Dt.runKernel(function (t, a) {\n      var s = t.localResponseNormalization4D(i, e, n, r, o);\n      return a([i, s]), s;\n    }, {\n      x4D: i\n    }, function (t, a) {\n      var i = a[0],\n          s = a[1];\n      return {\n        x4D: function () {\n          return Dt.runKernel(function (a) {\n            return a.LRNGrad(t, i, s, e, n, r, o);\n          }, {});\n        }\n      };\n    });\n    return s ? u.as3D(u.shape[1], u.shape[2], u.shape[3]) : u;\n  }\n});\n\nvar Ol = pn({\n  norm_: function (t, e, n, r) {\n    void 0 === e && (e = \"euclidean\"), void 0 === n && (n = null), void 0 === r && (r = !1);\n\n    var o = function t(e, n, r) {\n      if (void 0 === r && (r = null), 0 === e.rank) return e.abs();\n      if (1 !== e.rank && null === r) return t(e.reshape([-1]), n, r);\n\n      if (1 === e.rank || \"number\" == typeof r || Array.isArray(r) && 1 === r.length) {\n        if (1 === n) return e.abs().sum(r);\n        if (n === 1 / 0) return e.abs().max(r);\n        if (n === -1 / 0) return e.abs().min(r);\n        if (\"euclidean\" === n || 2 === n) return e.abs().pow(yn(2, \"int32\")).sum(r).sqrt();\n        throw new Error(\"Error in norm: invalid ord value: \" + n);\n      }\n\n      if (Array.isArray(r) && 2 === r.length) {\n        if (1 === n) return e.abs().sum(r[0]).max(r[1] - 1);\n        if (n === 1 / 0) return e.abs().sum(r[1]).max(r[0]);\n        if (n === -1 / 0) return e.abs().sum(r[1]).min(r[0]);\n        if (\"fro\" === n || \"euclidean\" === n) return e.square().sum(r).sqrt();\n        throw new Error(\"Error in norm: invalid ord value: \" + n);\n      }\n\n      throw new Error(\"Error in norm: invalid axis: \" + r);\n    }(t = Ze(t, \"x\", \"norm\"), e, n),\n        a = o.shape;\n\n    if (r) {\n      var i = S(n, t.shape);\n      a = on(o.shape, i);\n    }\n\n    return o.reshape(a);\n  }\n});\n\nfunction Ml(t, e) {\n  for (var n = [], r = t; r < e; ++r) n.push(r);\n\n  return n;\n}\n\nfunction Fl(t) {\n  for (var e = [], n = 0; n < t.length; ++n) for (var r = 0; r < t[n].length; ++r) e.push(t[n][r]);\n\n  return e;\n}\n\nvar Bl = pn({\n  gather_: function (t, e, n) {\n    void 0 === n && (n = 0);\n    var r = Ze(t, \"x\", \"gather\"),\n        o = Ze(e, \"indices\", \"gather\", \"int32\");\n    n = S(n, r.shape)[0];\n\n    var a = function (t, e, n) {\n      for (var r = t.shape[n], o = [], a = 1, i = 1, s = 0; s < n; s++) o.push(t.shape[s]), a *= t.shape[s];\n\n      for (s = 0; s < e.rank; s++) o.push(e.shape[s]);\n\n      for (s = n + 1; s < t.rank; s++) o.push(t.shape[s]), i *= t.shape[s];\n\n      return {\n        batchSize: a,\n        sliceSize: i,\n        dimSize: r,\n        outputShape: o\n      };\n    }(r, o, n);\n\n    return Dt.runKernel(function (t, e) {\n      var a = t.gather(r, o.flatten(), n);\n      return e([o]), a;\n    }, {\n      $x: r\n    }, function (t, e) {\n      var o = e[0];\n      return {\n        $x: function () {\n          var e = r.shape,\n              a = o.size,\n              i = e.slice(0, n),\n              s = i.length,\n              u = e.slice(n, e.length).slice(1),\n              l = u.length,\n              c = Ml(0, s),\n              h = Ml(s + 1, s + 1 + l),\n              p = Fl([i, [a], u]),\n              f = t.reshape(p),\n              d = o.reshape([a]),\n              v = Fl([[s], c, h]),\n              m = f.transpose(v),\n              g = Pl(m, d, r.shape[n]),\n              y = un(v);\n          return g = g.transpose(y);\n        }\n      };\n    }).reshape(a.outputShape);\n  }\n}),\n    Pl = pn({\n  unsortedSegmentSum_: function (t, e, n) {\n    var r = Ze(t, \"x\", \"unsortedSegmentSum\"),\n        o = Ze(e, \"segmentIds\", \"unsortedSegmentSum\", \"int32\");\n    return d(b(n), function () {\n      return \"numSegments must be of dtype int\";\n    }), Dt.runKernel(function (t, e) {\n      var a = t.unsortedSegmentSum(r, o, n);\n      return e([o]), a;\n    }, {\n      $x: r\n    }, function (t, e) {\n      var n = e[0];\n      return {\n        $x: function () {\n          return function (t, e) {\n            for (var n = il(e, Dn(e)), r = Bl(t, n), o = qu(e, yn(0, \"int32\")), a = r.rank - o.rank, i = 0; i < a; ++i) o = nr(o, i + 1);\n\n            o = bl(o, In(r.shape, \"bool\"));\n            var s = Dn(r);\n            return Rl(o, r, s);\n          }(t, n);\n        }\n      };\n    });\n  }\n});\nvar Ll = pn({\n  basicLSTMCell_: function (t, e, n, r, o, a) {\n    var i = Ze(t, \"forgetBias\", \"basicLSTMCell\"),\n        s = Ze(e, \"lstmKernel\", \"basicLSTMCell\"),\n        u = Ze(n, \"lstmBias\", \"basicLSTMCell\"),\n        l = Ze(r, \"data\", \"basicLSTMCell\"),\n        c = Ze(o, \"c\", \"basicLSTMCell\"),\n        h = Ze(a, \"h\", \"basicLSTMCell\"),\n        p = l.concat(h, 1).matMul(s).add(u),\n        f = p.shape[0],\n        d = p.shape[1] / 4,\n        v = [f, d],\n        m = p.slice([0, 0], v),\n        g = p.slice([0, d], v),\n        y = p.slice([0, 2 * d], v),\n        x = p.slice([0, 3 * d], v),\n        b = m.sigmoid().mulStrict(g.tanh()).addStrict(c.mulStrict(i.add(y).sigmoid())),\n        w = b.tanh().mulStrict(x.sigmoid());\n    return [b, w];\n  }\n}),\n    Wl = pn({\n  multiRNNCell_: function (t, e, n, r) {\n    for (var o = Ze(e, \"data\", \"multiRNNCell\"), a = tn(n, \"c\", \"multiRNNCell\"), i = tn(r, \"h\", \"multiRNNCell\"), s = o, u = [], l = 0; l < t.length; l++) {\n      var c = t[l](s, a[l], i[l]);\n      u.push(c[0]), u.push(c[1]), s = c[1];\n    }\n\n    var h = [],\n        p = [];\n\n    for (l = 0; l < u.length; l += 2) h.push(u[l]), p.push(u[l + 1]);\n\n    return [h, p];\n  }\n});\nvar Ul = pn({\n  movingAverage_: function (t, e, n, r, o) {\n    void 0 === o && (o = !0);\n    var a = Ze(t, \"v\", \"movingAverage\"),\n        i = Ze(e, \"x\", \"movingAverage\"),\n        s = Ze(n, \"decay\", \"movingAverage\");\n    It(a, i), d(x(a.shape, i.shape), function () {\n      return \"Shape mismatch in v and x\";\n    });\n    var u = yn(1),\n        l = u.sub(s),\n        c = i.sub(a).mul(l);\n\n    if (o) {\n      d(null != r, function () {\n        return \"When using zeroDebias: true, step is required.\";\n      });\n      var h = Ze(r, \"step\", \"movingAverage\");\n      c = c.div(u.sub(dl(s, h)));\n    }\n\n    return a.add(c);\n  }\n});\nvar zl = pn({\n  stridedSlice_: function (t, e, n, r, o, a, i, s, u) {\n    if (void 0 === o && (o = 0), void 0 === a && (a = 0), void 0 === i && (i = 0), void 0 === s && (s = 0), void 0 === u && (u = 0), 0 !== i) throw new Error(\"ellipsis mask is not yet supported\");\n    if (0 !== s) throw new Error(\"new axis mask is not yet supported\");\n    var l = Ze(t, \"x\", \"stridedSlice\");\n\n    if (r.every(function (t) {\n      return 1 === t;\n    })) {\n      var c = _r(l.shape, e, n, r, o, a, i, s, u),\n          h = c[0],\n          p = c[1],\n          f = c[2],\n          d = p.filter(function (t, e) {\n        return -1 === f.indexOf(e);\n      });\n\n      return Ru(l, h, p).reshape(d);\n    }\n\n    return Dt.runKernel(function (t) {\n      return t.stridedSlice(l, e, n, r, o, a, i, s, u);\n    }, {\n      $x: l\n    });\n  }\n});\nvar Vl = pn({\n  topk_: function (t, e, n) {\n    void 0 === e && (e = 1), void 0 === n && (n = !0);\n    var r = Ze(t, \"x\", \"topk\");\n    if (0 === r.rank) throw new Error(\"topk() expects the input to be of rank 1 or higher\");\n    var o = r.shape[r.shape.length - 1];\n    if (e > o) throw new Error(\"'k' passed to topk() must be <= the last dimension (\" + o + \") but got \" + e);\n    var a = Dt.runKernel(function (t) {\n      return t.topk(r, e, n);\n    }, {\n      $x: r\n    });\n    return {\n      values: a[0],\n      indices: a[1]\n    };\n  }\n});\nvar Gl = pn({\n  scatterND_: function (t, e, n) {\n    var r = Ze(t, \"indices\", \"scatterND\", \"int32\"),\n        o = Ze(e, \"updates\", \"scatterND\");\n    return Tr(o, r, n), Dt.runKernel(function (t) {\n      return t.scatterND(r, o, n);\n    }, {\n      $indices: r,\n      $updates: o\n    });\n  }\n});\nvar ql = pn({\n  fft_: function (t) {\n    d(\"complex64\" === t.dtype, function () {\n      return \"The dtype for tf.spectral.fft() must be complex64 but got \" + t.dtype + \".\";\n    });\n    var e = t.shape[t.shape.length - 1],\n        n = t.size / e,\n        r = t.as2D(n, e);\n    return Dt.runKernel(function (t) {\n      return t.fft(r);\n    }, {\n      input: t\n    }).reshape(t.shape);\n  }\n}),\n    Hl = pn({\n  ifft_: function (t) {\n    d(\"complex64\" === t.dtype, function () {\n      return \"The dtype for tf.spectral.ifft() must be complex64 but got \" + t.dtype + \".\";\n    });\n    var e = t.shape[t.shape.length - 1],\n        n = t.size / e,\n        r = t.as2D(n, e);\n    return Dt.runKernel(function (t) {\n      return t.ifft(r);\n    }, {\n      input: t\n    }).reshape(t.shape);\n  }\n}),\n    $l = pn({\n  rfft_: function (t, e) {\n    d(\"float32\" === t.dtype, function () {\n      return \"The dtype for rfft() must be real value but got \" + t.dtype;\n    });\n    var n,\n        r = t.shape[t.shape.length - 1],\n        o = t.size / r;\n\n    if (null != e && e < r) {\n      var a = t.shape.map(function (t) {\n        return 0;\n      }),\n          i = t.shape.map(function (t) {\n        return t;\n      });\n      i[t.shape.length - 1] = e, n = t.slice(a, i), r = e;\n    } else if (null != e && e > r) {\n      var s = t.shape.map(function (t) {\n        return t;\n      });\n      s[t.shape.length - 1] = e - r, n = t.concat(Sn(s), t.shape.length - 1), r = e;\n    } else n = t;\n\n    var u = n.zerosLike(),\n        l = fn(n, u).as2D(o, r),\n        c = ql(l),\n        h = Math.floor(r / 2) + 1,\n        p = dn(c),\n        f = vn(c),\n        v = p.split([h, r - h], p.shape.length - 1),\n        m = f.split([h, r - h], f.shape.length - 1),\n        g = n.shape.slice();\n    return g[n.shape.length - 1] = h, fn(v[0], m[0]).reshape(g);\n  }\n}),\n    jl = pn({\n  irfft_: function (t) {\n    var e = t.shape[t.shape.length - 1],\n        n = t.size / e;\n\n    if (e <= 2) {\n      var r = t.as2D(n, e),\n          o = Hl(r);\n      return dn(o);\n    }\n\n    var a = [n, 2 * (e - 1)],\n        i = dn(t).as2D(n, e),\n        s = vn(t).as2D(n, e),\n        u = i.slice([0, 1], [n, e - 2]).reverse(1),\n        l = s.slice([0, 1], [n, e - 2]).reverse(1).mul(yn(-1)),\n        c = i.concat(u, 1),\n        h = s.concat(l, 1);\n    return r = fn(c, h).as2D(a[0], a[1]), o = Hl(r), dn(o);\n  }\n}),\n    Kl = Object.freeze({\n  fft: ql,\n  ifft: Hl,\n  rfft: $l,\n  irfft: jl\n});\nvar Xl = pn({\n  sparseToDense_: function (t, e, n, r) {\n    void 0 === r && (r = 0);\n    var o = Ze(t, \"sparseIndices\", \"sparseToDense\", \"int32\"),\n        a = Ze(e, \"sparseValues\", \"sparseToDense\"),\n        i = Ze(r, \"defaultValue\", \"sparseToDense\", a.dtype);\n    return function (t, e, n, r) {\n      if (\"int32\" !== t.dtype) throw new Error(\"tf.sparseToDense() expects the indices to be int32 type, but the dtype was \" + t.dtype + \".\");\n      if (t.rank > 2) throw new Error(\"sparseIndices should be a scalar, vector, or matrix, but got shape \" + t.shape + \".\");\n      var o = t.rank > 0 ? t.shape[0] : 1,\n          a = t.rank > 1 ? t.shape[1] : 1;\n      if (n.length !== a) throw new Error(\"outputShape has incorrect number of elements:, \" + n.length + \", should be: \" + a + \".\");\n      var i = e.size;\n      if (0 !== e.rank && (1 !== e.rank || i !== o)) throw new Error(\"sparseValues has incorrect shape \" + e.shape + \", should be [] or [\" + o + \"]\");\n      if (e.dtype !== r.dtype) throw new Error(\"sparseValues.dtype must match defaultValues.dtype\");\n    }(o, a, n, i), Dt.runKernel(function (t) {\n      return t.sparseToDense(o, a, n, i);\n    }, {\n      $sparseIndices: o,\n      $sparseValues: a,\n      $defaultValue: i\n    });\n  }\n});\nvar Yl = pn({\n  gatherND_: function (t, e) {\n    var n = Ze(e, \"indices\", \"gatherND\", \"int32\"),\n        r = Ze(t, \"x\", \"gatherND\");\n    return Dt.runKernel(function (t) {\n      return t.gatherND(r, n);\n    }, {\n      $x: r,\n      $indices: n\n    });\n  }\n});\nvar Ql = pn({\n  dropout_: function (t, e, n, r) {\n    if (null != n && !x(t.shape, n)) throw new Error(\"Non-default noise shape is not implemented yet: \" + JSON.stringify(n));\n    var o = fr(t.shape, 0, 1, \"float32\", r).greater(e);\n    return o = o.div(yl(1, e)), t.mul(o);\n  }\n});\n\nfunction Jl(t, e, n) {\n  for (var r = 1 - t % 2, o = new Float32Array(t), a = 0; a < t; ++a) {\n    var i = 2 * Math.PI * a / (t + r - 1);\n    o[a] = e - n * Math.cos(i);\n  }\n\n  return xn(o, \"float32\");\n}\n\nvar Zl,\n    tc = pn({\n  hannWindow_: function (t) {\n    return Jl(t, .5, .5);\n  }\n}),\n    ec = pn({\n  hammingWindow_: function (t) {\n    return Jl(t, .54, .46);\n  }\n}),\n    nc = pn({\n  frame_: function (t, e, n, r, o) {\n    void 0 === r && (r = !1), void 0 === o && (o = 0);\n\n    for (var a = 0, i = []; a + e <= t.size;) i.push(Ru(t, a, e)), a += n;\n\n    if (r) {\n      var s = a + e - t.size,\n          u = _n([Ru(t, a, e - s), Nn([s], o)]);\n\n      i.push(u);\n    }\n\n    return 0 === i.length ? bn([], [0, e]) : _n(i).as2D(i.length, e);\n  }\n}),\n    rc = Object.freeze({\n  hannWindow: tc,\n  hammingWindow: ec,\n  frame: nc\n});\n!function (t) {\n  t[t.NONE = 0] = \"NONE\", t[t.MEAN = 1] = \"MEAN\", t[t.SUM = 2] = \"SUM\", t[t.SUM_BY_NONZERO_WEIGHTS = 3] = \"SUM_BY_NONZERO_WEIGHTS\";\n}(Zl || (Zl = {}));\nvar oc = pn({\n  absoluteDifference_: function (t, e, n, r) {\n    void 0 === r && (r = Zl.SUM_BY_NONZERO_WEIGHTS);\n    var o = Ze(t, \"labels\", \"absoluteDifference\"),\n        a = Ze(e, \"predictions\", \"absoluteDifference\"),\n        i = null;\n    null != n && (i = Ze(n, \"weights\", \"absoluteDifference\")), v(o.shape, a.shape, \"Error in absoluteDifference: \");\n    var s = o.sub(a).abs();\n    return ac(s, i, r);\n  }\n}),\n    ac = pn({\n  computeWeightedLoss_: function (t, e, n) {\n    void 0 === n && (n = Zl.SUM_BY_NONZERO_WEIGHTS);\n    var r = Ze(t, \"losses\", \"computeWeightedLoss\"),\n        o = null;\n    null != e && (o = Ze(e, \"weights\", \"computeWeightedLoss\"));\n    var a = null == o ? r : r.mul(o);\n    if (n === Zl.NONE) return a;\n    if (n === Zl.SUM) return a.sum();\n\n    if (n === Zl.MEAN) {\n      if (null == o) return a.mean();\n      var i = r.size / o.size,\n          s = a.sum().div(o.sum());\n      return i > 1 ? s.div(yn(i)) : s;\n    }\n\n    if (n === Zl.SUM_BY_NONZERO_WEIGHTS) {\n      if (null == o) return a.sum().div(yn(r.size));\n      var u = o.mul(In(r.shape)).notEqual(yn(0)).sum().toFloat();\n      return a.sum().div(u);\n    }\n\n    throw Error(\"Unknown reduction: \" + n);\n  }\n}),\n    ic = pn({\n  cosineDistance_: function (t, e, n, r, o) {\n    void 0 === o && (o = Zl.SUM_BY_NONZERO_WEIGHTS);\n    var a = Ze(t, \"labels\", \"cosineDistance\"),\n        i = Ze(e, \"predictions\", \"cosineDistance\"),\n        s = null;\n    null != r && (s = Ze(r, \"weights\", \"cosineDistance\")), v(a.shape, i.shape, \"Error in cosineDistance: \");\n    var u = yn(1).sub(a.mul(i).sum(n, !0));\n    return ac(u, s, o);\n  }\n}),\n    sc = pn({\n  hingeLoss_: function (t, e, n, r) {\n    void 0 === r && (r = Zl.SUM_BY_NONZERO_WEIGHTS);\n    var o = Ze(t, \"labels\", \"hingeLoss\"),\n        a = Ze(e, \"predictions\", \"hingeLoss\"),\n        i = null;\n    null != n && (i = Ze(n, \"weights\", \"hingeLoss\")), v(o.shape, a.shape, \"Error in hingeLoss: \");\n    var s = yn(1);\n    o = yn(2).mul(o).sub(s);\n    var u = s.sub(o.mul(a)).relu();\n    return ac(u, i, r);\n  }\n}),\n    uc = pn({\n  huberLoss_: function (t, e, n, r, o) {\n    void 0 === r && (r = 1), void 0 === o && (o = Zl.SUM_BY_NONZERO_WEIGHTS);\n    var a = Ze(t, \"labels\", \"huberLoss\"),\n        i = Ze(e, \"predictions\", \"huberLoss\"),\n        s = null;\n    null != n && (s = Ze(n, \"weights\", \"huberLoss\")), v(a.shape, i.shape, \"Error in huberLoss: \");\n    var u = yn(r),\n        l = i.sub(a).abs(),\n        c = ul(l, u),\n        h = l.sub(c),\n        p = yn(.5).mul(c.square()).add(u.mul(h));\n    return ac(p, s, o);\n  }\n}),\n    lc = pn({\n  logLoss_: function (t, e, n, r, o) {\n    void 0 === r && (r = 1e-7), void 0 === o && (o = Zl.SUM_BY_NONZERO_WEIGHTS);\n    var a = Ze(t, \"labels\", \"logLoss\"),\n        i = Ze(e, \"predictions\", \"logLoss\"),\n        s = null;\n    null != n && (s = Ze(n, \"weights\", \"logLoss\")), v(a.shape, i.shape, \"Error in logLoss: \");\n    var u = yn(1),\n        l = yn(r),\n        c = a.mul(i.add(l).log()).neg().sub(u.sub(a).mul(u.sub(i).add(l).log()));\n    return ac(c, s, o);\n  }\n}),\n    cc = pn({\n  meanSquaredError_: function (t, e, n, r) {\n    void 0 === r && (r = Zl.SUM_BY_NONZERO_WEIGHTS);\n    var o = Ze(t, \"labels\", \"meanSquaredError\"),\n        a = Ze(e, \"predictions\", \"meanSquaredError\"),\n        i = null;\n    null != n && (i = Ze(n, \"weights\", \"meanSquaredError\")), v(o.shape, a.shape, \"Error in meanSquaredError: \");\n    var s = o.squaredDifference(a);\n    return ac(s, i, r);\n  }\n}),\n    hc = pn({\n  sigmoidCrossEntropy_: function (t, e, n, r, o) {\n    void 0 === r && (r = 0), void 0 === o && (o = Zl.SUM_BY_NONZERO_WEIGHTS);\n    var a = Ze(t, \"multiClassLabels\", \"sigmoidCrossEntropy\"),\n        i = Ze(e, \"logits\", \"sigmoidCrossEntropy\"),\n        s = null;\n\n    if (null != n && (s = Ze(n, \"weights\", \"sigmoidCrossEntropy\")), v(a.shape, i.shape, \"Error in sigmoidCrossEntropy: \"), r > 0) {\n      var u = yn(r),\n          l = yn(1),\n          c = yn(.5);\n      a = a.mul(l.sub(u)).add(c.mul(u));\n    }\n\n    var h = function (t, e) {\n      var n = Ze(t, \"labels\", \"sigmoidCrossEntropyWithLogits\"),\n          r = Ze(e, \"logits\", \"sigmoidCrossEntropyWithLogits\");\n      v(n.shape, r.shape, \"Error in sigmoidCrossEntropyWithLogits: \");\n      var o = r.relu(),\n          a = r.mul(n),\n          i = r.abs().neg().exp().log1p();\n      return o.sub(a).add(i);\n    }(a, i);\n\n    return ac(h, s, o);\n  }\n}),\n    pc = pn({\n  softmaxCrossEntropy_: function (t, e, n, r, o) {\n    void 0 === r && (r = 0), void 0 === o && (o = Zl.SUM_BY_NONZERO_WEIGHTS);\n    var a = Ze(t, \"onehotLabels\", \"softmaxCrossEntropy\"),\n        i = Ze(e, \"logits\", \"softmaxCrossEntropy\"),\n        s = null;\n\n    if (null != n && (s = Ze(n, \"weights\", \"softmaxCrossEntropy\")), v(a.shape, i.shape, \"Error in softmaxCrossEntropy: \"), r > 0) {\n      var u = yn(r),\n          l = yn(1),\n          c = yn(a.shape[1]);\n      a = a.mul(l.sub(u)).add(u.div(c));\n    }\n\n    var h = function (t, e, n) {\n      if (void 0 === n && (n = -1), -1 === n && (n = e.rank - 1), n !== e.rank - 1) throw Error(\"Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank \" + e.rank + \" and dim was \" + n);\n      return Vr(function (t, e, r) {\n        var o = e.logSumExp([n], !0),\n            a = e.toFloat().sub(o);\n        return r([t, a]), {\n          value: a.mul(t).neg().sum([n]),\n          gradFunc: function (t, e) {\n            var r = e[0],\n                o = e[1],\n                a = on(t.shape, [n]);\n            return [t.reshape(a).mul(r.toFloat().sub(o.exp())), t.reshape(a).mul(o.exp().sub(r.toFloat()))];\n          }\n        };\n      })(t, e);\n    }(a, i);\n\n    return ac(h, s, o);\n  }\n}),\n    fc = Object.freeze({\n  get Reduction() {\n    return Zl;\n  },\n\n  absoluteDifference: oc,\n  computeWeightedLoss: ac,\n  cosineDistance: ic,\n  hingeLoss: sc,\n  huberLoss: uc,\n  logLoss: lc,\n  meanSquaredError: cc,\n  sigmoidCrossEntropy: hc,\n  softmaxCrossEntropy: pc\n});\n\nfunction dc(t, e) {\n  return void 0 === e && (e = !1), Dt.tidy(function () {\n    if (2 !== t.shape.length) throw new Error(\"qr2d() requires a 2D Tensor, but got a \" + t.shape.length + \"D Tensor.\");\n\n    for (var n = t.shape[0], r = t.shape[1], o = rr(n), a = t.clone(), i = bn([[1]], [1, 1]), s = i.clone(), u = n >= r ? r : n, l = function (t) {\n      var e,\n          u = a,\n          l = s,\n          c = o;\n      e = Dt.tidy(function () {\n        var e = a.slice([t, t], [n - t, 1]),\n            u = e.norm(),\n            l = a.slice([t, t], [1, 1]),\n            c = l.sign().neg(),\n            h = l.sub(c.mul(u)),\n            p = e.div(h);\n        s = 1 === p.shape[0] ? i.clone() : i.concat(p.slice([1, 0], [p.shape[0] - 1, p.shape[1]]), 0);\n        var f = c.matMul(h).div(u).neg(),\n            d = a.slice([t, 0], [n - t, r]),\n            v = f.mul(s);\n        a = 0 === t ? d.sub(v.matMul(s.transpose().matMul(d))) : a.slice([0, 0], [t, r]).concat(d.sub(v.matMul(s.transpose().matMul(d))), 0);\n        var m = o.slice([0, t], [n, o.shape[1] - t]);\n        return o = 0 === t ? m.sub(m.matMul(s).matMul(v.transpose())) : o.slice([0, 0], [n, t]).concat(m.sub(m.matMul(s).matMul(v.transpose())), 1), [s, a, o];\n      }), s = e[0], a = e[1], o = e[2], Le([u, l, c]);\n    }, c = 0; c < u; ++c) l(c);\n\n    return !e && n > r && (o = o.slice([0, 0], [n, r]), a = a.slice([0, 0], [r, r])), [o, a];\n  });\n}\n\nvar vc = pn({\n  gramSchmidt_: function (t) {\n    var e;\n\n    if (Array.isArray(t)) {\n      e = !1, d(null != t && t.length > 0, function () {\n        return \"Gram-Schmidt process: input must not be null, undefined, or empty\";\n      });\n\n      for (var n = t[0].shape[0], r = function (e) {\n        d(t[e].shape[0] === n, function () {\n          return \"Gram-Schmidt: Non-unique lengths found in the input vectors: (\" + t[e].shape[0] + \" vs. \" + n + \")\";\n        });\n      }, o = 1; o < t.length; ++o) r(o);\n    } else e = !0, t = Pn(t, t.shape[0], 0).map(function (t) {\n      return mr(t, [0]);\n    });\n\n    d(t.length <= t[0].shape[0], function () {\n      return \"Gram-Schmidt: Number of vectors (\" + t.length + \") exceeds number of dimensions (\" + t[0].shape[0] + \").\";\n    });\n\n    var a = [],\n        i = t,\n        s = function (t) {\n      a.push(Dt.tidy(function () {\n        var e = i[t];\n        if (t > 0) for (var n = 0; n < t; ++n) {\n          var r = Wu(a[n].mulStrict(e)).mul(a[n]);\n          e = e.sub(r);\n        }\n        return e.div(Ol(e, \"euclidean\"));\n      }));\n    };\n\n    for (o = 0; o < t.length; ++o) s(o);\n\n    return e ? gr(a, 0) : a;\n  }\n}),\n    mc = pn({\n  qr_: function (t, e) {\n    if (void 0 === e && (e = !1), t.rank < 2) throw new Error(\"qr() requires input tensor to have a rank >= 2, but got rank \" + t.rank);\n    if (2 === t.rank) return dc(t, e);\n    var n = t.shape.slice(0, t.shape.length - 2).reduce(function (t, e) {\n      return t * e;\n    }),\n        r = br(t.reshape([n, t.shape[t.shape.length - 2], t.shape[t.shape.length - 1]]), 0),\n        o = [],\n        a = [];\n    return r.forEach(function (t) {\n      var n = dc(t, e),\n          r = n[0],\n          i = n[1];\n      o.push(r), a.push(i);\n    }), [gr(o, 0).reshape(t.shape), gr(a, 0).reshape(t.shape)];\n  }\n}),\n    gc = Object.freeze({\n  gramSchmidt: vc,\n  qr: mc\n});\n\nfunction yc(t, e, n, r, o) {\n  null == r && (r = .5), null == o && (o = Number.NEGATIVE_INFINITY);\n  var a = t.shape[0];\n  return n = Math.min(n, a), d(0 <= r && r <= 1, function () {\n    return \"iouThreshold must be in [0, 1], but was '\" + r + \"'\";\n  }), d(2 === t.rank, function () {\n    return \"boxes must be a 2D tensor, but was of rank '\" + t.rank + \"'\";\n  }), d(4 === t.shape[1], function () {\n    return \"boxes must have 4 columns, but 2nd dimension was \" + t.shape[1];\n  }), d(1 === e.rank, function () {\n    return \"scores must be a 1D tensor\";\n  }), d(e.shape[0] === a, function () {\n    return \"scores has incompatible shape with boxes. Expected \" + a + \", but was \" + e.shape[0];\n  }), {\n    maxOutputSize: n,\n    iouThreshold: r,\n    scoreThreshold: o\n  };\n}\n\nvar xc = pn({\n  resizeBilinear_: function (t, e, n) {\n    void 0 === n && (n = !1);\n    var r = Ze(t, \"images\", \"resizeBilinear\");\n    d(3 === r.rank || 4 === r.rank, function () {\n      return \"Error in resizeBilinear: x must be rank 3 or 4, but got rank \" + r.rank + \".\";\n    }), d(2 === e.length, function () {\n      return \"Error in resizeBilinear: new shape must 2D, but got shape \" + e + \".\";\n    });\n    var o = r,\n        a = !1;\n    3 === r.rank && (a = !0, o = r.as4D(1, r.shape[0], r.shape[1], r.shape[2]));\n    var i = e[0],\n        s = e[1],\n        u = Dt.runKernel(function (t, e) {\n      return e([o]), t.resizeBilinear(o, i, s, n);\n    }, {\n      batchImages: o\n    }, function (t, e) {\n      return {\n        batchImages: function () {\n          return Dt.runKernel(function (r) {\n            return r.resizeBilinearBackprop(t, e[0], n);\n          }, {});\n        }\n      };\n    });\n    return a ? u.as3D(u.shape[1], u.shape[2], u.shape[3]) : u;\n  }\n}),\n    bc = pn({\n  resizeNearestNeighbor_: function (t, e, n) {\n    void 0 === n && (n = !1);\n    var r = Ze(t, \"images\", \"resizeNearestNeighbor\");\n    d(3 === r.rank || 4 === r.rank, function () {\n      return \"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank \" + r.rank + \".\";\n    }), d(2 === e.length, function () {\n      return \"Error in resizeNearestNeighbor: new shape must 2D, but got shape \" + e + \".\";\n    }), d(\"float32\" === r.dtype || \"int32\" === r.dtype, function () {\n      return \"`images` must have `int32` or `float32` as dtype\";\n    });\n    var o = r,\n        a = !1;\n    3 === r.rank && (a = !0, o = r.as4D(1, r.shape[0], r.shape[1], r.shape[2]));\n    var i = e[0],\n        s = e[1],\n        u = Dt.runKernel(function (t, e) {\n      return e([o]), t.resizeNearestNeighbor(o, i, s, n);\n    }, {\n      batchImages: o\n    }, function (t, e) {\n      return {\n        batchImages: function () {\n          return Dt.runKernel(function (r) {\n            return r.resizeNearestNeighborBackprop(t, e[0], n);\n          }, {});\n        }\n      };\n    });\n    return a ? u.as3D(u.shape[1], u.shape[2], u.shape[3]) : u;\n  }\n}),\n    wc = pn({\n  nonMaxSuppression_: function (t, e, n, r, o) {\n    void 0 === r && (r = .5), void 0 === o && (o = Number.NEGATIVE_INFINITY);\n    var a = Ze(t, \"boxes\", \"nonMaxSuppression\"),\n        i = Ze(e, \"scores\", \"nonMaxSuppression\"),\n        s = yc(a, i, n, r, o);\n    return n = s.maxOutputSize, r = s.iouThreshold, o = s.scoreThreshold, Dt.runKernel(function (t) {\n      return t.nonMaxSuppression(a, i, n, r, o);\n    }, {\n      $boxes: a\n    });\n  }\n}),\n    Cc = function (t, e, n, a, i) {\n  return void 0 === a && (a = .5), void 0 === i && (i = Number.NEGATIVE_INFINITY), r(this, void 0, void 0, function () {\n    var r, s, u, l, c, h;\n    return o(this, function (o) {\n      switch (o.label) {\n        case 0:\n          return r = Ze(t, \"boxes\", \"nonMaxSuppressionAsync\"), s = Ze(e, \"scores\", \"nonMaxSuppressionAsync\"), u = yc(r, s, n, a, i), n = u.maxOutputSize, a = u.iouThreshold, i = u.scoreThreshold, [4, r.data()];\n\n        case 1:\n          return l = o.sent(), [4, s.data()];\n\n        case 2:\n          return c = o.sent(), h = mo(l, c, n, a, i), r !== t && r.dispose(), s !== e && s.dispose(), [2, h];\n      }\n    });\n  });\n},\n    Ec = pn({\n  cropAndResize_: function (t, e, n, r, o, a) {\n    var i = Ze(t, \"image\", \"cropAndResize\", \"float32\"),\n        s = Ze(e, \"boxes\", \"cropAndResize\", \"float32\"),\n        u = Ze(n, \"boxInd\", \"cropAndResize\", \"int32\");\n    o = o || \"bilinear\", a = a || 0;\n    var l = s.shape[0];\n    return d(4 === i.rank, function () {\n      return \"Error in cropAndResize: image must be rank 4,but got rank \" + i.rank + \".\";\n    }), d(2 === s.rank && 4 === s.shape[1], function () {\n      return \"Error in cropAndResize: boxes must be have size [\" + l + \",4] but had shape \" + s.shape + \".\";\n    }), d(1 === u.rank && u.shape[0] === l, function () {\n      return \"Error in cropAndResize: boxInd must be have size [\" + l + \"] but had shape \" + s.shape + \".\";\n    }), d(2 === r.length, function () {\n      return \"Error in cropAndResize: cropSize must be of length 2, but got length \" + r.length + \".\";\n    }), d(r[0] >= 1 && r[1] >= 1, function () {\n      return \"cropSize must be atleast [1,1], but was \" + r;\n    }), d(\"bilinear\" === o || \"nearest\" === o, function () {\n      return \"method must be bilinear or nearest, but was \" + o;\n    }), Dt.runKernel(function (t, e) {\n      return t.cropAndResize(i, s, u, r, o, a);\n    }, {\n      $image: i,\n      $boxes: s\n    });\n  }\n}),\n    Rc = Object.freeze({\n  resizeBilinear: xc,\n  resizeNearestNeighbor: bc,\n  nonMaxSuppression: wc,\n  nonMaxSuppressionAsync: Cc,\n  cropAndResize: Ec\n});\n\nvar Ic = pn({\n  matMul_: function (t, e, n, r, o, a) {\n    var i;\n    void 0 === n && (n = !1), void 0 === r && (r = !1), void 0 === a && (a = \"linear\");\n    var s = Ze(t, \"a\", \"fused matMul\"),\n        u = Ze(e, \"b\", \"fused matMul\");\n    i = Rt(s, u), s = i[0], u = i[1];\n    var l = n ? s.shape[s.rank - 2] : s.shape[s.rank - 1],\n        c = r ? u.shape[u.rank - 1] : u.shape[u.rank - 2],\n        h = n ? s.shape[s.rank - 1] : s.shape[s.rank - 2],\n        p = r ? u.shape[u.rank - 2] : u.shape[u.rank - 1],\n        f = s.shape.slice(0, -2),\n        v = u.shape.slice(0, -2),\n        m = y(f),\n        g = y(v);\n    d(s.rank >= 2 && u.rank >= 2 && s.rank === u.rank, function () {\n      return \"Error in fused matMul: inputs must have the same rank of at least 2, got ranks \" + s.rank + \" and \" + u.rank + \".\";\n    }), d(x(f, v), function () {\n      return \"Error in fused matMul: outer dimensions (\" + f + \") and (\" + v + \") of Tensors with shapes \" + s.shape + \" and \" + u.shape + \" must match.\";\n    }), d(l === c, function () {\n      return \"Error in fused matMul: inner shapes (\" + l + \") and (\" + c + \") of Tensors with shapes \" + s.shape + \" and \" + u.shape + \" and transposeA=\" + n + \" and transposeB=\" + r + \" must match.\";\n    });\n    var b,\n        w = s.shape.slice(0, -2).concat([h, p]),\n        C = n ? s.as3D(m, l, h) : s.as3D(m, h, l),\n        E = r ? u.as3D(g, p, c) : u.as3D(g, c, p);\n    null != o && Yr(w, (b = Rt(b = Ze(o, \"bias\", \"fused matMul\"), s)[0]).shape);\n    var R = {\n      $a: C,\n      $b: E\n    };\n    return null != o && (R.$bias = b), Dt.runKernel(function (t, e) {\n      var o = t.fusedBatchMatMul(C, E, n, r, b, a);\n      return e([C, E, o]), o;\n    }, R, function (t, e) {\n      var i,\n          s = e[0],\n          u = e[1],\n          l = e[2];\n      if (null == a || \"linear\" === a) i = t;else {\n        if (\"relu\" !== a) throw new Error(\"Gradient for activation \" + a + \" has not been implemented yet.\");\n        i = t.mul(l.step());\n      }\n      var c = {};\n      return null != o && (c = {\n        $bias: function () {\n          var t = i,\n              e = Xr(b.shape, i.shape);\n          return e.length > 0 && (t = t.sum(e)), t.reshape(b.shape);\n        }\n      }), n || r ? !n && r ? Object.assign({\n        $a: function () {\n          return i.matMul(u, !1, !1);\n        },\n        $b: function () {\n          return i.matMul(s, !0, !1);\n        }\n      }, c) : n && !r ? Object.assign({\n        $a: function () {\n          return u.matMul(i, !1, !0);\n        },\n        $b: function () {\n          return s.matMul(i, !1, !1);\n        }\n      }, c) : Object.assign({\n        $a: function () {\n          return u.matMul(i, !0, !0);\n        },\n        $b: function () {\n          return i.matMul(s, !0, !0);\n        }\n      }, c) : Object.assign({\n        $a: function () {\n          return i.matMul(u, !1, !0);\n        },\n        $b: function () {\n          return s.matMul(i, !0, !1);\n        }\n      }, c);\n    }).reshape(w);\n  }\n}),\n    Sc = Object.freeze({\n  matMul: Ic\n}),\n    Nc = Object.freeze({\n  image: Rc,\n  linalg: gc,\n  losses: fc,\n  spectral: Kl,\n  fused: Sc,\n  signal: rc,\n  op: pn,\n  batchNormalization2d: js,\n  batchNormalization3d: Ks,\n  batchNormalization4d: Xs,\n  batchNormalization: Ys,\n  batchNorm: Qs,\n  batchNorm2d: Js,\n  batchNorm3d: Zs,\n  batchNorm4d: tu,\n  complex: fn,\n  real: dn,\n  imag: vn,\n  concat: _n,\n  concat1d: On,\n  concat2d: Mn,\n  concat3d: Fn,\n  concat4d: Bn,\n  split: Pn,\n  conv1d: ou,\n  conv2d: au,\n  conv3d: iu,\n  conv2dDerFilter: su,\n  depthwiseConv2d: uu,\n  separableConv2d: lu,\n  conv2dTranspose: cu,\n  matMul: hu,\n  dot: pu,\n  outerProduct: fu,\n  reverse: du,\n  reverse1d: vu,\n  reverse2d: mu,\n  reverse3d: gu,\n  reverse4d: yu,\n  maxPool: wu,\n  avgPool: Cu,\n  pool: Eu,\n  slice: Ru,\n  slice1d: Iu,\n  slice2d: Su,\n  slice3d: Nu,\n  slice4d: ku,\n  abs: is,\n  acos: ss,\n  acosh: us,\n  asin: ls,\n  asinh: cs,\n  atan: hs,\n  atanh: ps,\n  ceil: fs,\n  clipByValue: ds,\n  cos: vs,\n  cosh: ms,\n  erf: gs,\n  exp: ys,\n  expm1: xs,\n  floor: bs,\n  log: ws,\n  log1p: Cs,\n  logSigmoid: Es,\n  neg: Rs,\n  reciprocal: Is,\n  round: Ss,\n  rsqrt: Ns,\n  sigmoid: ks,\n  sign: As,\n  isNaN: Ts,\n  isInf: Ds,\n  isFinite: _s,\n  sin: Os,\n  sinh: Ms,\n  softplus: Fs,\n  sqrt: Bs,\n  square: Ps,\n  step: Ls,\n  tan: Ws,\n  tanh: Us,\n  all: Tu,\n  any: Du,\n  argMax: _u,\n  argMin: Ou,\n  logSumExp: Mu,\n  max: Fu,\n  mean: Bu,\n  min: Pu,\n  moments: Lu,\n  sum: Wu,\n  prod: Uu,\n  equal: zu,\n  equalStrict: Vu,\n  greater: Gu,\n  greaterEqual: qu,\n  greaterEqualStrict: Hu,\n  greaterStrict: $u,\n  less: ju,\n  lessEqual: Ku,\n  lessEqualStrict: Xu,\n  lessStrict: Yu,\n  notEqual: Qu,\n  notEqualStrict: Ju,\n  add: Zu,\n  addN: tl,\n  addStrict: el,\n  atan2: nl,\n  div: rl,\n  divStrict: ol,\n  floorDiv: al,\n  maximum: il,\n  maximumStrict: sl,\n  minimum: ul,\n  minimumStrict: ll,\n  mod: cl,\n  modStrict: hl,\n  mul: pl,\n  mulStrict: fl,\n  pow: dl,\n  powStrict: vl,\n  squaredDifference: ml,\n  squaredDifferenceStrict: gl,\n  sub: yl,\n  subStrict: xl,\n  elu: Sl,\n  leakyRelu: Nl,\n  prelu: kl,\n  relu: Al,\n  selu: Tl,\n  logicalAnd: bl,\n  logicalNot: wl,\n  logicalOr: Cl,\n  logicalXor: El,\n  where: Rl,\n  whereAsync: Il,\n  buffer: Xn,\n  print: Yn,\n  batchToSpaceND: Qn,\n  cast: Jn,\n  clone: Zn,\n  cumsum: tr,\n  depthToSpace: er,\n  expandDims: nr,\n  eye: rr,\n  multinomial: or,\n  oneHot: ar,\n  pad: ir,\n  pad1d: sr,\n  pad2d: ur,\n  pad3d: lr,\n  pad4d: cr,\n  rand: hr,\n  randomNormal: pr,\n  randomUniform: fr,\n  reshape: dr,\n  spaceToBatchND: vr,\n  squeeze: mr,\n  stack: gr,\n  tile: yr,\n  truncatedNormal: xr,\n  unstack: br,\n  setdiff1dAsync: wr,\n  fill: Nn,\n  linspace: kn,\n  ones: In,\n  range: An,\n  scalar: yn,\n  tensor: mn,\n  tensor1d: xn,\n  tensor2d: bn,\n  tensor3d: wn,\n  tensor4d: Cn,\n  tensor5d: En,\n  tensor6d: Rn,\n  zeros: Sn,\n  onesLike: Tn,\n  zerosLike: Dn,\n  transpose: Dl,\n  softmax: qr,\n  logSoftmax: Hr,\n  localResponseNormalization: _l,\n  norm: Ol,\n  gather: Bl,\n  unsortedSegmentSum: Pl,\n  basicLSTMCell: Ll,\n  multiRNNCell: Wl,\n  movingAverage: Ul,\n  stridedSlice: zl,\n  topk: Vl,\n  scatterND: Gl,\n  fft: ql,\n  ifft: Hl,\n  rfft: $l,\n  irfft: jl,\n  sparseToDense: Xl,\n  gatherND: Yl,\n  dropout: Ql,\n  hannWindow: tc,\n  hammingWindow: ec,\n  frame: nc\n});\n\nvar kc = function () {\n  function t() {\n    if (this.blockSize = 48, this.firstUse = !0, s.get(\"IS_BROWSER\")) {\n      var t = \"undefined\" != typeof OffscreenCanvas ? new OffscreenCanvas(300, 150) : \"undefined\" != typeof document ? document.createElement(\"canvas\") : null;\n      null !== t && (this.fromPixels2DContext = t.getContext(\"2d\"));\n    }\n\n    this.data = new $r(this, Dt);\n  }\n\n  return t.prototype.register = function (t, e, n) {\n    if (this.firstUse && (this.firstUse = !1, s.get(\"IS_NODE\") && Ye(\"\\n============================\\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\\n============================\\n\")), this.data.has(t)) throw new Error(\"Data buffer is already registered\");\n    this.data.set(t, {\n      dtype: n\n    });\n  }, t.prototype.write = function (t, e) {\n    if (null == e) throw new Error(\"MathBackendCPU.write(): values can not be null\");\n    this.data.get(t).values = e;\n  }, t.prototype.fromPixels = function (t, e) {\n    if (null == t) throw new Error(\"pixels passed to tf.browser.fromPixels() can not be null\");\n    var n,\n        r,\n        o = t.data instanceof Uint8Array,\n        a = \"undefined\" != typeof ImageData && t instanceof ImageData,\n        i = \"undefined\" != typeof HTMLVideoElement && t instanceof HTMLVideoElement,\n        u = \"undefined\" != typeof HTMLImageElement && t instanceof HTMLImageElement;\n    if (s.get(\"IS_NODE\") && null == t.getContext) throw new Error(\"When running in node, pixels must be an HTMLCanvasElement like the one returned by the `canvas` npm package\");\n    if (null != t.getContext) n = t.getContext(\"2d\").getImageData(0, 0, t.width, t.height).data;else if (a || o) n = t.data;else {\n      if (!u && !i) throw new Error(\"pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData or {data: Uint32Array, width: number, height: number}, but was \" + t.constructor.name);\n      if (null == this.fromPixels2DContext) throw new Error(\"Can't read pixels from HTMLImageElement outside the browser.\");\n      this.fromPixels2DContext.canvas.width = t.width, this.fromPixels2DContext.canvas.height = t.height, this.fromPixels2DContext.drawImage(t, 0, 0, t.width, t.height), n = this.fromPixels2DContext.getImageData(0, 0, t.width, t.height).data;\n    }\n    if (4 === e) r = new Int32Array(n);else {\n      var l = t.width * t.height;\n      r = new Int32Array(l * e);\n\n      for (var c = 0; c < l; c++) for (var h = 0; h < e; ++h) r[c * e + h] = n[4 * c + h];\n    }\n    return wn(r, [t.height, t.width, e], \"int32\");\n  }, t.prototype.read = function (t) {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (e) {\n        return [2, this.readSync(t)];\n      });\n    });\n  }, t.prototype.readSync = function (t) {\n    var e = this.data.get(t),\n        n = e.dtype,\n        r = e.complexTensors;\n    return \"complex64\" === n ? ho(this.readSync(r.real.dataId), this.readSync(r.imag.dataId)) : this.data.get(t).values;\n  }, t.prototype.bufferSync = function (t) {\n    var e = this.readSync(t.dataId),\n        n = e;\n    if (\"string\" === t.dtype) try {\n      n = e.map(function (t) {\n        return J(t);\n      });\n    } catch (t) {\n      throw new Error(\"Failed to decode encoded string bytes into utf-8\");\n    }\n    return Xn(t.shape, t.dtype, n);\n  }, t.prototype.disposeData = function (t) {\n    if (this.data.has(t)) {\n      var e = this.data.get(t).complexTensors;\n      null != e && (e.real.dispose(), e.imag.dispose()), this.data.delete(t);\n    }\n  }, t.prototype.time = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e;\n      return o(this, function (n) {\n        return e = K(), t(), [2, {\n          kernelMs: K() - e\n        }];\n      });\n    });\n  }, t.prototype.memory = function () {\n    return {\n      unreliable: !0,\n      reasons: [\"The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less.\"]\n    };\n  }, t.prototype.complex = function (t, e) {\n    var n = ft.make(t.shape, {}, \"complex64\");\n    return this.data.get(n.dataId).complexTensors = {\n      real: Dt.keep(t.clone()),\n      imag: Dt.keep(e.clone())\n    }, n;\n  }, t.prototype.real = function (t) {\n    return this.data.get(t.dataId).complexTensors.real.clone();\n  }, t.prototype.imag = function (t) {\n    return this.data.get(t.dataId).complexTensors.imag.clone();\n  }, t.prototype.assertNotComplex = function (t, e) {\n    Array.isArray(t) || (t = [t]), t.forEach(function (t) {\n      null != t && d(\"complex64\" !== t.dtype, function () {\n        return e + \" does not support complex64 tensors.\";\n      });\n    });\n  }, t.prototype.slice = function (t, e, n) {\n    if (this.assertNotComplex(t, \"slice\"), Fr(t.shape, e, n)) {\n      var r = Br(e, t.strides),\n          o = y(n);\n      return mn(this.readSync(t.dataId).subarray(r, r + o), n, t.dtype);\n    }\n\n    for (var a = Xn(n, t.dtype), i = this.bufferSync(t), s = 0; s < a.size; ++s) {\n      var u = a.indexToLoc(s).map(function (t, n) {\n        return t + e[n];\n      });\n      a.values[s] = i.get.apply(i, u);\n    }\n\n    return a.toTensor();\n  }, t.prototype.stridedSlice = function (t, e, n, r, o, a, i, s, u) {\n    this.assertNotComplex(t, \"stridedSlice\");\n\n    var l = _r(t.shape, e, n, r, o, a, i, s, u),\n        c = l[0],\n        h = l[1],\n        p = l[2],\n        f = h.filter(function (t, e) {\n      return -1 === p.indexOf(e);\n    });\n\n    if (f.some(function (t) {\n      return 0 === t;\n    })) return mn([], f);\n\n    for (var d = Xn(h, t.dtype), v = this.bufferSync(t), m = 0; m < d.size; m++) {\n      for (var g = d.indexToLoc(m), y = new Array(g.length), x = 0; x < y.length; x++) y[x] = g[x] * r[x] + c[x];\n\n      d.set.apply(d, [v.get.apply(v, y)].concat(g));\n    }\n\n    return d.toTensor().reshape(f);\n  }, t.prototype.unstack = function (t, e) {\n    for (var n = t.shape[e], r = new Array(t.rank - 1), o = 0, a = 0; a < t.rank; a++) a !== e && (r[o++] = t.shape[a]);\n\n    var i = new Array(t.rank).fill(0),\n        s = t.shape.slice();\n    s[e] = 1;\n    var u = new Array(n);\n\n    for (a = 0; a < u.length; a++) i[e] = a, u[a] = this.slice(t, i, s).reshape(r);\n\n    return u;\n  }, t.prototype.reverse = function (t, e) {\n    this.assertNotComplex(t, \"reverse\");\n\n    for (var n = Xn(t.shape, t.dtype), r = this.bufferSync(t), o = function (o) {\n      var a = n.indexToLoc(o),\n          i = a.slice();\n      e.forEach(function (e) {\n        return i[e] = t.shape[e] - 1 - i[e];\n      }), n.set.apply(n, [r.get.apply(r, i)].concat(a));\n    }, a = 0; a < n.size; a++) o(a);\n\n    return n.toTensor();\n  }, t.prototype.concat = function (t, e) {\n    var n = this;\n    this.assertNotComplex(t, \"concat\");\n    var r = t.map(function (t) {\n      var n = y(t.shape.slice(e));\n      return t.as2D(-1, n);\n    }),\n        o = hn(r.map(function (t) {\n      return t.shape;\n    }), 1),\n        a = Xn(o, t[0].dtype).values;\n\n    if (1 === r[0].shape[0]) {\n      var i = 0;\n      r.forEach(function (t) {\n        a.set(n.readSync(t.dataId), i), i += t.size;\n      });\n    } else {\n      var s = 0;\n      r.forEach(function (t) {\n        for (var e = n.readSync(t.dataId), r = 0, i = 0; i < t.shape[0]; ++i) for (var u = i * o[1] + s, l = 0; l < t.shape[1]; ++l) a[u + l] = e[r++];\n\n        s += t.shape[1];\n      });\n    }\n\n    var u = hn(t.map(function (t) {\n      return t.shape;\n    }), e);\n    return mn(a, u, t[0].dtype);\n  }, t.prototype.neg = function (t) {\n    return this.assertNotComplex(t, \"neg\"), this.multiply(yn(-1), t);\n  }, t.prototype.add = function (t, e) {\n    return \"complex64\" === t.dtype || \"complex64\" === e.dtype ? this.broadcastedBinaryComplexOp(t.cast(\"complex64\"), e.cast(\"complex64\"), function (t, e, n, r) {\n      return {\n        real: t + n,\n        imag: e + r\n      };\n    }) : this.broadcastedBinaryOp(t, e, Ct(t.dtype, e.dtype), function (t, e) {\n      return t + e;\n    });\n  }, t.prototype.addN = function (t) {\n    var e = this;\n    this.assertNotComplex(t, \"addN\");\n\n    for (var n = t.map(function (t) {\n      return e.readSync(t.dataId);\n    }), r = Xn(t[0].shape, t[0].dtype), o = r.values, a = 0; a < t.length; a++) for (var i = n[a], s = 0; s < o.length; s++) o[s] += i[s];\n\n    return r.toTensor();\n  }, t.prototype.subtract = function (t, e) {\n    return \"complex64\" === t.dtype || \"complex64\" === e.dtype ? this.broadcastedBinaryComplexOp(t.cast(\"complex64\"), e.cast(\"complex64\"), function (t, e, n, r) {\n      return {\n        real: t - n,\n        imag: e - r\n      };\n    }) : this.broadcastedBinaryOp(t, e, Ct(t.dtype, e.dtype), function (t, e) {\n      return t - e;\n    });\n  }, t.prototype.pow = function (t, e) {\n    return this.assertNotComplex([t, e], \"pow\"), this.broadcastedBinaryOp(t, e, t.dtype, function (t, e) {\n      return Math.pow(t, e);\n    });\n  }, t.prototype.batchMatMul = function (t, e, n, r) {\n    this.assertNotComplex([t, e], \"matMul\");\n\n    for (var o = n ? t.shape[1] : t.shape[2], a = n ? t.shape[2] : t.shape[1], i = r ? e.shape[1] : e.shape[2], s = t.shape[0], u = this.readSync(t.dataId), l = this.readSync(e.dataId), c = n ? [t.strides[0], 1, t.strides[1]] : [t.strides[0], t.strides[1], 1], h = c[0], p = c[1], f = c[2], d = r ? [1, e.strides[1], e.strides[0]] : [e.strides[1], 1, e.strides[0]], v = d[0], m = d[1], g = d[2], y = a * i, x = Xn([s, a, i], t.dtype), b = x.values, w = this.blockSize, C = 0; C < s; C++) for (var E = 0; E < a; E += w) for (var R = 0; R < i; R += w) for (var I = 0; I < o; I += w) for (var S = Math.min(E + w, a), N = Math.min(R + w, i), k = Math.min(I + w, o), A = E; A < S; A++) for (var T = R; T < N; T++) {\n      for (var D = 0, _ = I; _ < k; _++) D += u[C * h + A * p + _ * f] * l[_ * v + T * m + C * g];\n\n      b[C * y + (A * i + T)] += D;\n    }\n\n    return x.toTensor();\n  }, t.prototype.fusedBatchMatMul = function (t, e, n, r, o, a) {\n    var i = this.batchMatMul(t, e, n, r);\n    return o && (i = this.add(i, o)), a && (i = function (t, e, n) {\n      if (\"linear\" === e) return t.linear(n);\n      if (\"relu\" === e) return t.relu(n);\n      throw new Error(\"Activation \" + e + \" has not been implemented for the CPU backend.\");\n    }(this, a, i)), i;\n  }, t.prototype.multiply = function (t, e) {\n    return \"complex64\" === t.dtype || \"complex64\" === e.dtype ? this.broadcastedBinaryComplexOp(t.cast(\"complex64\"), e.cast(\"complex64\"), function (t, e, n, r) {\n      return {\n        real: t * n - e * r,\n        imag: t * r + e * n\n      };\n    }) : this.broadcastedBinaryOp(t, e, Ct(t.dtype, e.dtype), function (t, e) {\n      return t * e;\n    });\n  }, t.prototype.realDivide = function (t, e) {\n    this.assertNotComplex([t, e], \"realDivide\");\n    return this.broadcastedBinaryOp(t, e, \"float32\", function (t, e) {\n      return t / e;\n    });\n  }, t.prototype.floorDiv = function (t, e) {\n    this.assertNotComplex([t, e], \"floorDiv\");\n    return this.broadcastedBinaryOp(t, e, \"int32\", function (t, e) {\n      return Math.floor(t / e);\n    });\n  }, t.prototype.sum = function (t, e) {\n    this.assertNotComplex(t, \"sum\"), an(\"sum\", e, t.rank);\n\n    for (var n = rn(t.shape, e), r = n[0], o = n[1], a = Sn(r, Ct(t.dtype, \"int32\")), i = y(o), s = this.readSync(a.dataId), u = this.readSync(t.dataId), l = 0; l < s.length; ++l) {\n      for (var c = l * i, h = 0, p = 0; p < i; ++p) h += u[c + p];\n\n      s[l] = h;\n    }\n\n    return a;\n  }, t.prototype.prod = function (t, e) {\n    this.assertNotComplex(t, \"sum\");\n\n    for (var n = rn(t.shape, e), r = n[0], o = n[1], a = Sn(r, Ct(t.dtype, \"int32\")), i = y(o), s = this.readSync(a.dataId), u = this.readSync(t.dataId), l = 0; l < s.length; ++l) {\n      for (var c = l * i, h = 1, p = 0; p < i; ++p) h *= u[c + p];\n\n      s[l] = h;\n    }\n\n    return a;\n  }, t.prototype.unsortedSegmentSum = function (t, e, n) {\n    this.assertNotComplex(t, \"unsortedSegmentSum\");\n\n    for (var r = [], o = t.rank - e.rank, a = 0; a < o; ++a) e = e.expandDims(a + 1);\n\n    for (a = 0; a < n; ++a) {\n      var i = yn(a, \"int32\"),\n          s = zu(i, e).asType(\"float32\").mul(t).sum(0);\n      r.push(s);\n    }\n\n    return gr(r);\n  }, t.prototype.argMin = function (t, e) {\n    this.assertNotComplex(t, \"argMin\");\n    var n = [e];\n    an(\"argMin\", n, t.rank);\n\n    for (var r = rn(t.shape, n), o = r[0], a = r[1], i = Sn(o, \"int32\"), s = y(a), u = this.readSync(i.dataId), l = this.readSync(t.dataId), c = 0; c < u.length; ++c) {\n      for (var h = c * s, p = l[h], f = 0, d = 0; d < s; ++d) {\n        var v = l[h + d];\n        v < p && (p = v, f = d);\n      }\n\n      u[c] = f;\n    }\n\n    return i;\n  }, t.prototype.argMax = function (t, e) {\n    this.assertNotComplex(t, \"argMax\");\n    var n = [e];\n    an(\"argMax\", n, t.rank);\n\n    for (var r = rn(t.shape, n), o = r[0], a = r[1], i = Sn(o, \"int32\"), s = y(a), u = this.readSync(i.dataId), l = this.readSync(t.dataId), c = 0; c < u.length; ++c) {\n      for (var h = c * s, p = l[h], f = 0, d = 0; d < s; ++d) {\n        var v = l[h + d];\n        v > p && (p = v, f = d);\n      }\n\n      u[c] = f;\n    }\n\n    return i;\n  }, t.prototype.cumsum = function (t, e, n, r) {\n    if (this.assertNotComplex(t, \"cumsum\"), e !== t.rank - 1) throw new Error(\"backend.cumsum in CPU expects an inner-most axis=\" + (t.rank - 1) + \" but got axis=\" + e);\n\n    for (var o = Ct(t.dtype, \"int32\"), a = Sn(t.shape, o), i = this.readSync(a.dataId), s = this.readSync(t.dataId), u = t.shape[t.rank - 1], l = r ? function (t, e) {\n      return t + u - e - 1;\n    } : function (t, e) {\n      return t + e;\n    }, c = 0; c < s.length; c += u) for (var h = 0; h < u; h++) {\n      var p = l(c, h);\n      if (0 === h) i[p] = n ? 0 : s[p];else {\n        var f = l(c, h - 1);\n        i[p] = n ? s[f] + i[f] : s[p] + i[f];\n      }\n    }\n\n    return a;\n  }, t.prototype.equal = function (t, e) {\n    return this.assertNotComplex([t, e], \"equal\"), this.broadcastedBinaryOp(t, e, \"bool\", function (t, e) {\n      return t === e ? 1 : 0;\n    });\n  }, t.prototype.notEqual = function (t, e) {\n    return this.assertNotComplex([t, e], \"notEqual\"), this.broadcastedBinaryOp(t, e, \"bool\", function (t, e) {\n      return t !== e ? 1 : 0;\n    });\n  }, t.prototype.less = function (t, e) {\n    return this.assertNotComplex([t, e], \"less\"), this.broadcastedBinaryOp(t, e, \"bool\", function (t, e) {\n      return t < e ? 1 : 0;\n    });\n  }, t.prototype.lessEqual = function (t, e) {\n    return this.assertNotComplex([t, e], \"lessEqual\"), this.broadcastedBinaryOp(t, e, \"bool\", function (t, e) {\n      return t <= e ? 1 : 0;\n    });\n  }, t.prototype.greater = function (t, e) {\n    return this.assertNotComplex([t, e], \"greater\"), this.broadcastedBinaryOp(t, e, \"bool\", function (t, e) {\n      return t > e ? 1 : 0;\n    });\n  }, t.prototype.greaterEqual = function (t, e) {\n    return this.assertNotComplex([t, e], \"greaterEqual\"), this.broadcastedBinaryOp(t, e, \"bool\", function (t, e) {\n      return t >= e ? 1 : 0;\n    });\n  }, t.prototype.logicalNot = function (t) {\n    this.assertNotComplex(t, \"logicalNot\");\n\n    for (var e = this.readSync(t.dataId), n = new Uint8Array(e.length), r = 0; r < e.length; ++r) n[r] = e[r] ? 0 : 1;\n\n    return ft.make(t.shape, {\n      values: n\n    }, \"bool\");\n  }, t.prototype.logicalAnd = function (t, e) {\n    return this.assertNotComplex([t, e], \"logicalAnd\"), this.broadcastedBinaryOp(t, e, \"bool\", function (t, e) {\n      return t && e;\n    });\n  }, t.prototype.logicalOr = function (t, e) {\n    return this.assertNotComplex([t, e], \"logicalOr\"), this.broadcastedBinaryOp(t, e, \"bool\", function (t, e) {\n      return t || e;\n    });\n  }, t.prototype.select = function (t, e, n) {\n    this.assertNotComplex([t, e, n], \"select\");\n\n    for (var r = this.readSync(t.dataId), o = this.readSync(e.dataId), a = this.readSync(n.dataId), i = Sn(e.shape, Ct(e.dtype, n.dtype)), s = this.readSync(i.dataId), u = 0, l = 0 === t.rank || t.rank > 1 || 1 === e.rank ? 1 : e.shape[1], c = 0; c < r.length; c++) for (var h = 0; h < l; h++) 1 === r[c] ? s[u++] = o[c] : s[u++] = a[c];\n\n    return i;\n  }, t.prototype.where = function (t) {\n    this.assertNotComplex([t], \"where\");\n    var e = this.readSync(t.dataId);\n    return wo(t.shape, e);\n  }, t.prototype.topk = function (t, e, n) {\n    return this.assertNotComplex(t, \"topk\"), bo(this.readSync(t.dataId), t.shape, t.dtype, e);\n  }, t.prototype.min = function (t, e) {\n    this.assertNotComplex(t, \"min\"), an(\"min\", e, t.rank);\n\n    for (var n = rn(t.shape, e), r = n[0], o = n[1], a = Sn(r, t.dtype), i = y(o), s = this.readSync(a.dataId), u = this.readSync(t.dataId), l = 0; l < s.length; ++l) {\n      for (var c = l * i, h = u[c], p = 0; p < i; ++p) {\n        var f = u[c + p];\n        f < h && (h = f);\n      }\n\n      s[l] = h;\n    }\n\n    return a;\n  }, t.prototype.minimum = function (t, e) {\n    return this.assertNotComplex([t, e], \"minimum\"), this.broadcastedBinaryOp(t, e, t.dtype, function (t, e) {\n      return Math.min(t, e);\n    });\n  }, t.prototype.mod = function (t, e) {\n    return this.assertNotComplex([t, e], \"mod\"), this.broadcastedBinaryOp(t, e, t.dtype, function (t, e) {\n      var n = t % e;\n      return t < 0 && e < 0 || t >= 0 && e >= 0 ? n : (n + e) % e;\n    });\n  }, t.prototype.max = function (t, e) {\n    this.assertNotComplex(t, \"max\"), an(\"max\", e, t.rank);\n\n    for (var n = rn(t.shape, e), r = n[0], o = n[1], a = Sn(r, t.dtype), i = y(o), s = this.readSync(a.dataId), u = this.readSync(t.dataId), l = 0; l < s.length; ++l) {\n      for (var c = l * i, h = u[c], p = 0; p < i; ++p) {\n        var f = u[c + p];\n        f > h && (h = f);\n      }\n\n      s[l] = h;\n    }\n\n    return a;\n  }, t.prototype.maximum = function (t, e) {\n    return this.assertNotComplex([t, e], \"maximum\"), this.broadcastedBinaryOp(t, e, t.dtype, function (t, e) {\n      return Math.max(t, e);\n    });\n  }, t.prototype.all = function (t, e) {\n    this.assertNotComplex(t, \"all\"), an(\"all\", e, t.rank);\n\n    for (var n = rn(t.shape, e), r = n[0], o = n[1], a = Sn(r, t.dtype), i = y(o), s = this.readSync(a.dataId), u = this.readSync(t.dataId), l = 0; l < s.length; ++l) {\n      for (var c = l * i, h = u[c], p = 0; p < i; ++p) {\n        var f = u[c + p];\n        h = h && f;\n      }\n\n      s[l] = h;\n    }\n\n    return a;\n  }, t.prototype.any = function (t, e) {\n    this.assertNotComplex(t, \"any\"), an(\"any\", e, t.rank);\n\n    for (var n = rn(t.shape, e), r = n[0], o = n[1], a = Sn(r, t.dtype), i = y(o), s = this.readSync(a.dataId), u = this.readSync(t.dataId), l = 0; l < s.length; ++l) {\n      for (var c = l * i, h = u[c], p = 0; p < i; ++p) {\n        var f = u[c + p];\n        h = h || f;\n      }\n\n      s[l] = h;\n    }\n\n    return a;\n  }, t.prototype.squaredDifference = function (t, e) {\n    return this.assertNotComplex([t, e], \"squaredDifference\"), this.broadcastedBinaryOp(t, e, t.dtype, function (t, e) {\n      var n = t - e;\n      return n * n;\n    });\n  }, t.prototype.ceil = function (t) {\n    this.assertNotComplex(t, \"ceil\");\n\n    for (var e = this.readSync(t.dataId), n = new Float32Array(e.length), r = 0; r < e.length; ++r) n[r] = Math.ceil(e[r]);\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.floor = function (t) {\n    this.assertNotComplex(t, \"floor\");\n\n    for (var e = this.readSync(t.dataId), n = new Float32Array(e.length), r = 0; r < e.length; ++r) n[r] = Math.floor(e[r]);\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.sign = function (t) {\n    this.assertNotComplex(t, \"x\");\n\n    for (var e = this.readSync(t.dataId), n = new Float32Array(e.length), r = 0; r < e.length; ++r) e[r] < 0 ? n[r] = -1 : e[r] > 0 ? n[r] = 1 : n[r] = 0;\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.isNaN = function (t) {\n    this.assertNotComplex(t, \"x\");\n\n    for (var e = this.readSync(t.dataId), n = new Uint8Array(e.length), r = 0; r < e.length; ++r) Number.isNaN(e[r]) && (n[r] = 1);\n\n    return ft.make(t.shape, {\n      values: n\n    }, \"bool\");\n  }, t.prototype.isInf = function (t) {\n    this.assertNotComplex(t, \"x\");\n\n    for (var e = this.readSync(t.dataId), n = new Uint8Array(e.length), r = 0; r < e.length; ++r) Math.abs(e[r]) === 1 / 0 && (n[r] = 1);\n\n    return ft.make(t.shape, {\n      values: n\n    }, \"bool\");\n  }, t.prototype.isFinite = function (t) {\n    this.assertNotComplex(t, \"x\");\n\n    for (var e = this.readSync(t.dataId), n = new Uint8Array(e.length), r = 0; r < e.length; ++r) Number.isFinite(e[r]) && (n[r] = 1);\n\n    return ft.make(t.shape, {\n      values: n\n    }, \"bool\");\n  }, t.prototype.round = function (t) {\n    this.assertNotComplex(t, \"round\");\n\n    for (var e = this.readSync(t.dataId), n = new Float32Array(e.length), r = 0; r < e.length; ++r) {\n      var o = Math.floor(e[r]);\n      e[r] - o < .5 ? n[r] = Math.floor(e[r]) : e[r] - o > .5 ? n[r] = Math.ceil(e[r]) : n[r] = o % 2 == 0 ? o : o + 1;\n    }\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.exp = function (t) {\n    this.assertNotComplex(t, \"exp\");\n\n    for (var e = this.readSync(t.dataId), n = new Float32Array(e.length), r = 0; r < e.length; ++r) n[r] = Math.exp(e[r]);\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.expm1 = function (t) {\n    this.assertNotComplex(t, \"expm1\");\n\n    for (var e = this.readSync(t.dataId), n = new Float32Array(e.length), r = 0; r < e.length; ++r) n[r] = Math.expm1(e[r]);\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.log = function (t) {\n    this.assertNotComplex(t, \"log\");\n\n    for (var e = this.readSync(t.dataId), n = new Float32Array(e.length), r = 0; r < e.length; ++r) {\n      var o = e[r];\n      n[r] = Math.log(o);\n    }\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.log1p = function (t) {\n    this.assertNotComplex(t, \"log1p\");\n\n    for (var e = this.readSync(t.dataId), n = new Float32Array(e.length), r = 0; r < e.length; ++r) {\n      var o = e[r];\n      n[r] = Math.log1p(o);\n    }\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.sqrt = function (t) {\n    this.assertNotComplex(t, \"sqrt\");\n\n    for (var e = this.readSync(t.dataId), n = new Float32Array(e.length), r = 0; r < e.length; ++r) {\n      var o = e[r];\n      n[r] = Math.sqrt(o);\n    }\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.rsqrt = function (t) {\n    this.assertNotComplex(t, \"rsqrt\");\n\n    for (var e = this.readSync(t.dataId), n = new Float32Array(e.length), r = 0; r < e.length; ++r) {\n      var o = e[r];\n      n[r] = 1 / Math.sqrt(o);\n    }\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.square = function (t) {\n    this.assertNotComplex(t, \"square\");\n\n    for (var e = this.readSync(t.dataId), n = new Float32Array(e.length), r = 0; r < e.length; ++r) {\n      var o = e[r];\n      n[r] = o * o;\n    }\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.reciprocal = function (t) {\n    this.assertNotComplex(t, \"reciprocal\");\n\n    for (var e = this.readSync(t.dataId), n = new Float32Array(e.length), r = 0; r < e.length; ++r) n[r] = 1 / e[r];\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.linear = function (t) {\n    return t;\n  }, t.prototype.relu = function (t) {\n    this.assertNotComplex(t, \"relu\");\n\n    for (var e = Sn(t.shape, t.dtype), n = this.readSync(e.dataId), r = this.readSync(t.dataId), o = 0; o < r.length; ++o) n[o] = Math.max(0, r[o]);\n\n    return e;\n  }, t.prototype.prelu = function (t, e) {\n    return this.assertNotComplex([t, e], \"prelu\"), this.broadcastedBinaryOp(t, e, t.dtype, function (t, e) {\n      return t < 0 ? e * t : t;\n    });\n  }, t.prototype.elu = function (t) {\n    this.assertNotComplex(t, \"elu\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) {\n      var o = n[r];\n      e[r] = o >= 0 ? o : Math.exp(o) - 1;\n    }\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.eluDer = function (t, e) {\n    this.assertNotComplex([t, e], \"eluDer\");\n\n    for (var n = new Float32Array(e.size), r = this.readSync(e.dataId), o = this.readSync(t.dataId), a = 0; a < r.length; ++a) {\n      var i = r[a];\n      n[a] = i >= 1 ? o[a] : o[a] * (i + 1);\n    }\n\n    return ft.make(e.shape, {\n      values: n\n    });\n  }, t.prototype.selu = function (t) {\n    this.assertNotComplex(t, \"selu\");\n\n    for (var e = Ui, n = zi, r = new Float32Array(t.size), o = this.readSync(t.dataId), a = 0; a < o.length; ++a) {\n      var i = o[a];\n      r[a] = i >= 0 ? n * i : e * (Math.exp(i) - 1);\n    }\n\n    return ft.make(t.shape, {\n      values: r\n    });\n  }, t.prototype.clip = function (t, e, n) {\n    this.assertNotComplex(t, \"clip\");\n\n    for (var r = new Float32Array(t.size), o = this.readSync(t.dataId), a = 0; a < o.length; ++a) {\n      var i = o[a];\n      r[a] = i > n ? n : i < e ? e : i;\n    }\n\n    return ft.make(t.shape, {\n      values: r\n    });\n  }, t.prototype.abs = function (t) {\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = Math.abs(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.complexAbs = function (t) {\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < t.size; ++r) {\n      var o = n[2 * r],\n          a = n[2 * r + 1];\n      e[r] = Math.hypot(o, a);\n    }\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.int = function (t) {\n    this.assertNotComplex(t, \"int\");\n\n    for (var e = new Int32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = n[r];\n\n    return ft.make(t.shape, {\n      values: e\n    }, \"int32\");\n  }, t.prototype.sigmoid = function (t) {\n    this.assertNotComplex(t, \"sigmoid\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = 1 / (1 + Math.exp(-n[r]));\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.softplus = function (t) {\n    this.assertNotComplex(t, \"softplus\");\n\n    for (var e = Math.log(1.1920928955078125e-7) + 2, n = new Float32Array(t.size), r = this.readSync(t.dataId), o = 0; o < r.length; ++o) {\n      var a = r[o] > -e,\n          i = r[o] < e,\n          s = Math.exp(r[o]),\n          u = void 0;\n      u = i ? s : a ? r[o] : Math.log(1 + s), n[o] = u;\n    }\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.sin = function (t) {\n    this.assertNotComplex(t, \"sin\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = Math.sin(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.cos = function (t) {\n    this.assertNotComplex(t, \"cos\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = Math.cos(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.tan = function (t) {\n    this.assertNotComplex(t, \"tan\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = Math.tan(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.asin = function (t) {\n    this.assertNotComplex(t, \"asin\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = Math.asin(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.acos = function (t) {\n    this.assertNotComplex(t, \"acos\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = Math.acos(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.atan = function (t) {\n    this.assertNotComplex(t, \"atan\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = Math.atan(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.atan2 = function (t, e) {\n    return this.assertNotComplex([t, e], \"atan2\"), this.broadcastedBinaryOp(t, e, t.dtype, function (t, e) {\n      return Math.atan2(t, e);\n    });\n  }, t.prototype.sinh = function (t) {\n    this.assertNotComplex(t, \"sinh\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = Math.sinh(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.cosh = function (t) {\n    this.assertNotComplex(t, \"cosh\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = Math.cosh(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.tanh = function (t) {\n    this.assertNotComplex(t, \"tanh\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = w(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.asinh = function (t) {\n    this.assertNotComplex(t, \"asinh\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = Math.asinh(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.acosh = function (t) {\n    this.assertNotComplex(t, \"acosh\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = Math.acosh(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.atanh = function (t) {\n    this.assertNotComplex(t, \"atanh\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) e[r] = Math.atanh(n[r]);\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.erf = function (t) {\n    this.assertNotComplex(t, \"erf\");\n\n    for (var e = new Float32Array(t.size), n = this.readSync(t.dataId), r = 0; r < n.length; ++r) {\n      var o = n[r],\n          a = 1 / (1 + .3275911 * o);\n      e[r] = 1 - ((((1.061405429 * a - 1.453152027) * a + 1.421413741) * a - .284496736) * a + .254829592) * a * Math.exp(-o * o);\n    }\n\n    return ft.make(t.shape, {\n      values: e\n    });\n  }, t.prototype.step = function (t, e) {\n    void 0 === e && (e = 0), this.assertNotComplex(t, \"step\");\n\n    for (var n = new Float32Array(t.size), r = this.readSync(t.dataId), o = 0; o < r.length; ++o) {\n      var a = r[o];\n      isNaN(a) ? n[o] = NaN : n[o] = a > 0 ? 1 : e;\n    }\n\n    return ft.make(t.shape, {\n      values: n\n    });\n  }, t.prototype.conv2d = function (t, e, n) {\n    this.assertNotComplex([t, e], \"conv2d\");\n\n    for (var r = n.filterHeight, o = n.filterWidth, a = n.dilationHeight, i = n.dilationWidth, s = n.padInfo.left, u = n.padInfo.top, l = Xn(n.outShape, t.dtype), c = this.readSync(t.dataId), h = this.readSync(e.dataId), p = l.values, f = 0; f < n.batchSize; ++f) for (var d = f * t.strides[0], v = f * l.strides[0], m = 0; m < n.outHeight; ++m) for (var g = v + m * l.strides[1], y = m * n.strideHeight - u, x = 0; x < r; x++) {\n      var b = y + x * a;\n      if (!(b < 0 || b >= n.inHeight)) for (var w = x * e.strides[0], C = d + b * t.strides[1], E = 0; E < n.outWidth; ++E) for (var R = g + E * n.outChannels, I = E * n.strideWidth - s, S = 0; S < o; S++) {\n        var N = I + S * i;\n        if (!(N < 0 || N >= n.inWidth)) for (var k = w + S * e.strides[1], A = C + N * n.inChannels, T = k, D = 0; D < n.inChannels; ++D) {\n          for (var _ = c[A + D], O = 0; O < n.outChannels; ++O) p[R + O] += _ * h[T + O];\n\n          T += n.outChannels;\n        }\n      }\n    }\n\n    return l.toTensor();\n  }, t.prototype.conv3d = function (t, e, n) {\n    for (var r = n.filterDepth, o = n.filterHeight, a = n.filterWidth, i = n.dilationDepth, s = n.dilationHeight, u = n.dilationWidth, l = n.padInfo.front, c = n.padInfo.left, h = n.padInfo.top, p = Xn(n.outShape, t.dtype), f = this.readSync(t.dataId), d = this.readSync(e.dataId), v = p.values, m = 0; m < n.batchSize; ++m) for (var g = m * t.strides[0], y = m * p.strides[0], x = 0; x < n.outDepth; ++x) for (var b = y + x * p.strides[1], w = x * n.strideDepth - l, C = 0; C < r; C++) {\n      var E = w + C * i;\n      if (!(E < 0 || E >= n.inDepth)) for (var R = C * e.strides[0], I = g + E * t.strides[1], S = 0; S < n.outHeight; ++S) for (var N = b + S * p.strides[2], k = S * n.strideHeight - h, A = 0; A < o; A++) {\n        var T = k + A * s;\n        if (!(T < 0 || T >= n.inHeight)) for (var D = R + A * e.strides[1], _ = I + T * t.strides[2], O = 0; O < n.outWidth; ++O) for (var M = N + O * n.outChannels, F = O * n.strideWidth - c, B = 0; B < a; B++) {\n          var P = F + B * u;\n          if (!(P < 0 || P >= n.inWidth)) for (var L = D + B * e.strides[2], W = _ + P * n.inChannels, U = L, z = 0; z < n.inChannels; ++z) {\n            for (var V = f[W + z], G = 0; G < n.outChannels; ++G) v[M + G] += V * d[U + G];\n\n            U += n.outChannels;\n          }\n        }\n      }\n    }\n\n    return p.toTensor();\n  }, t.prototype.conv2dDerInput = function (t, e, n) {\n    this.assertNotComplex([t, e], \"conv2dDerInput\");\n\n    for (var r = Xn(n.inShape, \"float32\"), o = r.values, a = r.strides, i = a[0], s = a[1], u = a[2], l = this.readSync(t.dataId), c = t.strides, h = c[0], p = c[1], f = c[2], d = this.readSync(e.dataId), v = e.strides, m = v[0], g = v[1], y = v[2], x = n.batchSize, b = n.filterHeight, w = n.filterWidth, C = n.inChannels, E = n.inHeight, R = n.inWidth, I = n.outChannels, S = n.outHeight, N = n.outWidth, k = n.strideHeight, A = n.strideWidth, T = b - 1 - n.padInfo.top, D = w - 1 - n.padInfo.left, _ = 0; _ < x; ++_) for (var O = 0; O < C; ++O) for (var M = 0; M < E; ++M) for (var F = M - T, B = Math.max(0, Math.ceil(F / k)), P = Math.min(S, (b + F) / k), L = 0; L < R; ++L) {\n      for (var W = L - D, U = Math.max(0, Math.ceil(W / A)), z = Math.min(N, (w + W) / A), V = 0, G = B; G < P; ++G) for (var q = G * k - F, H = U; H < z; ++H) for (var $ = h * _ + p * G + f * H, j = m * (b - 1 - q) + g * (w - 1 - (H * A - W)) + y * O, K = 0; K < I; ++K) {\n        V += l[$ + K] * d[j + K];\n      }\n\n      o[i * _ + s * M + u * L + O] = V;\n    }\n\n    return r.toTensor();\n  }, t.prototype.conv3dDerInput = function (t, e, n) {\n    for (var r = Xn(n.inShape, \"float32\"), o = r.values, a = r.strides, i = a[0], s = a[1], u = a[2], l = a[3], c = this.readSync(t.dataId), h = t.strides, p = h[0], f = h[1], d = h[2], v = h[3], m = this.readSync(e.dataId), g = e.strides, y = g[0], x = g[1], b = g[2], w = g[3], C = n.batchSize, E = n.filterDepth, R = n.filterHeight, I = n.filterWidth, S = n.inChannels, N = n.inDepth, k = n.inHeight, A = n.inWidth, T = n.outChannels, D = n.outDepth, _ = n.outHeight, O = n.outWidth, M = n.strideDepth, F = n.strideHeight, B = n.strideWidth, P = E - 1 - n.padInfo.front, L = R - 1 - n.padInfo.top, W = I - 1 - n.padInfo.left, U = 0; U < C; ++U) for (var z = 0; z < S; ++z) for (var V = 0; V < N; ++V) for (var G = V - P, q = Math.max(0, Math.ceil(G / M)), H = Math.min(D, (E + G) / M), $ = 0; $ < k; ++$) for (var j = $ - L, K = Math.max(0, Math.ceil(j / F)), X = Math.min(_, (R + j) / F), Y = 0; Y < A; ++Y) {\n      for (var Q = Y - W, J = Math.max(0, Math.ceil(Q / B)), Z = Math.min(O, (I + Q) / B), tt = 0, et = q; et < H; ++et) for (var nt = et * M - G, rt = K; rt < X; ++rt) for (var ot = rt * F - j, at = J; at < Z; ++at) for (var it = p * U + f * et + d * rt + v * at, st = y * (E - 1 - nt) + x * (R - 1 - ot) + b * (I - 1 - (at * B - Q)) + w * z, ut = 0; ut < T; ++ut) {\n        tt += c[it + ut] * m[st + ut];\n      }\n\n      o[i * U + s * V + u * $ + l * Y + z] = tt;\n    }\n\n    return r.toTensor();\n  }, t.prototype.conv2dDerFilter = function (t, e, n) {\n    this.assertNotComplex([t, e], \"conv2dDerFilter\");\n\n    for (var r = n.strideHeight, o = n.strideWidth, a = n.filterHeight, i = n.filterWidth, s = Xn(n.filterShape, \"float32\"), u = n.padInfo.left, l = n.padInfo.top, c = this.bufferSync(t), h = this.bufferSync(e), p = 0; p < a; ++p) for (var f = Math.max(0, Math.ceil((l - p) / r)), d = Math.min(n.outHeight, (n.inHeight + l - p) / r), v = 0; v < i; ++v) for (var m = Math.max(0, Math.ceil((u - v) / o)), g = Math.min(n.outWidth, (n.inWidth + u - v) / o), y = 0; y < n.inChannels; ++y) for (var x = 0; x < n.outChannels; ++x) {\n      for (var b = 0, w = 0; w < n.batchSize; ++w) for (var C = f; C < d; ++C) for (var E = p + C * r - l, R = m; R < g; ++R) {\n        var I = v + R * o - u;\n        b += c.get(w, E, I, y) * h.get(w, C, R, x);\n      }\n\n      s.set(b, p, v, y, x);\n    }\n\n    return s.toTensor();\n  }, t.prototype.conv3dDerFilter = function (t, e, n) {\n    for (var r = n.strideDepth, o = n.strideHeight, a = n.strideWidth, i = n.filterDepth, s = n.filterHeight, u = n.filterWidth, l = Xn(n.filterShape, \"float32\"), c = l.values, h = l.strides, p = h[0], f = h[1], d = h[2], v = h[3], m = this.readSync(e.dataId), g = e.strides, y = g[0], x = g[1], b = g[2], w = g[3], C = this.readSync(t.dataId), E = t.strides, R = E[0], I = E[1], S = E[2], N = E[3], k = n.padInfo.front, A = n.padInfo.left, T = n.padInfo.top, D = 0; D < i; ++D) for (var _ = Math.max(0, Math.ceil((k - D) / r)), O = Math.min(n.outDepth, (n.inDepth + k - D) / r), M = D * p, F = 0; F < s; ++F) for (var B = Math.max(0, Math.ceil((T - F) / o)), P = Math.min(n.outHeight, (n.inHeight + T - F) / o), L = F * f + M, W = 0; W < u; ++W) for (var U = Math.max(0, Math.ceil((A - W) / a)), z = Math.min(n.outWidth, (n.inWidth + A - W) / a), V = W * d + L, G = 0; G < n.inChannels; ++G) for (var q = G * v + V, H = 0; H < n.outChannels; ++H) {\n      for (var $ = 0, j = 0; j < n.batchSize; ++j) for (var K = j * R, X = j * y, Y = _; Y < O; ++Y) for (var Q = (D + Y * r - k) * I + K, J = Y * x + X, Z = B; Z < P; ++Z) for (var tt = (F + Z * o - T) * S + Q, et = Z * b + J, nt = U; nt < z; ++nt) {\n        var rt = nt * w + et;\n        $ += C[(W + nt * a - A) * N + tt + G] * m[rt + H];\n      }\n\n      c[q + H] = $;\n    }\n\n    return l.toTensor();\n  }, t.prototype.depthwiseConv2D = function (t, e, n) {\n    this.assertNotComplex([t, e], \"depthwiseConv2D\");\n\n    for (var r = n.filterHeight, o = n.filterWidth, a = n.dilationHeight, i = n.dilationWidth, s = n.padInfo.left, u = n.padInfo.top, l = n.outChannels / n.inChannels, c = Xn(n.outShape, t.dtype), h = this.readSync(t.dataId), p = this.readSync(e.dataId), f = c.values, d = 0; d < n.batchSize; ++d) for (var v = d * t.strides[0], m = d * c.strides[0], g = 0; g < n.outHeight; ++g) for (var y = m + g * c.strides[1], x = g * n.strideHeight - s, b = 0; b < r; ++b) {\n      var w = x + b * a;\n      if (!(w < 0 || w >= n.inHeight)) for (var C = b * e.strides[0], E = v + w * t.strides[1], R = 0; R < n.outWidth; ++R) for (var I = y + R * c.strides[2], S = R * n.strideWidth - u, N = 0; N < o; ++N) {\n        var k = S + N * i;\n        if (!(k < 0 || k >= n.inWidth)) for (var A = C + N * e.strides[1], T = E + k * n.inChannels, D = I, _ = A, O = 0; O < n.inChannels; ++O) {\n          for (var M = h[T + O], F = 0; F < l; ++F) f[D + F] += M * p[_ + F];\n\n          D += l, _ += l;\n        }\n      }\n    }\n\n    return c.toTensor();\n  }, t.prototype.depthwiseConv2DDerInput = function (t, e, n) {\n    this.assertNotComplex([t, e], \"depthwiseConv2DDerInput\");\n\n    for (var r = Xn(n.inShape, \"float32\"), o = r.values, a = r.strides, i = a[0], s = a[1], u = a[2], l = this.readSync(t.dataId), c = t.strides, h = c[0], p = c[1], f = c[2], d = this.readSync(e.dataId), v = e.strides, m = v[0], g = v[1], y = v[2], x = n.batchSize, b = n.filterHeight, w = n.filterWidth, C = n.inChannels, E = n.inHeight, R = n.inWidth, I = n.outChannels, S = n.outHeight, N = n.outWidth, k = n.strideHeight, A = n.strideWidth, T = b - 1 - n.padInfo.top, D = w - 1 - n.padInfo.left, _ = I / C, O = 0; O < x; ++O) for (var M = 0; M < C; ++M) for (var F = 0; F < E; ++F) for (var B = F - T, P = Math.max(0, Math.ceil(B / k)), L = Math.min(S, (b + B) / k), W = 0; W < R; ++W) {\n      for (var U = W - D, z = Math.max(0, Math.ceil(U / A)), V = Math.min(N, (w + U) / A), G = 0, q = P; q < L; ++q) for (var H = q * k - B, $ = z; $ < V; ++$) for (var j = h * O + p * q + f * $, K = m * (b - 1 - H) + g * (w - 1 - ($ * A - U)) + y * M, X = 0; X < _; ++X) {\n        G += l[j + (M * _ + X)] * d[K + X];\n      }\n\n      o[i * O + s * F + u * W + M] = G;\n    }\n\n    return r.toTensor();\n  }, t.prototype.depthwiseConv2DDerFilter = function (t, e, n) {\n    this.assertNotComplex([t, e], \"depthwiseConv2DDerFilter\");\n\n    for (var r = n.strideHeight, o = n.strideWidth, a = n.filterHeight, i = n.filterWidth, s = Xn(n.filterShape, \"float32\"), u = n.padInfo.left, l = n.padInfo.top, c = n.outChannels / n.inChannels, h = this.bufferSync(t), p = this.bufferSync(e), f = 0; f < a; ++f) for (var d = Math.max(0, Math.ceil((l - f) / r)), v = Math.min(n.outHeight, (n.inHeight + l - f) / r), m = 0; m < i; ++m) for (var g = Math.max(0, Math.ceil((u - m) / o)), y = Math.min(n.outWidth, (n.inWidth + u - m) / o), x = 0; x < n.outChannels; ++x) {\n      for (var b = Math.trunc(x / c), w = x % c, C = 0, E = 0; E < n.batchSize; ++E) for (var R = d; R < v; ++R) for (var I = f + R * r - l, S = g; S < y; ++S) {\n        var N = m + S * o - u;\n        C += h.get(E, I, N, b) * p.get(E, R, S, x);\n      }\n\n      s.set(C, f, m, b, w);\n    }\n\n    return s.toTensor();\n  }, t.prototype.tile = function (t, e) {\n    return this.assertNotComplex(t, \"tile\"), xo(this.bufferSync(t), e);\n  }, t.prototype.pad = function (t, e, n) {\n    this.assertNotComplex(t, \"pad\");\n    var r = e.map(function (e, n) {\n      return e[0] + t.shape[n] + e[1];\n    }),\n        o = e.map(function (t) {\n      return t[0];\n    }),\n        a = this.bufferSync(t),\n        i = Xn(r, t.dtype);\n    0 !== n && i.values.fill(n);\n\n    for (var s = 0; s < t.size; s++) {\n      var u = a.indexToLoc(s),\n          l = u.map(function (t, e) {\n        return t + o[e];\n      });\n      i.set.apply(i, [a.get.apply(a, u)].concat(l));\n    }\n\n    return i.toTensor();\n  }, t.prototype.transpose = function (t, e) {\n    this.assertNotComplex(t, \"transpose\");\n\n    for (var n = new Array(t.rank), r = 0; r < n.length; r++) n[r] = t.shape[e[r]];\n\n    var o = this.readSync(t.dataId),\n        a = Xn(n, t.dtype),\n        i = this.bufferSync(t);\n\n    for (r = 0; r < t.size; ++r) {\n      for (var s = i.indexToLoc(r), u = new Array(s.length), l = 0; l < u.length; l++) u[l] = s[e[l]];\n\n      var c = a.locToIndex(u);\n      a.values[c] = o[r];\n    }\n\n    return a.toTensor();\n  }, t.prototype.gather = function (t, e, n) {\n    this.assertNotComplex([t, e], \"gather\");\n    var r = t.shape.slice(),\n        o = this.readSync(e.dataId);\n    r[n] = o.length;\n\n    for (var a = Xn(r, t.dtype), i = this.bufferSync(t), s = 0; s < a.size; ++s) {\n      var u = a.indexToLoc(s),\n          l = u.slice();\n      l[n] = o[u[n]];\n      var c = i.locToIndex(l);\n      a.values[s] = i.values[c];\n    }\n\n    return a.toTensor();\n  }, t.prototype.batchToSpaceND = function (t, e, n) {\n    this.assertNotComplex([t], \"batchToSpaceND\");\n    var r = e.reduce(function (t, e) {\n      return t * e;\n    }),\n        o = Cr(t.shape, e, r),\n        a = Er(o.length, e.length),\n        i = Rr(t.shape, e, r),\n        s = Ir(n, e.length),\n        u = Sr(i, n, e.length);\n    return t.reshape(o).transpose(a).reshape(i).slice(s, u);\n  }, t.prototype.spaceToBatchND = function (t, e, n) {\n    this.assertNotComplex([t], \"spaceToBatchND\");\n    var r = e.reduce(function (t, e) {\n      return t * e;\n    }),\n        o = [[0, 0]];\n    o.push.apply(o, n);\n\n    for (var a = 1 + e.length; a < t.shape.length; ++a) o.push([0, 0]);\n\n    var i = t.pad(o),\n        s = Cr(i.shape, e, r, !1),\n        u = Er(s.length, e.length, !1),\n        l = Rr(i.shape, e, r, !1);\n    return i.reshape(s).transpose(u).reshape(l);\n  }, t.prototype.pool = function (t, e, n) {\n    this.assertNotComplex(t, \"pool\");\n\n    for (var r = e.strideHeight, o = e.strideWidth, a = e.dilationHeight, i = e.dilationWidth, s = e.effectiveFilterHeight, u = e.effectiveFilterWidth, l = e.padInfo.top, c = e.padInfo.left, h = \"max\" === n ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY, p = this.readSync(t.dataId), f = Xn(e.outShape, t.dtype), d = f.values, v = e.outShape[1] * e.outShape[2] * e.outShape[3], m = e.outShape[2] * e.outShape[3], g = e.outShape[3], y = 0; y < e.batchSize; ++y) for (var x = y * v, b = y * t.strides[0], w = 0; w < e.inChannels; ++w) for (var C = 0; C < e.outHeight; ++C) for (var E = C * r - l, R = Math.max(0, E), I = Math.min(e.inHeight, s + E), S = x + C * m, N = 0; N < e.outWidth; ++N) {\n      for (var k = N * o - c, A = Math.max(0, k), T = Math.min(e.inWidth, u + k), D = h, _ = 0, O = 0, M = R; M < I; M += a) {\n        for (var F = b + M * t.strides[1], B = A; B < T; B += i) {\n          var P = p[F + B * t.strides[2] + w];\n          \"max\" === n && P > D ? D = P : \"avg\" === n && (_ += P, O++);\n        }\n\n        if (isNaN(D)) break;\n      }\n\n      d[S + N * g + w] = \"avg\" === n ? _ / O : D;\n    }\n\n    return f.toTensor();\n  }, t.prototype.maxPool = function (t, e) {\n    return this.pool(t, e, \"max\");\n  }, t.prototype.maxPoolPositions = function (t, e) {\n    for (var n = Xn(e.outShape, \"int32\"), r = e.strideHeight, o = e.strideWidth, a = e.dilationHeight, i = e.dilationWidth, s = e.effectiveFilterHeight, u = e.effectiveFilterWidth, l = e.padInfo.top, c = e.padInfo.left, h = this.bufferSync(t), p = 0; p < e.batchSize; ++p) for (var f = 0; f < e.inChannels; ++f) for (var d = 0; d < e.outHeight; ++d) {\n      for (var v = d * r - l, m = v; m < 0;) m += a;\n\n      for (var g = Math.min(e.inHeight, s + v), y = 0; y < e.outWidth; ++y) {\n        for (var x = y * o - c, b = x; b < 0;) b += i;\n\n        for (var w = Math.min(e.inWidth, u + x), C = Number.NEGATIVE_INFINITY, E = -1, R = m; R < g; R += a) for (var I = R - v, S = b; S < w; S += i) {\n          var N = S - x,\n              k = h.get(p, R, S, f);\n          k > C && (C = k, E = I * u + N);\n        }\n\n        n.set(E, p, d, y, f);\n      }\n    }\n\n    return n.toTensor();\n  }, t.prototype.maxPoolBackprop = function (t, e, n, r) {\n    this.assertNotComplex([e, n], \"maxPoolBackprop\");\n\n    for (var o = this.maxPoolPositions(e, r), a = r.strideHeight, i = r.strideWidth, s = r.dilationHeight, u = r.dilationWidth, l = r.effectiveFilterHeight, c = r.effectiveFilterWidth, h = c - 1 - r.padInfo.left, p = l - 1 - r.padInfo.top, f = Xn(e.shape, \"float32\"), d = this.bufferSync(o), v = this.bufferSync(t), m = 0; m < r.batchSize; ++m) for (var g = 0; g < r.inChannels; ++g) for (var y = 0; y < r.inHeight; ++y) for (var x = 0; x < r.inWidth; ++x) {\n      for (var b = y - p, w = x - h, C = 0, E = 0; E < l; E += s) {\n        var R = (b + E) / a;\n        if (!(R < 0 || R >= r.outHeight || Math.floor(R) !== R)) for (var I = 0; I < c; I += u) {\n          var S = (w + I) / i;\n\n          if (!(S < 0 || S >= r.outWidth || Math.floor(S) !== S)) {\n            var N = l * c - 1 - d.get(m, R, S, g) === E * c + I ? 1 : 0;\n            if (0 !== N) C += v.get(m, R, S, g) * N;\n          }\n        }\n      }\n\n      f.set(C, m, y, x, g);\n    }\n\n    return f.toTensor();\n  }, t.prototype.avgPoolBackprop = function (t, e, n) {\n    this.assertNotComplex([t, e], \"avgPoolBackprop\");\n\n    for (var r = n.strideHeight, o = n.strideWidth, a = n.filterHeight, i = n.filterWidth, s = n.dilationHeight, u = n.dilationWidth, l = n.effectiveFilterHeight, c = n.effectiveFilterWidth, h = c - 1 - n.padInfo.left, p = l - 1 - n.padInfo.top, f = Xn(e.shape, \"float32\"), d = 1 / (a * i), v = this.bufferSync(t), m = 0; m < n.batchSize; ++m) for (var g = 0; g < n.inChannels; ++g) for (var y = 0; y < n.inHeight; ++y) for (var x = 0; x < n.inWidth; ++x) {\n      for (var b = y - p, w = x - h, C = 0, E = 0; E < l; E += s) {\n        var R = (b + E) / r;\n        if (!(R < 0 || R >= n.outHeight || Math.floor(R) !== R)) for (var I = 0; I < c; I += u) {\n          var S = (w + I) / o;\n          if (!(S < 0 || S >= n.outWidth || Math.floor(S) !== S)) C += v.get(m, R, S, g);\n        }\n      }\n\n      f.set(C * d, m, y, x, g);\n    }\n\n    return f.toTensor();\n  }, t.prototype.cast = function (t, e) {\n    return so(t, e, this);\n  }, t.prototype.reshape = function (t, e) {\n    return uo(t, e);\n  }, t.prototype.avgPool = function (t, e) {\n    return this.assertNotComplex(t, \"avgPool\"), this.pool(t, e, \"avg\").toFloat();\n  }, t.prototype.resizeBilinear = function (t, e, n, r) {\n    this.assertNotComplex(t, \"resizeBilinear\");\n\n    for (var o = t.shape, a = o[0], i = o[1], s = o[2], u = o[3], l = this.readSync(t.dataId), c = new Float32Array(y([a, e, n, u])), h = [r && e > 1 ? i - 1 : i, r && n > 1 ? s - 1 : s], p = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n], f = 0, d = h[0] / p[0], v = h[1] / p[1], m = 0; m < a; m++) for (var g = 0; g < e; g++) for (var x = d * g, b = Math.floor(x), w = x - b, C = Math.min(i - 1, Math.ceil(x)), E = m * t.strides[0] + b * t.strides[1], R = m * t.strides[0] + C * t.strides[1], I = 0; I < n; I++) for (var S = v * I, N = Math.floor(S), k = S - N, A = Math.min(s - 1, Math.ceil(S)), T = E + N * t.strides[2], D = R + N * t.strides[2], _ = E + +A * t.strides[2], O = R + A * t.strides[2], M = 0; M < u; M++) {\n      var F = l[T + M],\n          B = l[D + M],\n          P = F + (l[_ + M] - F) * k,\n          L = P + (B + (l[O + M] - B) * k - P) * w;\n      c[f++] = L;\n    }\n\n    return mn(c, [a, e, n, u]);\n  }, t.prototype.resizeBilinearBackprop = function (t, e, n) {\n    this.assertNotComplex([t, e], \"resizeBilinearBackprop\");\n\n    for (var r = e.shape, o = r[0], a = r[1], i = r[2], s = r[3], u = t.shape, l = u[1], c = u[2], h = new Float32Array(o * a * i * s), p = [n && l > 1 ? a - 1 : a, n && c > 1 ? i - 1 : i], f = [n && l > 1 ? l - 1 : l, n && c > 1 ? c - 1 : c], d = p[0] / f[0], v = p[1] / f[1], m = this.readSync(t.dataId), g = 0, y = 0; y < o; y++) for (var x = y * e.strides[0], b = 0; b < l; b++) for (var w = b * d, C = Math.floor(w), E = Math.min(Math.ceil(w), a - 1), R = x + C * e.strides[1], I = x + E * e.strides[1], S = w - C, N = 1 - S, k = 0; k < c; k++) for (var A = k * v, T = Math.floor(A), D = Math.min(Math.ceil(A), i - 1), _ = A - T, O = 1 - _, M = R + T * e.strides[2], F = R + D * e.strides[2], B = I + T * e.strides[2], P = I + D * e.strides[2], L = N * O, W = N * _, U = S * O, z = S * _, V = 0; V < s; V++) {\n      var G = m[g++];\n      h[M + V] += G * L, h[F + V] += G * W, h[B + V] += G * U, h[P + V] += G * z;\n    }\n\n    return Cn(h, [o, i, a, s], e.dtype);\n  }, t.prototype.resizeNearestNeighbor = function (t, e, n, r) {\n    this.assertNotComplex(t, \"resizeNearestNeighbor\");\n\n    for (var o = t.shape, a = o[0], i = o[1], s = o[2], u = o[3], l = this.readSync(t.dataId), c = new Float32Array(a * e * n * u), h = [r && e > 1 ? i - 1 : i, r && n > 1 ? s - 1 : s], p = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n], f = h[0] / p[0], d = h[1] / p[1], v = 0, m = 0; m < a; m++) for (var g = m * t.strides[0], y = 0; y < e; y++) for (var x = f * y, b = g + Math.min(i - 1, r ? Math.round(x) : Math.floor(x)) * t.strides[1], w = 0; w < n; w++) for (var C = d * w, E = b + Math.min(s - 1, r ? Math.round(C) : Math.floor(C)) * t.strides[2], R = 0; R < u; R++) {\n      var I = l[E + R];\n      c[v++] = I;\n    }\n\n    return mn(c, [a, e, n, u], t.dtype);\n  }, t.prototype.resizeNearestNeighborBackprop = function (t, e, n) {\n    this.assertNotComplex([t, e], \"resizeNearestNeighborBackprop\");\n\n    for (var r = e.shape, o = r[0], a = r[1], i = r[2], s = r[3], u = t.shape, l = u[1], c = u[2], h = new Float32Array(o * a * i * s), p = this.readSync(t.dataId), f = [n && l > 1 ? a - 1 : a, n && c > 1 ? i - 1 : i], d = [n && l > 1 ? l - 1 : l, n && c > 1 ? c - 1 : c], v = f[0] / d[0], m = f[1] / d[1], g = 1 / v, y = 1 / m, x = 2 * Math.ceil(g) + 2, b = 2 * Math.ceil(y) + 2, w = 0; w < o; w++) for (var C = w * e.strides[0], E = 0; E < a; E++) for (var R = C + E * e.strides[1], I = Math.floor(E * g), S = Math.floor(I - x / 2), N = 0; N < i; N++) for (var k = R + N * e.strides[2], A = Math.floor(N * y), T = Math.floor(A - b / 2), D = 0; D < s; D++) {\n      for (var _ = 0, O = 0; O < x; O++) {\n        var M = O + S;\n\n        if (!(M < 0 || M >= l)) {\n          var F = C + M * t.strides[1],\n              B = M * v;\n          if (E === Math.min(a - 1, n ? Math.round(B) : Math.floor(B))) for (var P = 0; P < b; P++) {\n            var L = P + T;\n\n            if (!(L < 0 || L >= c)) {\n              var W = F + L * t.strides[2],\n                  U = L * m;\n              N === Math.min(i - 1, n ? Math.round(U) : Math.floor(U)) && (_ += p[W + D]);\n            }\n          }\n        }\n      }\n\n      h[k + D] = _;\n    }\n\n    return Cn(h, e.shape, e.dtype);\n  }, t.prototype.batchNormalization = function (t, e, n, r, o, a) {\n    this.assertNotComplex([t, e, n, o, a], \"batchNorm\");\n\n    for (var i = this.readSync(t.dataId), s = this.readSync(e.dataId), u = this.readSync(n.dataId), l = o ? this.readSync(o.dataId) : new Float32Array([1]), c = a ? this.readSync(a.dataId) : new Float32Array([0]), h = new Float32Array(i.length), p = c.length, f = l.length, d = u.length, v = s.length, m = 0, g = 0, y = 0, x = 0, b = 0; b < i.length; ++b) h[b] = c[m++] + (i[b] - s[g++]) * l[y++] / Math.sqrt(u[x++] + r), m >= p && (m = 0), g >= v && (g = 0), y >= f && (y = 0), x >= d && (x = 0);\n\n    return Cn(h, t.shape);\n  }, t.prototype.localResponseNormalization4D = function (t, e, n, r, o) {\n    this.assertNotComplex(t, \"localResponseNormalization4D\");\n    var a = t.shape[3],\n        i = a - 1,\n        s = this.readSync(t.dataId),\n        u = t.size,\n        l = new Float32Array(u);\n\n    function c(t) {\n      for (var n = t % a, r = t - n + Math.max(0, n - e), o = t - n + Math.min(n + e, i), u = 0; r <= o; r++) {\n        var l = s[r];\n        u += l * l;\n      }\n\n      return u;\n    }\n\n    for (var h = 0; h < u; h++) {\n      var p = c(h),\n          f = s[h] * Math.pow(n + r * p, -o);\n      l[h] = f;\n    }\n\n    return Cn(l, t.shape);\n  }, t.prototype.LRNGrad = function (t, e, n, r, o, a, i) {\n    this.assertNotComplex(t, \"LRNGrad\");\n\n    for (var s = t.shape[3], u = this.readSync(t.dataId), l = this.readSync(e.dataId), c = this.readSync(n.dataId), h = new Float32Array(t.size), p = t.size, f = 0; f < p; f++) {\n      for (var d = f % s, v = f - d + Math.max(0, d - r), m = f - d + Math.min(s, d + r + 1), g = 0, y = v; y < m; y++) g += Math.pow(l[y], 2);\n\n      g = a * g + o;\n\n      for (y = v; y < m; y++) {\n        var x = -2 * a * i * l[y] * c[f] / g;\n        f === y && (x += Math.pow(g, -i)), x *= u[f], h[y] += x;\n      }\n    }\n\n    return Cn(h, t.shape);\n  }, t.prototype.multinomial = function (t, e, n, r) {\n    this.assertNotComplex(t, \"multinomial\");\n\n    for (var o = e ? t : qr(t), a = o.shape[0], i = o.shape[1], s = Sn([a, n], \"int32\"), u = this.readSync(s.dataId), l = this.readSync(o.dataId), c = 0; c < a; ++c) {\n      var h = c * i,\n          p = new Float32Array(i - 1);\n      p[0] = l[h];\n\n      for (var f = 1; f < p.length; ++f) p[f] = p[f - 1] + l[h + f];\n\n      for (var d = $n(r.toString()), v = c * n, m = 0; m < n; ++m) {\n        var g = d();\n        u[v + m] = p.length;\n\n        for (var y = 0; y < p.length; y++) if (g < p[y]) {\n          u[v + m] = y;\n          break;\n        }\n      }\n    }\n\n    return s;\n  }, t.prototype.oneHot = function (t, e, n, r) {\n    this.assertNotComplex(t, \"oneHot\");\n    var o = new Float32Array(t.size * e);\n    o.fill(r);\n\n    for (var a = this.readSync(t.dataId), i = 0; i < t.size; ++i) a[i] >= 0 && a[i] < e && (o[i * e + a[i]] = n);\n\n    return bn(o, [t.size, e], \"int32\");\n  }, t.prototype.nonMaxSuppression = function (t, e, n, r, o) {\n    return this.assertNotComplex(t, \"nonMaxSuppression\"), mo(this.readSync(t.dataId), this.readSync(e.dataId), n, r, o);\n  }, t.prototype.fft = function (t) {\n    return this.fftBatch(t, !1);\n  }, t.prototype.ifft = function (t) {\n    return this.fftBatch(t, !0);\n  }, t.prototype.fftBatch = function (t, e) {\n    for (var n = t.shape[0], r = t.shape[1], o = Xn(t.shape, \"float32\"), a = Xn(t.shape, \"float32\"), i = dn(t).as2D(n, r), s = vn(t).as2D(n, r), u = 0; u < n; u++) for (var l = i.slice([u, 0], [1, r]), c = s.slice([u, 0], [1, r]), h = fn(l, c), p = this.readSync(this.fftImpl(h, e).dataId), f = 0; f < r; f++) {\n      var d = po(p, f);\n      o.values[u * r + f] = d.real, a.values[u * r + f] = d.imag;\n    }\n\n    return fn(o.toTensor(), a.toTensor()).as2D(n, r);\n  }, t.prototype.fftImpl = function (t, e) {\n    var n = t.as1D(),\n        r = n.size;\n\n    if (this.isExponentOf2(r)) {\n      var o = this.fftRadix2(n, r, e).as2D(t.shape[0], t.shape[1]);\n      return e && (o = fn(dn(o).div(yn(r)), vn(o).div(yn(r)))), o;\n    }\n\n    var a = this.readSync(t.dataId),\n        i = function (t) {\n      for (var e = new Float32Array(t.length / 2), n = new Float32Array(t.length / 2), r = 0; r < t.length; r += 2) e[r / 2] = t[r], n[r / 2] = t[r + 1];\n\n      return {\n        real: e,\n        imag: n\n      };\n    }(this.fourierTransformByMatmul(a, r, e));\n\n    return fn(i.real, i.imag).as2D(t.shape[0], t.shape[1]);\n  }, t.prototype.isExponentOf2 = function (t) {\n    return 0 == (t & t - 1);\n  }, t.prototype.fftRadix2 = function (t, e, n) {\n    if (1 === e) return t;\n\n    var r = this.readSync(t.dataId),\n        o = e / 2,\n        a = function (t) {\n      for (var e = Math.ceil(t.length / 4), n = new Float32Array(e), r = new Float32Array(e), o = 0; o < t.length; o += 4) n[Math.floor(o / 4)] = t[o], r[Math.floor(o / 4)] = t[o + 1];\n\n      return {\n        real: n,\n        imag: r\n      };\n    }(r),\n        i = fn(a.real, a.imag).as1D(),\n        s = function (t) {\n      for (var e = Math.floor(t.length / 4), n = new Float32Array(e), r = new Float32Array(e), o = 2; o < t.length; o += 4) n[Math.floor(o / 4)] = t[o], r[Math.floor(o / 4)] = t[o + 1];\n\n      return {\n        real: n,\n        imag: r\n      };\n    }(r),\n        u = fn(s.real, s.imag).as1D();\n\n    i = this.fftRadix2(i, o, n), u = this.fftRadix2(u, o, n);\n\n    var l = function (t, e) {\n      for (var n = new Float32Array(t / 2), r = new Float32Array(t / 2), o = 0; o < Math.ceil(t / 2); o++) {\n        var a = (e ? 2 : -2) * Math.PI * (o / t);\n        n[o] = Math.cos(a), r[o] = Math.sin(a);\n      }\n\n      return {\n        real: n,\n        imag: r\n      };\n    }(e, n),\n        c = fn(l.real, l.imag).mul(u),\n        h = i.add(c),\n        p = i.sub(c),\n        f = dn(h).concat(dn(p)),\n        d = vn(h).concat(vn(p));\n\n    return fn(f, d).as1D();\n  }, t.prototype.fourierTransformByMatmul = function (t, e, n) {\n    for (var r = new Float32Array(2 * e), o = 0; o < e; o++) {\n      for (var a = 0, i = 0, s = 0; s < e; s++) {\n        var u = vo(o * s, e, n),\n            l = po(t, s);\n        a += l.real * u.real - l.imag * u.imag, i += l.real * u.imag + l.imag * u.real;\n      }\n\n      n && (a /= e, i /= e), fo(r, a, i, o);\n    }\n\n    return r;\n  }, t.prototype.depthToSpace = function (t, e, n) {\n    d(\"NHWC\" === n, function () {\n      return \"Only NHWC dataFormat supported on CPU for depthToSpace. Got \" + n;\n    }), d(e > 1, function () {\n      return \"blockSize should be > 1 for depthToSpace, but was: \" + e;\n    });\n\n    for (var r = t.shape[0], o = t.shape[1], a = t.shape[2], i = t.shape[3], s = o * e, u = a * e, l = i / (e * e), c = this.readSync(t.dataId), h = new Float32Array(r * s * u * l), p = 0, f = 0; f < r; ++f) for (var v = 0; v < s; ++v) for (var m = Math.floor(v / e), g = v % e, y = 0; y < u; ++y) for (var x = Math.floor(y / e), b = (g * e + y % e) * l, w = 0; w < l; ++w) {\n      var C = w + b + i * (x + a * (m + o * f));\n      h[p++] = c[C];\n    }\n\n    return Cn(h, [r, s, u, l]);\n  }, t.prototype.broadcastedBinaryOp = function (t, e, n, r) {\n    var o = Yr(t.shape, e.shape),\n        a = Xn(o, n),\n        i = this.readSync(t.dataId),\n        s = this.readSync(e.dataId),\n        u = Kr(t.shape, o),\n        l = Kr(e.shape, o),\n        c = a.values;\n    if (u.length + l.length === 0) for (var h = 0; h < c.length; ++h) c[h] = r(i[h % i.length], s[h % s.length]);else {\n      var p = this.bufferSync(t),\n          f = this.bufferSync(e),\n          d = function (n) {\n        var o = a.indexToLoc(n),\n            h = o.slice(-t.rank);\n        u.forEach(function (t) {\n          return h[t] = 0;\n        });\n        var d = p.locToIndex(h),\n            v = o.slice(-e.rank);\n        l.forEach(function (t) {\n          return v[t] = 0;\n        });\n        var m = f.locToIndex(v);\n        c[n] = r(i[d], s[m]);\n      };\n\n      for (h = 0; h < c.length; ++h) d(h);\n    }\n    return a.toTensor();\n  }, t.prototype.broadcastedBinaryComplexOp = function (t, e, n) {\n    var r = Yr(t.shape, e.shape),\n        o = Xn(r, \"float32\"),\n        a = Xn(r, \"float32\"),\n        i = this.readSync(t.dataId),\n        s = this.readSync(e.dataId),\n        u = Kr(t.shape, r),\n        l = Kr(e.shape, r),\n        c = o.values,\n        h = a.values;\n    if (u.length + l.length === 0) for (var p = 0; p < c.length; p++) {\n      var f = p % i.length,\n          d = p % s.length,\n          v = n(i[2 * f], i[2 * f + 1], s[2 * d], s[2 * d + 1]);\n      c[p] = v.real, h[p] = v.imag;\n    } else {\n      var m = this.bufferSync(this.data.get(t.dataId).complexTensors.real),\n          g = this.bufferSync(this.data.get(e.dataId).complexTensors.real),\n          y = function (r) {\n        var a = o.indexToLoc(r),\n            p = a.slice(-t.rank);\n        u.forEach(function (t) {\n          return p[t] = 0;\n        });\n        var f = m.locToIndex(p),\n            d = a.slice(-e.rank);\n        l.forEach(function (t) {\n          return d[t] = 0;\n        });\n        var v = g.locToIndex(d),\n            y = n(i[2 * f], i[2 * f + 1], s[2 * v], s[2 * v + 1]);\n        c[r] = y.real, h[r] = y.imag;\n      };\n\n      for (p = 0; p < c.length; p++) y(p);\n    }\n    return this.complex(o.toTensor(), a.toTensor());\n  }, t.prototype.split = function (t, e, n) {\n    return yo(t, e, n);\n  }, t.prototype.dispose = function () {}, t.prototype.floatPrecision = function () {\n    return 32;\n  }, t.prototype.epsilon = function () {\n    return 1e-7;\n  }, t.prototype.cropAndResize = function (t, e, n, r, o, a) {\n    for (var i = t.shape, s = i[0], u = i[1], l = i[2], c = i[3], h = e.shape[0], p = r[0], f = r[1], d = Xn([h, p, f, c], t.dtype), v = this.readSync(e.dataId), m = this.readSync(n.dataId), g = this.readSync(t.dataId), y = t.strides, x = d.strides, b = 0; b < h; b++) {\n      var w = 4 * b,\n          C = v[w],\n          E = v[w + 1],\n          R = v[w + 2],\n          I = v[w + 3],\n          S = m[b];\n      if (!(S >= s)) for (var N = p > 1 ? (R - C) * (u - 1) / (p - 1) : 0, k = f > 1 ? (I - E) * (l - 1) / (f - 1) : 0, A = 0; A < p; A++) {\n        var T = p > 1 ? C * (u - 1) + A * N : .5 * (C + R) * (u - 1);\n        if (T < 0 || T > u - 1) for (var D = 0; D < f; D++) for (var _ = 0; _ < c; _++) {\n          var O = _ + D * x[2] + A * x[1] + b * x[0];\n          d.values[O] = a;\n        } else if (\"bilinear\" === o) {\n          var M = Math.floor(T),\n              F = Math.ceil(T),\n              B = T - M;\n\n          for (D = 0; D < f; D++) {\n            if ((H = f > 1 ? E * (l - 1) + D * k : .5 * (E + I) * (l - 1)) < 0 || H > l - 1) for (_ = 0; _ < c; _++) {\n              O = _ + D * x[2] + A * x[1] + b * x[0];\n              d.values[O] = a;\n            } else {\n              var P = Math.floor(H),\n                  L = Math.ceil(H),\n                  W = H - P;\n\n              for (_ = 0; _ < c; _++) {\n                var U = g[O = _ + P * y[2] + M * y[1] + S * y[0]],\n                    z = g[O = _ + L * y[2] + M * y[1] + S * y[0]],\n                    V = g[O = _ + P * y[2] + F * y[1] + S * y[0]],\n                    G = U + (z - U) * W,\n                    q = V + (g[O = _ + L * y[2] + F * y[1] + S * y[0]] - V) * W;\n                O = _ + D * x[2] + A * x[1] + b * x[0], d.values[O] = G + (q - G) * B;\n              }\n            }\n          }\n        } else for (D = 0; D < f; ++D) {\n          var H;\n          if ((H = f > 1 ? E * (l - 1) + D * k : .5 * (E + I) * (l - 1)) < 0 || H > l - 1) for (_ = 0; _ < c; _++) {\n            O = _ + D * x[2] + A * x[1] + b * x[0];\n            d.values[O] = a;\n          } else {\n            var $ = Math.round(H),\n                j = Math.round(T);\n\n            for (_ = 0; _ < c; _++) {\n              var K = _ + $ * y[2] + j * y[1] + S * y[0],\n                  X = _ + D * x[2] + A * x[1] + b * x[0];\n              d.values[X] = g[K];\n            }\n          }\n        }\n      }\n    }\n\n    return d.toTensor();\n  }, t.prototype.sparseToDense = function (t, e, n, r) {\n    var o = Dr(0, t, n),\n        a = o.sliceRank,\n        i = o.numUpdates,\n        s = o.sliceSize,\n        u = o.strides,\n        l = o.outputSize;\n    return this.scatter(t, e, n, l, s, i, a, u, r, !1);\n  }, t.prototype.gatherND = function (t, e) {\n    var n = e.shape,\n        r = n[n.length - 1],\n        o = Nr(t, e),\n        a = o[0],\n        i = o[1],\n        s = o[2],\n        u = o[3];\n    if (0 === i) return mn([], a, t.dtype);\n\n    for (var l = new lt([i, s], t.dtype), c = this.readSync(e.dataId), h = this.readSync(t.dataId), p = 0; p < i; p++) {\n      for (var f = [], d = 0, v = 0; v < r; v++) {\n        var m = c[p * r + v];\n        d += m * u[v], f.push(m);\n      }\n\n      if (d < 0 || d >= t.size / s) throw new Error(\"Invalid indices: \" + f + \" does not index into \" + t.shape);\n\n      for (var g = 0; g < s; g++) l.values[p * s + g] = h[d * s + g];\n    }\n\n    return l.toTensor().reshape(a);\n  }, t.prototype.scatterND = function (t, e, n) {\n    var r = Dr(0, t, n),\n        o = r.sliceRank,\n        a = r.numUpdates,\n        i = r.sliceSize,\n        s = r.strides,\n        u = r.outputSize,\n        l = yn(0);\n    return this.scatter(t, e, n, u, i, a, o, s, l, !0);\n  }, t.prototype.fill = function (t, e, n) {\n    var r = A(n = n || U(e), y(t));\n    return r.fill(e), ft.make(t, {\n      values: r\n    }, n);\n  }, t.prototype.onesLike = function (t) {\n    if (\"string\" === t.dtype) throw new Error(\"onesLike is not supported for string tensors\");\n    return this.fill(t.shape, 1, t.dtype);\n  }, t.prototype.zerosLike = function (t) {\n    var e = A(t.dtype, y(t.shape));\n    return ft.make(t.shape, {\n      values: e\n    }, t.dtype);\n  }, t.prototype.linspace = function (t, e, n) {\n    return lo(t, e, n);\n  }, t.prototype.scatter = function (t, e, n, r, o, a, i, s, u, l) {\n    var c = [r / o, o],\n        h = this.readSync(t.dataId),\n        p = this.readSync(e.dataId);\n    if (0 === r) return mn([], n, e.dtype);\n    var f = new lt(c, e.dtype);\n    f.values.fill(this.readSync(u.dataId)[0]);\n\n    for (var d = 0; d < a; d++) {\n      for (var v = [], m = 0, g = 0; g < i; g++) {\n        var y = h[d * i + g];\n        v.push(y), m += y * s[g];\n      }\n\n      if (m < 0 || m >= r / o) throw new Error(\"Invalid indices: \" + v + \" does not index into \" + n);\n\n      for (var x = 0; x < o; x++) l ? f.values[m * o + x] += p[d * o + x] : f.values[m * o + x] = 0 === e.rank ? p[0] : p[d * o + x];\n    }\n\n    return f.toTensor().reshape(n);\n  }, t;\n}();\n\nDt.registerBackend(\"cpu\", function () {\n  return new kc();\n}, 1);\n\nvar Ac = function () {\n  function t() {\n    this.textEncoder = new TextEncoder();\n  }\n\n  return t.prototype.fetch = function (t, e) {\n    return fetch(t, e);\n  }, t.prototype.now = function () {\n    return performance.now();\n  }, t.prototype.encode = function (t, e) {\n    if (\"utf-8\" !== e && \"utf8\" !== e) throw new Error(\"Browser's encoder only supports utf-8, but got \" + e);\n    return this.textEncoder.encode(t);\n  }, t.prototype.decode = function (t, e) {\n    return new TextDecoder(e).decode(t);\n  }, t;\n}();\n\ns.get(\"IS_BROWSER\") && s.setPlatform(\"browser\", new Ac());\n\nvar Tc,\n    Dc = function () {\n  return require(\"node-fetch\");\n},\n    _c = function () {\n  function t() {\n    this.util = require(\"util\"), this.textEncoder = new this.util.TextEncoder();\n  }\n\n  return t.prototype.fetch = function (t, e) {\n    return null != s.global.fetch ? s.global.fetch(t, e) : (null == Tc && (Tc = Dc()), Tc(t, e));\n  }, t.prototype.now = function () {\n    var t = process.hrtime();\n    return 1e3 * t[0] + t[1] / 1e6;\n  }, t.prototype.encode = function (t, e) {\n    if (\"utf-8\" !== e && \"utf8\" !== e) throw new Error(\"Node built-in encoder only supports utf-8, but got \" + e);\n    return this.textEncoder.encode(t);\n  }, t.prototype.decode = function (t, e) {\n    return 0 === t.length ? \"\" : new this.util.TextDecoder(e).decode(t);\n  }, t;\n}();\n\ns.get(\"IS_NODE\") && s.setPlatform(\"node\", new _c());\nvar Oc = {\n  float32: 4,\n  int32: 4,\n  uint16: 2,\n  uint8: 1,\n  bool: 1\n},\n    Mc = 4;\n\nfunction Fc(t, e) {\n  for (var n = {}, r = 0, o = function (e) {\n    var o = e.name,\n        a = e.dtype,\n        i = e.shape,\n        s = y(i),\n        u = void 0;\n\n    if ((\"quantization\" in e)) {\n      var l = e.quantization;\n      if (\"uint8\" !== l.dtype && \"uint16\" !== l.dtype) throw new Error(\"Weight \" + e.name + \" has unknown quantization dtype \" + l.dtype + \". Supported quantization dtypes are: 'uint8' and 'uint16'.\");\n      var c = Oc[l.dtype],\n          h = t.slice(r, r + s * c),\n          p = \"uint8\" === l.dtype ? new Uint8Array(h) : new Uint16Array(h);\n      if (\"float32\" === a) u = Float32Array.from(p, function (t) {\n        return t * l.scale + l.min;\n      });else {\n        if (\"int32\" !== a) throw new Error(\"Unsupported dtype in weight '\" + o + \"': \" + a);\n        u = Int32Array.from(p, function (t) {\n          return Math.round(t * l.scale + l.min);\n        });\n      }\n      r += s * c;\n    } else if (\"string\" === a) {\n      var f = y(e.shape);\n      u = [];\n\n      for (var d = 0; d < f; d++) {\n        var v = new Uint32Array(t.slice(r, r + Mc))[0];\n        r += Mc;\n        var m = new Uint8Array(t.slice(r, r + v));\n        u.push(m), r += v;\n      }\n    } else {\n      var g = Oc[a];\n      h = t.slice(r, r + s * g);\n      if (\"float32\" === a) u = new Float32Array(h);else if (\"int32\" === a) u = new Int32Array(h);else {\n        if (\"bool\" !== a) throw new Error(\"Unsupported dtype in weight '\" + o + \"': \" + a);\n        u = new Uint8Array(h);\n      }\n      r += s * g;\n    }\n\n    n[o] = mn(u, i, a);\n  }, a = 0, i = e; a < i.length; a++) {\n    o(i[a]);\n  }\n\n  return n;\n}\n\nfunction Bc(t) {\n  if (null === t) throw new Error(\"Invalid input value: \" + JSON.stringify(t));\n  var e = 0,\n      n = [];\n  t.forEach(function (t) {\n    if (e += t.byteLength, n.push(t.byteLength === t.buffer.byteLength ? t : new t.constructor(t)), !(t instanceof Float32Array || t instanceof Int32Array || t instanceof Uint8Array)) throw new Error(\"Unsupported TypedArray subtype: \" + t.constructor.name);\n  });\n  var r = new Uint8Array(e),\n      o = 0;\n  return n.forEach(function (t) {\n    r.set(new Uint8Array(t.buffer), o), o += t.byteLength;\n  }), r.buffer;\n}\n\nvar Pc = \"undefined\" != typeof Buffer && (\"undefined\" == typeof Blob || \"undefined\" == typeof atob || \"undefined\" == typeof btoa);\n\nfunction Lc(t) {\n  return Pc ? Buffer.byteLength(t) : new Blob([t]).size;\n}\n\nfunction Wc(t) {\n  var e = 0;\n  t.forEach(function (t) {\n    e += t.byteLength;\n  });\n  var n = new Uint8Array(e),\n      r = 0;\n  return t.forEach(function (t) {\n    n.set(new Uint8Array(t), r), r += t.byteLength;\n  }), n.buffer;\n}\n\nfunction Uc(t) {\n  for (t = t.trim(); t.endsWith(\"/\");) t = t.slice(0, t.length - 1);\n\n  var e = t.split(\"/\");\n  return e[e.length - 1];\n}\n\nfunction zc(t) {\n  if (t.modelTopology instanceof ArrayBuffer) throw new Error(\"Expected JSON model topology, received ArrayBuffer.\");\n  return {\n    dateSaved: new Date(),\n    modelTopologyType: \"JSON\",\n    modelTopologyBytes: null == t.modelTopology ? 0 : Lc(JSON.stringify(t.modelTopology)),\n    weightSpecsBytes: null == t.weightSpecs ? 0 : Lc(JSON.stringify(t.weightSpecs)),\n    weightDataBytes: null == t.weightData ? 0 : t.weightData.byteLength\n  };\n}\n\nvar Vc = function () {\n  function t() {\n    this.saveRouters = [], this.loadRouters = [];\n  }\n\n  return t.getInstance = function () {\n    return null == t.instance && (t.instance = new t()), t.instance;\n  }, t.registerSaveRouter = function (e) {\n    t.getInstance().saveRouters.push(e);\n  }, t.registerLoadRouter = function (e) {\n    t.getInstance().loadRouters.push(e);\n  }, t.getSaveHandlers = function (e) {\n    return t.getHandlers(e, \"save\");\n  }, t.getLoadHandlers = function (e, n) {\n    return t.getHandlers(e, \"load\", n);\n  }, t.getHandlers = function (e, n, r) {\n    var o = [];\n    return (\"load\" === n ? t.getInstance().loadRouters : t.getInstance().saveRouters).forEach(function (t) {\n      var n = t(e, r);\n      null !== n && o.push(n);\n    }), o;\n  }, t;\n}(),\n    Gc = \"://\",\n    qc = function () {\n  function t() {\n    this.managers = {};\n  }\n\n  return t.getInstance = function () {\n    return null == t.instance && (t.instance = new t()), t.instance;\n  }, t.registerManager = function (e, n) {\n    d(null != e, function () {\n      return \"scheme must not be undefined or null.\";\n    }), e.endsWith(Gc) && (e = e.slice(0, e.indexOf(Gc))), d(e.length > 0, function () {\n      return \"scheme must not be an empty string.\";\n    });\n    var r = t.getInstance();\n    d(null == r.managers[e], function () {\n      return \"A model store manager is already registered for scheme '\" + e + \"'.\";\n    }), r.managers[e] = n;\n  }, t.getManager = function (t) {\n    var e = this.getInstance().managers[t];\n    if (null == e) throw new Error(\"Cannot find model manager for scheme '\" + t + \"'\");\n    return e;\n  }, t.getSchemes = function () {\n    return Object.keys(this.getInstance().managers);\n  }, t;\n}();\n\nfunction Hc(t) {\n  if (-1 === t.indexOf(Gc)) throw new Error(\"The url string provided does not contain a scheme. Supported schemes are: \" + qc.getSchemes().join(\",\"));\n  return {\n    scheme: t.split(Gc)[0],\n    path: t.split(Gc)[1]\n  };\n}\n\nfunction $c(t, e, n) {\n  return void 0 === n && (n = !1), r(this, void 0, void 0, function () {\n    var r, a, i, s, u, l, c, h, p;\n    return o(this, function (o) {\n      switch (o.label) {\n        case 0:\n          return d(t !== e, function () {\n            return \"Old path and new path are the same: '\" + t + \"'\";\n          }), d((r = Vc.getLoadHandlers(t)).length > 0, function () {\n            return \"Copying failed because no load handler is found for source URL \" + t + \".\";\n          }), d(r.length < 2, function () {\n            return \"Copying failed because more than one (\" + r.length + \") load handlers for source URL \" + t + \".\";\n          }), a = r[0], d((i = Vc.getSaveHandlers(e)).length > 0, function () {\n            return \"Copying failed because no save handler is found for destination URL \" + e + \".\";\n          }), d(i.length < 2, function () {\n            return \"Copying failed because more than one (\" + r.length + \") save handlers for destination URL \" + e + \".\";\n          }), s = i[0], u = Hc(t).scheme, l = Hc(t).path, c = u === Hc(t).scheme, [4, a.load()];\n\n        case 1:\n          return h = o.sent(), n && c ? [4, qc.getManager(u).removeModel(l)] : [3, 3];\n\n        case 2:\n          o.sent(), o.label = 3;\n\n        case 3:\n          return [4, s.save(h)];\n\n        case 4:\n          return p = o.sent(), !n || c ? [3, 6] : [4, qc.getManager(u).removeModel(l)];\n\n        case 5:\n          o.sent(), o.label = 6;\n\n        case 6:\n          return [2, p.modelArtifactsInfo];\n      }\n    });\n  });\n}\n\nvar jc = \"models_store\",\n    Kc = \"model_info_store\";\n\nfunction Xc() {\n  if (!s.getBool(\"IS_BROWSER\")) throw new Error(\"Failed to obtain IndexedDB factory because the current environmentis not a web browser.\");\n  var t = window,\n      e = t.indexedDB || t.mozIndexedDB || t.webkitIndexedDB || t.msIndexedDB || t.shimIndexedDB;\n  if (null == e) throw new Error(\"The current browser does not appear to support IndexedDB.\");\n  return e;\n}\n\nfunction Yc(t) {\n  var e = t.result;\n  e.createObjectStore(jc, {\n    keyPath: \"modelPath\"\n  }), e.createObjectStore(Kc, {\n    keyPath: \"modelPath\"\n  });\n}\n\nvar Qc = function () {\n  function t(t) {\n    if (this.indexedDB = Xc(), null == t || !t) throw new Error(\"For IndexedDB, modelPath must not be null, undefined or empty.\");\n    this.modelPath = t;\n  }\n\n  return t.prototype.save = function (t) {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (e) {\n        if (t.modelTopology instanceof ArrayBuffer) throw new Error(\"BrowserLocalStorage.save() does not support saving model topology in binary formats yet.\");\n        return [2, this.databaseAction(this.modelPath, t)];\n      });\n    });\n  }, t.prototype.load = function () {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (t) {\n        return [2, this.databaseAction(this.modelPath)];\n      });\n    });\n  }, t.prototype.databaseAction = function (t, e) {\n    var n = this;\n    return new Promise(function (t, r) {\n      var o = n.indexedDB.open(\"tensorflowjs\", 1);\n      o.onupgradeneeded = function () {\n        return Yc(o);\n      }, o.onsuccess = function () {\n        var a = o.result;\n\n        if (null == e) {\n          var i = a.transaction(jc, \"readonly\"),\n              s = i.objectStore(jc).get(n.modelPath);\n          s.onsuccess = function () {\n            if (null == s.result) return a.close(), r(new Error(\"Cannot find model with path '\" + n.modelPath + \"' in IndexedDB.\"));\n            t(s.result.modelArtifacts);\n          }, s.onerror = function (t) {\n            return a.close(), r(s.error);\n          }, i.oncomplete = function () {\n            return a.close();\n          };\n        } else {\n          var u,\n              l = zc(e),\n              c = a.transaction(Kc, \"readwrite\"),\n              h = c.objectStore(Kc),\n              p = h.put({\n            modelPath: n.modelPath,\n            modelArtifactsInfo: l\n          });\n          p.onsuccess = function () {\n            var o = (u = a.transaction(jc, \"readwrite\")).objectStore(jc).put({\n              modelPath: n.modelPath,\n              modelArtifacts: e,\n              modelArtifactsInfo: l\n            });\n            o.onsuccess = function () {\n              return t({\n                modelArtifactsInfo: l\n              });\n            }, o.onerror = function (t) {\n              var e = (h = c.objectStore(Kc)).delete(n.modelPath);\n              e.onsuccess = function () {\n                return a.close(), r(o.error);\n              }, e.onerror = function (t) {\n                return a.close(), r(o.error);\n              };\n            };\n          }, p.onerror = function (t) {\n            return a.close(), r(p.error);\n          }, c.oncomplete = function () {\n            null == u ? a.close() : u.oncomplete = function () {\n              return a.close();\n            };\n          };\n        }\n      }, o.onerror = function (t) {\n        return r(o.error);\n      };\n    });\n  }, t.URL_SCHEME = \"indexeddb://\", t;\n}(),\n    Jc = function (t) {\n  return s.getBool(\"IS_BROWSER\") && !Array.isArray(t) && t.startsWith(Qc.URL_SCHEME) ? (e = t.slice(Qc.URL_SCHEME.length), new Qc(e)) : null;\n  var e;\n};\n\nVc.registerSaveRouter(Jc), Vc.registerLoadRouter(Jc);\n\nvar Zc = function () {\n  function t() {\n    this.indexedDB = Xc();\n  }\n\n  return t.prototype.listModels = function () {\n    return r(this, void 0, void 0, function () {\n      var t = this;\n      return o(this, function (e) {\n        return [2, new Promise(function (e, n) {\n          var r = t.indexedDB.open(\"tensorflowjs\", 1);\n          r.onupgradeneeded = function () {\n            return Yc(r);\n          }, r.onsuccess = function () {\n            var t = r.result,\n                o = t.transaction(Kc, \"readonly\"),\n                a = o.objectStore(Kc).getAll();\n            a.onsuccess = function () {\n              for (var t = {}, n = 0, r = a.result; n < r.length; n++) {\n                var o = r[n];\n                t[o.modelPath] = o.modelArtifactsInfo;\n              }\n\n              e(t);\n            }, a.onerror = function (e) {\n              return t.close(), n(a.error);\n            }, o.oncomplete = function () {\n              return t.close();\n            };\n          }, r.onerror = function (t) {\n            return n(r.error);\n          };\n        })];\n      });\n    });\n  }, t.prototype.removeModel = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e = this;\n      return o(this, function (n) {\n        var r;\n        return t = (r = t).startsWith(Qc.URL_SCHEME) ? r.slice(Qc.URL_SCHEME.length) : r, [2, new Promise(function (n, r) {\n          var o = e.indexedDB.open(\"tensorflowjs\", 1);\n          o.onupgradeneeded = function () {\n            return Yc(o);\n          }, o.onsuccess = function () {\n            var e,\n                a = o.result,\n                i = a.transaction(Kc, \"readwrite\"),\n                s = i.objectStore(Kc),\n                u = s.get(t);\n            u.onsuccess = function () {\n              if (null == u.result) return a.close(), r(new Error(\"Cannot find model with path '\" + t + \"' in IndexedDB.\"));\n\n              var o = s.delete(t),\n                  i = function () {\n                var o = (e = a.transaction(jc, \"readwrite\")).objectStore(jc).delete(t);\n                o.onsuccess = function () {\n                  return n(u.result.modelArtifactsInfo);\n                }, o.onerror = function (t) {\n                  return r(u.error);\n                };\n              };\n\n              o.onsuccess = i, o.onerror = function (t) {\n                return i(), a.close(), r(u.error);\n              };\n            }, u.onerror = function (t) {\n              return a.close(), r(u.error);\n            }, i.oncomplete = function () {\n              null == e ? a.close() : e.oncomplete = function () {\n                return a.close();\n              };\n            };\n          }, o.onerror = function (t) {\n            return r(o.error);\n          };\n        })];\n      });\n    });\n  }, t;\n}();\n\nif (s.getBool(\"IS_BROWSER\")) try {\n  qc.registerManager(Qc.URL_SCHEME, new Zc());\n} catch (t) {}\nvar th = \"/\",\n    eh = \"tensorflowjs_models\",\n    nh = \"info\",\n    rh = \"model_topology\",\n    oh = \"weight_specs\",\n    ah = \"weight_data\",\n    ih = \"model_metadata\";\n\nfunction sh(t) {\n  return {\n    info: [eh, t, nh].join(th),\n    topology: [eh, t, rh].join(th),\n    weightSpecs: [eh, t, oh].join(th),\n    weightData: [eh, t, ah].join(th),\n    modelMetadata: [eh, t, ih].join(th)\n  };\n}\n\nfunction uh(t) {\n  var e = t.split(th);\n  if (e.length < 3) throw new Error(\"Invalid key format: \" + t);\n  return e.slice(1, e.length - 1).join(th);\n}\n\nvar lh = function () {\n  function t(t) {\n    if (!s.getBool(\"IS_BROWSER\") || void 0 === window.localStorage) throw new Error(\"The current environment does not support local storage.\");\n    if (this.LS = window.localStorage, null == t || !t) throw new Error(\"For local storage, modelPath must not be null, undefined or empty.\");\n    this.modelPath = t, this.keys = sh(this.modelPath);\n  }\n\n  return t.prototype.save = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e, n, r;\n      return o(this, function (o) {\n        if (t.modelTopology instanceof ArrayBuffer) throw new Error(\"BrowserLocalStorage.save() does not support saving model topology in binary formats yet.\");\n        e = JSON.stringify(t.modelTopology), n = JSON.stringify(t.weightSpecs), r = zc(t);\n\n        try {\n          return this.LS.setItem(this.keys.info, JSON.stringify(r)), this.LS.setItem(this.keys.topology, e), this.LS.setItem(this.keys.weightSpecs, n), this.LS.setItem(this.keys.weightData, (a = t.weightData, Pc ? Buffer.from(a).toString(\"base64\") : btoa(String.fromCharCode.apply(null, new Uint8Array(a))))), this.LS.setItem(this.keys.modelMetadata, JSON.stringify({\n            format: t.format,\n            generatedBy: t.generatedBy,\n            convertedBy: t.convertedBy\n          })), [2, {\n            modelArtifactsInfo: r\n          }];\n        } catch (t) {\n          throw this.LS.removeItem(this.keys.info), this.LS.removeItem(this.keys.topology), this.LS.removeItem(this.keys.weightSpecs), this.LS.removeItem(this.keys.weightData), this.LS.removeItem(this.keys.modelMetadata), new Error(\"Failed to save model '\" + this.modelPath + \"' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=\" + r.modelTopologyBytes + \", weightSpecsBytes=\" + r.weightSpecsBytes + \", weightDataBytes=\" + r.weightDataBytes + \".\");\n        }\n\n        var a;\n        return [2];\n      });\n    });\n  }, t.prototype.load = function () {\n    return r(this, void 0, void 0, function () {\n      var t, e, n, r, a, i, s;\n      return o(this, function (o) {\n        if (null == (t = JSON.parse(this.LS.getItem(this.keys.info)))) throw new Error(\"In local storage, there is no model with name '\" + this.modelPath + \"'\");\n        if (\"JSON\" !== t.modelTopologyType) throw new Error(\"BrowserLocalStorage does not support loading non-JSON model topology yet.\");\n        if (e = {}, null == (n = JSON.parse(this.LS.getItem(this.keys.topology)))) throw new Error(\"In local storage, the topology of model '\" + this.modelPath + \"' is missing.\");\n        if (e.modelTopology = n, null == (r = JSON.parse(this.LS.getItem(this.keys.weightSpecs)))) throw new Error(\"In local storage, the weight specs of model '\" + this.modelPath + \"' are missing.\");\n        if (e.weightSpecs = r, null != (a = this.LS.getItem(this.keys.modelMetadata)) && (i = JSON.parse(a), e.format = i.format, e.generatedBy = i.generatedBy, e.convertedBy = i.convertedBy), null == (s = this.LS.getItem(this.keys.weightData))) throw new Error(\"In local storage, the binary weight values of model '\" + this.modelPath + \"' are missing.\");\n        return e.weightData = function (t) {\n          if (Pc) {\n            var e = Buffer.from(t, \"base64\");\n            return e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength);\n          }\n\n          for (var n = atob(t), r = new Uint8Array(n.length), o = 0; o < n.length; ++o) r.set([n.charCodeAt(o)], o);\n\n          return r.buffer;\n        }(s), [2, e];\n      });\n    });\n  }, t.URL_SCHEME = \"localstorage://\", t;\n}(),\n    ch = function (t) {\n  return s.getBool(\"IS_BROWSER\") && !Array.isArray(t) && t.startsWith(lh.URL_SCHEME) ? (e = t.slice(lh.URL_SCHEME.length), new lh(e)) : null;\n  var e;\n};\n\nVc.registerSaveRouter(ch), Vc.registerLoadRouter(ch);\n\nvar hh = function () {\n  function t() {\n    d(s.getBool(\"IS_BROWSER\"), function () {\n      return \"Current environment is not a web browser\";\n    }), d(void 0 !== window.localStorage, function () {\n      return \"Current browser does not appear to support localStorage\";\n    }), this.LS = window.localStorage;\n  }\n\n  return t.prototype.listModels = function () {\n    return r(this, void 0, void 0, function () {\n      var t, e, n, r, a, i;\n      return o(this, function (o) {\n        for (t = {}, e = eh + th, n = th + nh, r = 0; r < this.LS.length; ++r) (a = this.LS.key(r)).startsWith(e) && a.endsWith(n) && (i = uh(a), t[i] = JSON.parse(this.LS.getItem(a)));\n\n        return [2, t];\n      });\n    });\n  }, t.prototype.removeModel = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e, n;\n      return o(this, function (r) {\n        var o;\n        if (t = (o = t).startsWith(lh.URL_SCHEME) ? o.slice(lh.URL_SCHEME.length) : o, e = sh(t), null == this.LS.getItem(e.info)) throw new Error(\"Cannot find model at path '\" + t + \"'\");\n        return n = JSON.parse(this.LS.getItem(e.info)), this.LS.removeItem(e.info), this.LS.removeItem(e.topology), this.LS.removeItem(e.weightSpecs), this.LS.removeItem(e.weightData), [2, n];\n      });\n    });\n  }, t;\n}();\n\nif (s.getBool(\"IS_BROWSER\")) try {\n  qc.registerManager(lh.URL_SCHEME, new hh());\n} catch (t) {}\nvar ph = \"model\",\n    fh = \".json\",\n    dh = \".weights.bin\";\n\nfunction vh(t) {\n  return new Promise(function (t) {\n    return setTimeout(t);\n  }).then(t);\n}\n\nvar mh = function () {\n  function t(e) {\n    if (!s.getBool(\"IS_BROWSER\")) throw new Error(\"browserDownloads() cannot proceed because the current environment is not a browser.\");\n    e.startsWith(t.URL_SCHEME) && (e = e.slice(t.URL_SCHEME.length)), null != e && 0 !== e.length || (e = ph), this.modelTopologyFileName = e + fh, this.weightDataFileName = e + dh;\n  }\n\n  return t.prototype.save = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e, n, r, a, i, s;\n      return o(this, function (o) {\n        switch (o.label) {\n          case 0:\n            if (\"undefined\" == typeof document) throw new Error(\"Browser downloads are not supported in this environment since `document` is not present\");\n            if (e = window.URL.createObjectURL(new Blob([t.weightData], {\n              type: \"application/octet-stream\"\n            })), !(t.modelTopology instanceof ArrayBuffer)) return [3, 1];\n            throw new Error(\"BrowserDownloads.save() does not support saving model topology in binary formats yet.\");\n\n          case 1:\n            return n = [{\n              paths: [\"./\" + this.weightDataFileName],\n              weights: t.weightSpecs\n            }], r = {\n              modelTopology: t.modelTopology,\n              format: t.format,\n              generatedBy: t.generatedBy,\n              convertedBy: t.convertedBy,\n              weightsManifest: n\n            }, a = window.URL.createObjectURL(new Blob([JSON.stringify(r)], {\n              type: \"application/json\"\n            })), (i = null == this.jsonAnchor ? document.createElement(\"a\") : this.jsonAnchor).download = this.modelTopologyFileName, i.href = a, [4, vh(function () {\n              return i.dispatchEvent(new MouseEvent(\"click\"));\n            })];\n\n          case 2:\n            return o.sent(), null == t.weightData ? [3, 4] : ((s = null == this.weightDataAnchor ? document.createElement(\"a\") : this.weightDataAnchor).download = this.weightDataFileName, s.href = e, [4, vh(function () {\n              return s.dispatchEvent(new MouseEvent(\"click\"));\n            })]);\n\n          case 3:\n            o.sent(), o.label = 4;\n\n          case 4:\n            return [2, {\n              modelArtifactsInfo: zc(t)\n            }];\n        }\n      });\n    });\n  }, t.URL_SCHEME = \"downloads://\", t;\n}(),\n    gh = function () {\n  function t(t) {\n    if (null == t || t.length < 1) throw new Error(\"When calling browserFiles, at least 1 file is required, but received \" + t);\n    this.files = t;\n  }\n\n  return t.prototype.load = function () {\n    return r(this, void 0, void 0, function () {\n      var t,\n          e,\n          n = this;\n      return o(this, function (r) {\n        return t = this.files[0], e = this.files.slice(1), [2, new Promise(function (r, o) {\n          var a = new FileReader();\n          a.onload = function (a) {\n            var i = JSON.parse(a.target.result),\n                s = i.modelTopology;\n\n            if (null != s) {\n              0 === e.length && r({\n                modelTopology: s\n              });\n              var u = i.weightsManifest;\n\n              if (null != u) {\n                var l;\n\n                try {\n                  l = n.checkManifestAndWeightFiles(u, e);\n                } catch (t) {\n                  return void o(t);\n                }\n\n                var c = [],\n                    h = [],\n                    p = [];\n                u.forEach(function (t) {\n                  t.paths.forEach(function (t) {\n                    h.push(t), p.push(null);\n                  }), c.push.apply(c, t.weights);\n                }), u.forEach(function (t) {\n                  t.paths.forEach(function (t) {\n                    var e = new FileReader();\n                    e.onload = function (e) {\n                      var n = e.target.result,\n                          o = h.indexOf(t);\n                      p[o] = n, -1 === p.indexOf(null) && r({\n                        modelTopology: s,\n                        weightSpecs: c,\n                        weightData: Wc(p)\n                      });\n                    }, e.onerror = function (e) {\n                      return o(\"Failed to weights data from file of path '\" + t + \"'.\");\n                    }, e.readAsArrayBuffer(l[t]);\n                  });\n                });\n              } else o(new Error(\"weightManifest field is missing from file \" + t.name));\n            } else o(new Error(\"modelTopology field is missing from file \" + t.name));\n          }, a.onerror = function (e) {\n            return o(\"Failed to read model topology and weights manifest JSON from file '\" + t.name + \"'. BrowserFiles supports loading Keras-style tf.Model artifacts only.\");\n          }, a.readAsText(t);\n        })];\n      });\n    });\n  }, t.prototype.checkManifestAndWeightFiles = function (t, e) {\n    for (var n = [], r = e.map(function (t) {\n      return Uc(t.name);\n    }), o = {}, a = 0, i = t; a < i.length; a++) {\n      i[a].paths.forEach(function (t) {\n        var a = Uc(t);\n        if (-1 !== n.indexOf(a)) throw new Error(\"Duplicate file basename found in weights manifest: '\" + a + \"'\");\n        if (n.push(a), -1 === r.indexOf(a)) throw new Error(\"Weight file with basename '\" + a + \"' is not provided.\");\n        o[t] = e[r.indexOf(a)];\n      });\n    }\n\n    if (n.length !== e.length) throw new Error(\"Mismatch in the number of files in weights manifest (\" + n.length + \") and the number of weight files provided (\" + e.length + \").\");\n    return o;\n  }, t;\n}();\n\nfunction yh(t, e, n, r) {\n  !function (t) {\n    d(null != t && Array.isArray(t) && t.length > 0, function () {\n      return \"promises must be a none empty array\";\n    });\n  }(t), function (t, e) {\n    d(t >= 0 && t <= 1, function () {\n      return \"Progress fraction must be in range [0, 1], but got startFraction \" + t;\n    }), d(e >= 0 && e <= 1, function () {\n      return \"Progress fraction must be in range [0, 1], but got endFraction \" + e;\n    }), d(e >= t, function () {\n      return \"startFraction must be no more than endFraction, but got startFraction \" + t + \" and endFraction \" + e;\n    });\n  }(n = null == n ? 0 : n, r = null == r ? 1 : r);\n  var o = 0;\n  return Promise.all(t.map(function (a) {\n    return a.then(function (a) {\n      var i = n + ++o / t.length * (r - n);\n      return e(i), a;\n    }), a;\n  }));\n}\n\nfunction xh(t, e) {\n  return r(this, void 0, void 0, function () {\n    var n, r, a, i, s, u, l, c, h;\n    return o(this, function (o) {\n      switch (o.label) {\n        case 0:\n          return null == e && (e = {}), n = null == e.fetchFunc ? Y : e.fetchFunc, r = t.map(function (t) {\n            return n(t, e.requestInit);\n          }), a = 0, i = .5, null != e.onProgress ? [3, 2] : [4, Promise.all(r)];\n\n        case 1:\n          return s = o.sent(), [3, 4];\n\n        case 2:\n          return [4, yh(r, e.onProgress, a, i)];\n\n        case 3:\n          s = o.sent(), o.label = 4;\n\n        case 4:\n          return u = s.map(function (t) {\n            return t.arrayBuffer();\n          }), l = .5, c = 1, null != e.onProgress ? [3, 6] : [4, Promise.all(u)];\n\n        case 5:\n          return h = o.sent(), [3, 8];\n\n        case 6:\n          return [4, yh(u, e.onProgress, l, c)];\n\n        case 7:\n          h = o.sent(), o.label = 8;\n\n        case 8:\n          return [2, h];\n      }\n    });\n  });\n}\n\nfunction bh(t) {\n  var e = this;\n  return function (n, a, i) {\n    return void 0 === a && (a = \"\"), r(e, void 0, void 0, function () {\n      var e, r, s, u, l, c, h, p, f, d;\n      return o(this, function (o) {\n        switch (o.label) {\n          case 0:\n            if (e = n.map(function () {\n              return !1;\n            }), r = {}, s = null != i ? i.map(function () {\n              return !1;\n            }) : [], u = [], n.forEach(function (t, n) {\n              var o = 0;\n              t.weights.forEach(function (t) {\n                var a = \"quantization\" in t ? t.quantization.dtype : t.dtype,\n                    l = Oc[a] * y(t.shape),\n                    c = function () {\n                  e[n] = !0, null == r[n] && (r[n] = []), r[n].push({\n                    manifestEntry: t,\n                    groupOffset: o,\n                    sizeBytes: l\n                  });\n                };\n\n                null != i ? i.forEach(function (e, n) {\n                  e === t.name && (c(), s[n] = !0);\n                }) : c(), u.push(t.name), o += l;\n              });\n            }), !s.every(function (t) {\n              return t;\n            })) throw l = i.filter(function (t, e) {\n              return !s[e];\n            }), new Error(\"Could not find weights in manifest with names: \" + l.join(\", \") + \". \\nManifest JSON has weights with names: \" + u.join(\", \") + \".\");\n            return c = e.reduce(function (t, e, n) {\n              return e && t.push(n), t;\n            }, []), h = [], c.forEach(function (t) {\n              n[t].paths.forEach(function (t) {\n                var e = a + (a.endsWith(\"/\") ? \"\" : \"/\") + t;\n                h.push(e);\n              });\n            }), [4, t(h)];\n\n          case 1:\n            return p = o.sent(), f = {}, d = 0, c.forEach(function (t) {\n              for (var e = n[t].paths.length, o = 0, a = 0; a < e; a++) o += p[d + a].byteLength;\n\n              for (var i = new ArrayBuffer(o), s = new Uint8Array(i), u = 0, l = 0; l < e; l++) {\n                var c = new Uint8Array(p[d + l]);\n                s.set(c, u), u += c.byteLength;\n              }\n\n              r[t].forEach(function (t) {\n                var e = Fc(i.slice(t.groupOffset, t.groupOffset + t.sizeBytes), [t.manifestEntry]);\n\n                for (var n in e) f[n] = e[n];\n              }), d += e;\n            }), [2, f];\n        }\n      });\n    });\n  };\n}\n\nVc.registerSaveRouter(function (t) {\n  return s.getBool(\"IS_BROWSER\") && !Array.isArray(t) && t.startsWith(mh.URL_SCHEME) ? (e = t.slice(mh.URL_SCHEME.length), void 0 === e && (e = \"model\"), new mh(e)) : null;\n  var e;\n});\n\nvar wh = function () {\n  function t(t, e) {\n    if (this.DEFAULT_METHOD = \"POST\", null == e && (e = {}), this.weightPathPrefix = e.weightPathPrefix, this.onProgress = e.onProgress, null != e.fetchFunc ? (d(\"function\" == typeof e.fetchFunc, function () {\n      return \"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\";\n    }), this.fetch = e.fetchFunc) : this.fetch = Y, d(null != t && t.length > 0, function () {\n      return \"URL path for http must not be null, undefined or empty.\";\n    }), Array.isArray(t) && d(2 === t.length, function () {\n      return \"URL paths for http must have a length of 2, (actual length is \" + t.length + \").\";\n    }), this.path = t, null != e.requestInit && null != e.requestInit.body) throw new Error(\"requestInit is expected to have no pre-existing body, but has one.\");\n    this.requestInit = e.requestInit || {};\n  }\n\n  return t.prototype.save = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e, n, r, a;\n      return o(this, function (o) {\n        switch (o.label) {\n          case 0:\n            if (t.modelTopology instanceof ArrayBuffer) throw new Error(\"BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.\");\n            return (e = Object.assign({\n              method: this.DEFAULT_METHOD\n            }, this.requestInit)).body = new FormData(), n = [{\n              paths: [\"./model.weights.bin\"],\n              weights: t.weightSpecs\n            }], r = {\n              modelTopology: t.modelTopology,\n              format: t.format,\n              generatedBy: t.generatedBy,\n              convertedBy: t.convertedBy,\n              weightsManifest: n\n            }, e.body.append(\"model.json\", new Blob([JSON.stringify(r)], {\n              type: \"application/json\"\n            }), \"model.json\"), null != t.weightData && e.body.append(\"model.weights.bin\", new Blob([t.weightData], {\n              type: \"application/octet-stream\"\n            }), \"model.weights.bin\"), [4, this.fetch(this.path, e)];\n\n          case 1:\n            if ((a = o.sent()).ok) return [2, {\n              modelArtifactsInfo: zc(t),\n              responses: [a]\n            }];\n            throw new Error(\"BrowserHTTPRequest.save() failed due to HTTP response status \" + a.status + \".\");\n        }\n      });\n    });\n  }, t.prototype.load = function () {\n    return r(this, void 0, void 0, function () {\n      var t, e, n, r, a, i, s, u;\n      return o(this, function (o) {\n        switch (o.label) {\n          case 0:\n            return [4, this.fetch(this.path, this.requestInit)];\n\n          case 1:\n            if (!(t = o.sent()).ok) throw new Error(\"Request to \" + this.path + \" failed with status code \" + t.status + \". Please verify this URL points to the model JSON of the model to load.\");\n            o.label = 2;\n\n          case 2:\n            return o.trys.push([2, 4,, 5]), [4, t.json()];\n\n          case 3:\n            return e = o.sent(), [3, 5];\n\n          case 4:\n            throw o.sent(), n = \"Failed to parse model JSON of response from \" + this.path + \".\", this.path.endsWith(\".pb\") ? n += \" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.\" : n += \" Please make sure the server is serving valid JSON for this request.\", new Error(n);\n\n          case 5:\n            if (r = e.modelTopology, a = e.weightsManifest, null == r && null == a) throw new Error(\"The JSON from HTTP path \" + this.path + \" contains neither model topology or manifest for weights.\");\n            return null == a ? [3, 7] : [4, this.loadWeights(a)];\n\n          case 6:\n            u = o.sent(), i = u[0], s = u[1], o.label = 7;\n\n          case 7:\n            return [2, {\n              modelTopology: r,\n              weightSpecs: i,\n              weightData: s\n            }];\n        }\n      });\n    });\n  }, t.prototype.loadWeights = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e, n, r, a, i, s, u, l, c, h, p;\n      return o(this, function (o) {\n        switch (o.label) {\n          case 0:\n            for (e = Array.isArray(this.path) ? this.path[1] : this.path, n = function (t) {\n              var e = t.lastIndexOf(\"/\"),\n                  n = t.lastIndexOf(\"?\"),\n                  r = t.substring(0, e),\n                  o = n > e ? t.substring(n) : \"\";\n              return [r + \"/\", o];\n            }(e), r = n[0], a = n[1], i = this.weightPathPrefix || r, s = [], u = 0, l = t; u < l.length; u++) c = l[u], s.push.apply(s, c.weights);\n\n            return h = [], t.forEach(function (t) {\n              t.paths.forEach(function (t) {\n                h.push(i + t + a);\n              });\n            }), [4, xh(h, {\n              requestInit: this.requestInit,\n              fetchFunc: this.fetch,\n              onProgress: this.onProgress\n            })];\n\n          case 1:\n            return p = o.sent(), [2, [s, Wc(p)]];\n        }\n      });\n    });\n  }, t.URL_SCHEME_REGEX = /^https?:\\/\\//, t;\n}();\n\nfunction Ch(t) {\n  return null != t.match(wh.URL_SCHEME_REGEX);\n}\n\nvar Eh = function (t, e) {\n  return (Array.isArray(t) ? t.every(function (t) {\n    return Ch(t);\n  }) : Ch(t)) ? Rh(t, {\n    onProgress: e\n  }) : null;\n};\n\nfunction Rh(t, e) {\n  return new wh(t, e);\n}\n\nVc.registerSaveRouter(Eh), Vc.registerLoadRouter(Eh);\n\nvar Ih = function () {\n  function t(t, e, n, r) {\n    this.modelTopology = t, this.weightSpecs = e, this.weightData = n, this.trainingConfig = r;\n  }\n\n  return t.prototype.load = function () {\n    return r(this, void 0, void 0, function () {\n      var t;\n      return o(this, function (e) {\n        return t = {}, null != this.modelTopology && (t = n({\n          modelTopology: this.modelTopology\n        }, t)), null != this.weightSpecs && this.weightSpecs.length > 0 && (t = n({\n          weightSpecs: this.weightSpecs\n        }, t)), null != this.weightData && this.weightData.byteLength > 0 && (t = n({\n          weightData: this.weightData\n        }, t)), null != this.trainingConfig && (t = n({\n          trainingConfig: this.trainingConfig\n        }, t)), [2, t];\n      });\n    });\n  }, t;\n}(),\n    Sh = function () {\n  function t(t) {\n    this.saveHandler = t;\n  }\n\n  return t.prototype.save = function (t) {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (e) {\n        return [2, this.saveHandler(t)];\n      });\n    });\n  }, t;\n}();\n\nvar Nh = Object.freeze({\n  browserFiles: function (t) {\n    return new gh(t);\n  },\n  browserHTTPRequest: function (t, e) {\n    return Rh(t, e);\n  },\n  concatenateArrayBuffers: Wc,\n  decodeWeights: Fc,\n  encodeWeights: function (t, e) {\n    return r(this, void 0, void 0, function () {\n      var n,\n          a,\n          i,\n          s,\n          u,\n          l = this;\n      return o(this, function (c) {\n        switch (c.label) {\n          case 0:\n            for (n = [], a = [], i = Array.isArray(t) ? t.map(function (t) {\n              return t.name;\n            }) : Object.keys(t), s = function (s) {\n              var u = i[s],\n                  c = Array.isArray(t) ? t[s].tensor : t[u];\n              if (\"float32\" !== c.dtype && \"int32\" !== c.dtype && \"bool\" !== c.dtype && \"string\" !== c.dtype) throw new Error(\"Unsupported dtype in weight '\" + u + \"': \" + c.dtype);\n              var h = {\n                name: u,\n                shape: c.shape,\n                dtype: c.dtype\n              };\n\n              if (\"string\" === c.dtype) {\n                var p = new Promise(function (t) {\n                  return r(l, void 0, void 0, function () {\n                    var e, n, r, a, i, s, u;\n                    return o(this, function (o) {\n                      switch (o.label) {\n                        case 0:\n                          return [4, c.bytes()];\n\n                        case 1:\n                          for (e = o.sent(), n = e.reduce(function (t, e) {\n                            return t + e.length;\n                          }, 0) + Mc * e.length, r = new Uint8Array(n), a = 0, i = 0; i < e.length; i++) s = e[i], u = new Uint8Array(new Uint32Array([s.length]).buffer), r.set(u, a), a += Mc, r.set(s, a), a += s.length;\n\n                          return t(r), [2];\n                      }\n                    });\n                  });\n                });\n                a.push(p);\n              } else a.push(c.data());\n\n              null != e && (h.group = e), n.push(h);\n            }, u = 0; u < i.length; ++u) s(u);\n\n            return [4, Promise.all(a)];\n\n          case 1:\n            return [2, {\n              data: Bc(c.sent()),\n              specs: n\n            }];\n        }\n      });\n    });\n  },\n  fromMemory: function (t, e, n, r) {\n    return new Ih(t, e, n, r);\n  },\n  getLoadHandlers: function (t, e) {\n    return Vc.getLoadHandlers(t, e);\n  },\n  getModelArtifactsInfoForJSON: zc,\n  getSaveHandlers: function (t) {\n    return Vc.getSaveHandlers(t);\n  },\n  http: Rh,\n  isHTTPScheme: Ch,\n  loadWeights: function (t, e, n, a) {\n    return void 0 === e && (e = \"\"), r(this, void 0, void 0, function () {\n      return o(this, function (r) {\n        return [2, bh(function (t) {\n          return xh(t, {\n            requestInit: a\n          });\n        })(t, e, n)];\n      });\n    });\n  },\n  registerLoadRouter: function (t) {\n    return Vc.registerLoadRouter(t);\n  },\n  registerSaveRouter: function (t) {\n    return Vc.registerSaveRouter(t);\n  },\n  weightsLoaderFactory: bh,\n  withSaveHandler: function (t) {\n    return new Sh(t);\n  },\n  copyModel: function (t, e) {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (n) {\n        return [2, $c(t, e, !1)];\n      });\n    });\n  },\n  listModels: function () {\n    return r(this, void 0, void 0, function () {\n      var t, e, n, r, a, i, s;\n      return o(this, function (o) {\n        switch (o.label) {\n          case 0:\n            t = qc.getSchemes(), e = {}, n = 0, r = t, o.label = 1;\n\n          case 1:\n            return n < r.length ? (a = r[n], [4, qc.getManager(a).listModels()]) : [3, 4];\n\n          case 2:\n            for (s in i = o.sent()) e[a + Gc + s] = i[s];\n\n            o.label = 3;\n\n          case 3:\n            return n++, [3, 1];\n\n          case 4:\n            return [2, e];\n        }\n      });\n    });\n  },\n  moveModel: function (t, e) {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (n) {\n        return [2, $c(t, e, !0)];\n      });\n    });\n  },\n  removeModel: function (t) {\n    return r(this, void 0, void 0, function () {\n      var e;\n      return o(this, function (n) {\n        return e = Hc(t), [2, qc.getManager(e.scheme).removeModel(e.path)];\n      });\n    });\n  }\n});\nvar kh = pn({\n  confusionMatrix_: function (t, e, n) {\n    var r = Ze(t, \"labels\", \"confusionMatrix\"),\n        o = Ze(e, \"predictions\", \"confusionMatrix\");\n    d(null == n || n > 0 && Number.isInteger(n), function () {\n      return \"If provided, numClasses must be a positive integer, but got \" + n;\n    }), d(1 === r.rank, function () {\n      return \"Expected the rank of labels to be 1, but got \" + r.rank;\n    }), d(1 === o.rank, function () {\n      return \"Expected the rank of predictions to be 1, but got \" + o.rank;\n    }), d(r.shape[0] === o.shape[0], function () {\n      return \"Mismatch in the number of examples: \" + r.shape[0] + \" vs. \" + o.shape[0] + \". Labels and predictions should have the same number of elements.\";\n    }), d(n > 0 && Number.isInteger(n), function () {\n      return \"numClasses is required to be a positive integer, but got \" + n;\n    });\n    var a = ar(r.asType(\"int32\"), n),\n        i = ar(o.asType(\"int32\"), n);\n    return a.transpose().matMul(i).asType(\"int32\");\n  }\n}),\n    Ah = Object.freeze({\n  confusionMatrix: kh\n});\n\nvar Th = pn({\n  fromPixels_: function (t, e) {\n    if (void 0 === e && (e = 3), e > 4) throw new Error(\"Cannot construct Tensor with more than 4 channels from pixels.\");\n    return Dt.fromPixels(t, e);\n  }\n}),\n    Dh = Object.freeze({\n  toPixels: function (t, e) {\n    return r(this, void 0, void 0, function () {\n      var n, r, a, i, s, u, l, c, h, p, f, d, v, m, g, y, x, b, w, C, E, R, I;\n      return o(this, function (o) {\n        switch (o.label) {\n          case 0:\n            if (n = Ze(t, \"img\", \"toPixels\"), t instanceof ft || (n = n.toInt()), 2 !== n.rank && 3 !== n.rank) throw new Error(\"toPixels only supports rank 2 or 3 tensors, got rank \" + n.rank + \".\");\n            if (r = n.shape.slice(0, 2), a = r[0], i = r[1], (s = 2 === n.rank ? 1 : n.shape[2]) > 4 || 2 === s) throw new Error(\"toPixels only supports depth of size 1, 3 or 4 but got \" + s);\n            return [4, n.data()];\n\n          case 1:\n            return u = o.sent(), l = n.min(), c = n.max(), [4, Promise.all([l.data(), c.data()])];\n\n          case 2:\n            if (h = o.sent(), p = h[0], f = h[1], d = p[0], v = f[0], l.dispose(), c.dispose(), \"float32\" === n.dtype) {\n              if (d < 0 || v > 1) throw new Error(\"Tensor values for a float32 Tensor must be in the range [0 - 1] but got range [\" + d + \" - \" + v + \"].\");\n            } else {\n              if (\"int32\" !== n.dtype) throw new Error(\"Unsupported type for toPixels: \" + n.dtype + \". Please use float32 or int32 tensors.\");\n              if (d < 0 || v > 255) throw new Error(\"Tensor values for a int32 Tensor must be in the range [0 - 255] but got range [\" + d + \" - \" + v + \"].\");\n            }\n\n            for (m = \"float32\" === n.dtype ? 255 : 1, g = new Uint8ClampedArray(i * a * 4), y = 0; y < a * i; ++y) x = void 0, b = void 0, w = void 0, C = void 0, 1 === s ? (x = u[y] * m, b = u[y] * m, w = u[y] * m, C = 255) : 3 === s ? (x = u[3 * y] * m, b = u[3 * y + 1] * m, w = u[3 * y + 2] * m, C = 255) : 4 === s && (x = u[4 * y] * m, b = u[4 * y + 1] * m, w = u[4 * y + 2] * m, C = u[4 * y + 3] * m), g[0 + (E = 4 * y)] = Math.round(x), g[E + 1] = Math.round(b), g[E + 2] = Math.round(w), g[E + 3] = Math.round(C);\n\n            return null != e && (e.width = i, e.height = a, R = e.getContext(\"2d\"), I = new ImageData(g, i, a), R.putImageData(I, 0, 0)), n !== t && n.dispose(), [2, g];\n        }\n      });\n    });\n  },\n  fromPixels: Th\n}),\n    _h = function () {\n  function t() {}\n\n  return t.prototype.getClassName = function () {\n    return this.constructor.className;\n  }, t.fromConfig = function (t, e) {\n    return new t(e);\n  }, t;\n}(),\n    Oh = function () {\n  function t() {\n    this.classNameMap = {};\n  }\n\n  return t.getMap = function () {\n    return null == t.instance && (t.instance = new t()), t.instance;\n  }, t.register = function (e) {\n    t.getMap().classNameMap[e.className] = [e, e.fromConfig];\n  }, t;\n}();\n\nfunction Mh(t) {\n  d(null != t.className, function () {\n    return \"Class being registered does not have the static className property defined.\";\n  }), d(\"string\" == typeof t.className, function () {\n    return \"className is required to be a string, but got type \" + typeof t.className;\n  }), d(t.className.length > 0, function () {\n    return \"Class being registered has an empty-string as its className, which is disallowed.\";\n  }), Oh.register(t);\n}\n\nvar Fh = Object.freeze({\n  Serializable: _h,\n  SerializationMap: Oh,\n  registerClass: Mh\n}),\n    Bh = .001,\n    Ph = .1;\n\nfunction Lh() {\n  return 32 === Dt.backend.floatPrecision() ? Bh : Ph;\n}\n\nfunction Wh(t, e, n) {\n  var r = !0;\n\n  if ((M(t) || M(e)) && (r = !1), M(t) && M(e) && (r = !0), r) {\n    var o = t.constructor.name,\n        a = e.constructor.name;\n    if (o !== a) throw new Error(\"Arrays are of different type. Actual: \" + o + \". Expected: \" + a);\n  }\n\n  if (Array.isArray(t) && Array.isArray(e)) {\n    var i = Qe(t),\n        s = Qe(e);\n    if (!x(i, s)) throw new Error(\"Arrays have different shapes. Actual: [\" + i + \"]. Expected: [\" + s + \"]\");\n  }\n\n  var u = M(t) ? t : g(t),\n      l = M(e) ? e : g(e);\n  if (u.length !== l.length) throw new Error(\"Arrays have different lengths actual: \" + u.length + \" vs expected: \" + l.length + \".\\nActual:   \" + u + \".\\nExpected: \" + l + \".\");\n\n  for (var c = 0; c < l.length; ++c) {\n    var h = u[c],\n        p = l[c];\n    if (!n(h, p)) throw new Error(\"Arrays differ: actual[\" + c + \"] = \" + h + \", expected[\" + c + \"] = \" + p + \".\\nActual:   \" + u + \".\\nExpected: \" + l + \".\");\n  }\n}\n\nfunction Uh(t, e, n) {\n  return !isFinite(t) && !isFinite(e) || !(isNaN(t) || isNaN(e) || Math.abs(t - e) > n);\n}\n\nvar zh = Object.freeze({\n  TEST_EPSILON_FLOAT16: Ph,\n  expectArraysClose: function (t, e, n) {\n    return null == n && (n = Lh()), Wh(t, e, function (t, e) {\n      return Uh(t, e, n);\n    });\n  },\n  testEpsilon: Lh,\n  expectPromiseToFail: function (t, e) {\n    t().then(function () {\n      return e.fail();\n    }, function () {\n      return e();\n    });\n  },\n  expectArraysEqual: function (t, e) {\n    var n = \"string\" == typeof e || \"number\" == typeof e || \"boolean\" == typeof e ? [e] : e;\n    return P(t) || P(t[0]) || P(e) || P(e[0]) ? Wh(t, n, function (t, e) {\n      return t == e;\n    }) : Wh(t, e, function (t, e) {\n      return Uh(t, e, 0);\n    });\n  },\n  expectNumbersClose: function (t, e, n) {\n    if (null == n && (n = Lh()), !Uh(t, e, n)) throw new Error(\"Numbers differ: actual === \" + t + \", expected === \" + e);\n  },\n  expectValuesInRange: function (t, e, n) {\n    for (var r = 0; r < t.length; r++) if (t[r] < e || t[r] > n) throw new Error(\"Value out of range:\" + t[r] + \" low: \" + e + \", high: \" + n);\n  },\n  expectArrayBuffersEqual: function (t, e) {\n    expect(new Float32Array(t)).toEqual(new Float32Array(e));\n  }\n}),\n    Vh = \"1.2.6\",\n    Gh = Object.freeze({\n  gpgpu_util: ri,\n  webgl_util: Ae,\n  MathBackendWebGL: as,\n  setWebGLContext: Ft,\n  GPGPUContext: oi\n}),\n    qh = function (t) {\n  function n() {\n    return null !== t && t.apply(this, arguments) || this;\n  }\n\n  return e(n, t), n.prototype.minimize = function (t, e, n) {\n    void 0 === e && (e = !1);\n    var r = this.computeGradients(t, n),\n        o = r.value,\n        a = r.grads;\n\n    if (null != n) {\n      var i = n.map(function (t) {\n        return {\n          name: t.name,\n          tensor: a[t.name]\n        };\n      });\n      this.applyGradients(i);\n    } else this.applyGradients(a);\n\n    return Le(a), e ? o : (o.dispose(), null);\n  }, Object.defineProperty(n.prototype, \"iterations\", {\n    get: function () {\n      return null == this.iterations_ && (this.iterations_ = 0), this.iterations_;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), n.prototype.incrementIterations = function () {\n    this.iterations_ = this.iterations + 1;\n  }, n.prototype.computeGradients = function (t, e) {\n    return zr(t, e);\n  }, n.prototype.dispose = function () {\n    null != this.iterations_ && Le(this.iterations_);\n  }, n.prototype.saveIterations = function () {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (t) {\n        return null == this.iterations_ && (this.iterations_ = 0), [2, {\n          name: \"iter\",\n          tensor: yn(this.iterations_, \"int32\")\n        }];\n      });\n    });\n  }, n.prototype.getWeights = function () {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (t) {\n        throw new Error(\"getWeights() is not implemented for this optimizer yet.\");\n      });\n    });\n  }, n.prototype.setWeights = function (t) {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (t) {\n        throw new Error(\"setWeights() is not implemented for this optimizer class \" + this.getClassName());\n      });\n    });\n  }, n.prototype.extractIterations = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e;\n      return o(this, function (n) {\n        switch (n.label) {\n          case 0:\n            return e = this, [4, t[0].tensor.data()];\n\n          case 1:\n            return e.iterations_ = n.sent()[0], [2, t.slice(1)];\n        }\n      });\n    });\n  }, n;\n}(_h);\n\nObject.defineProperty(qh, Symbol.hasInstance, {\n  value: function (t) {\n    return null != t.minimize && null != t.computeGradients && null != t.applyGradients;\n  }\n});\n\nvar Hh = function (t) {\n  function n(e, n, r) {\n    void 0 === r && (r = null);\n    var o = t.call(this) || this;\n    return o.learningRate = e, o.rho = n, o.epsilon = r, o.accumulatedGrads = [], o.accumulatedUpdates = [], null == r && (o.epsilon = Dt.backend.epsilon()), o;\n  }\n\n  return e(n, t), n.prototype.applyGradients = function (t) {\n    var e = this;\n    (Array.isArray(t) ? t.map(function (t) {\n      return t.name;\n    }) : Object.keys(t)).forEach(function (n, r) {\n      var o = Dt.registeredVariables[n];\n      null == e.accumulatedGrads[r] && (e.accumulatedGrads[r] = {\n        originalName: n + \"/accum_grad\",\n        variable: Pe(function () {\n          return Dn(o).variable(!1);\n        })\n      }), null == e.accumulatedUpdates[r] && (e.accumulatedUpdates[r] = {\n        originalName: n + \"/accum_var\",\n        variable: Pe(function () {\n          return Dn(o).variable(!1);\n        })\n      });\n      var a = Array.isArray(t) ? t[r].tensor : t[n];\n\n      if (null != a) {\n        var i = e.accumulatedGrads[r].variable,\n            s = e.accumulatedUpdates[r].variable;\n        Pe(function () {\n          var t = i.mul(e.rho).add(a.square().mul(1 - e.rho)),\n              n = s.add(e.epsilon).sqrt().div(i.add(e.epsilon).sqrt()).mul(a),\n              r = s.mul(e.rho).add(n.square().mul(1 - e.rho));\n          i.assign(t), s.assign(r);\n          var u = n.mul(-e.learningRate).add(o);\n          o.assign(u);\n        });\n      }\n    }), this.incrementIterations();\n  }, n.prototype.dispose = function () {\n    null != this.accumulatedUpdates && (Le(this.accumulatedGrads.map(function (t) {\n      return t.variable;\n    })), Le(this.accumulatedUpdates.map(function (t) {\n      return t.variable;\n    })));\n  }, n.prototype.getWeights = function () {\n    return r(this, void 0, void 0, function () {\n      var t;\n      return o(this, function (e) {\n        switch (e.label) {\n          case 0:\n            return t = this.accumulatedGrads.concat(this.accumulatedUpdates), [4, this.saveIterations()];\n\n          case 1:\n            return [2, [e.sent()].concat(t.map(function (t) {\n              return {\n                name: t.originalName,\n                tensor: t.variable\n              };\n            }))];\n        }\n      });\n    });\n  }, n.prototype.setWeights = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e;\n      return o(this, function (n) {\n        switch (n.label) {\n          case 0:\n            return [4, this.extractIterations(t)];\n\n          case 1:\n            return t = n.sent(), e = t.length / 2, !1, this.accumulatedGrads = t.slice(0, e).map(function (t) {\n              return {\n                originalName: t.name,\n                variable: t.tensor.variable(!1)\n              };\n            }), this.accumulatedUpdates = t.slice(e, 2 * e).map(function (t) {\n              return {\n                originalName: t.name,\n                variable: t.tensor.variable(!1)\n              };\n            }), [2];\n        }\n      });\n    });\n  }, n.prototype.getConfig = function () {\n    return {\n      learningRate: this.learningRate,\n      rho: this.rho,\n      epsilon: this.epsilon\n    };\n  }, n.fromConfig = function (t, e) {\n    return new t(e.learningRate, e.rho, e.epsilon);\n  }, n.className = \"AdadeltaOptimizer\", n;\n}(qh);\n\nMh(Hh);\n\nvar $h = function (t) {\n  function n(e, n) {\n    void 0 === n && (n = .1);\n    var r = t.call(this) || this;\n    return r.learningRate = e, r.initialAccumulatorValue = n, r.accumulatedGrads = [], r;\n  }\n\n  return e(n, t), n.prototype.applyGradients = function (t) {\n    var e = this;\n    (Array.isArray(t) ? t.map(function (t) {\n      return t.name;\n    }) : Object.keys(t)).forEach(function (n, r) {\n      var o = Dt.registeredVariables[n];\n\n      if (null == e.accumulatedGrads[r]) {\n        e.accumulatedGrads[r] = {\n          originalName: n + \"/accumulator\",\n          variable: Pe(function () {\n            return Nn(o.shape, e.initialAccumulatorValue).variable(!1);\n          })\n        };\n      }\n\n      var a = Array.isArray(t) ? t[r].tensor : t[n];\n\n      if (null != a) {\n        var i = e.accumulatedGrads[r].variable;\n        Pe(function () {\n          var t = i.add(a.square());\n          i.assign(t);\n          var n = a.div(t.add(Dt.backend.epsilon()).sqrt()).mul(-e.learningRate).add(o);\n          o.assign(n);\n        });\n      }\n    }), this.incrementIterations();\n  }, n.prototype.dispose = function () {\n    null != this.accumulatedGrads && Le(this.accumulatedGrads.map(function (t) {\n      return t.variable;\n    }));\n  }, n.prototype.getWeights = function () {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (t) {\n        switch (t.label) {\n          case 0:\n            return [4, this.saveIterations()];\n\n          case 1:\n            return [2, [t.sent()].concat(this.accumulatedGrads.map(function (t) {\n              return {\n                name: t.originalName,\n                tensor: t.variable\n              };\n            }))];\n        }\n      });\n    });\n  }, n.prototype.setWeights = function (t) {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (e) {\n        switch (e.label) {\n          case 0:\n            return [4, this.extractIterations(t)];\n\n          case 1:\n            return t = e.sent(), !1, this.accumulatedGrads = t.map(function (t) {\n              return {\n                originalName: t.name,\n                variable: t.tensor.variable(!1)\n              };\n            }), [2];\n        }\n      });\n    });\n  }, n.prototype.getConfig = function () {\n    return {\n      learningRate: this.learningRate,\n      initialAccumulatorValue: this.initialAccumulatorValue\n    };\n  }, n.fromConfig = function (t, e) {\n    return new t(e.learningRate, e.initialAccumulatorValue);\n  }, n.className = \"Adagrad\", n;\n}(qh);\n\nMh($h);\n\nvar jh = function (t) {\n  function n(e, n, r, o) {\n    void 0 === o && (o = null);\n    var a = t.call(this) || this;\n    return a.learningRate = e, a.beta1 = n, a.beta2 = r, a.epsilon = o, a.accumulatedFirstMoment = [], a.accumulatedSecondMoment = [], Pe(function () {\n      a.accBeta1 = yn(n).variable(), a.accBeta2 = yn(r).variable();\n    }), null == o && (a.epsilon = Dt.backend.epsilon()), a;\n  }\n\n  return e(n, t), n.prototype.applyGradients = function (t) {\n    var e = this,\n        n = Array.isArray(t) ? t.map(function (t) {\n      return t.name;\n    }) : Object.keys(t);\n    Pe(function () {\n      var r = yl(1, e.accBeta1),\n          o = yl(1, e.accBeta2);\n      n.forEach(function (n, a) {\n        var i = Dt.registeredVariables[n];\n        null == e.accumulatedFirstMoment[a] && (e.accumulatedFirstMoment[a] = {\n          originalName: n + \"/m\",\n          variable: Pe(function () {\n            return Dn(i).variable(!1);\n          })\n        }), null == e.accumulatedSecondMoment[a] && (e.accumulatedSecondMoment[a] = {\n          originalName: n + \"/v\",\n          variable: Pe(function () {\n            return Dn(i).variable(!1);\n          })\n        });\n        var s = Array.isArray(t) ? t[a].tensor : t[n];\n\n        if (null != s) {\n          var u = e.accumulatedFirstMoment[a].variable,\n              l = e.accumulatedSecondMoment[a].variable,\n              c = u.mul(e.beta1).add(s.mul(1 - e.beta1)),\n              h = l.mul(e.beta2).add(s.square().mul(1 - e.beta2)),\n              p = c.div(r),\n              f = h.div(o);\n          u.assign(c), l.assign(h);\n          var d = p.div(f.sqrt().add(e.epsilon)).mul(-e.learningRate).add(i);\n          i.assign(d);\n        }\n      }), e.accBeta1.assign(e.accBeta1.mul(e.beta1)), e.accBeta2.assign(e.accBeta2.mul(e.beta2));\n    }), this.incrementIterations();\n  }, n.prototype.dispose = function () {\n    this.accBeta1.dispose(), this.accBeta2.dispose(), null != this.accumulatedFirstMoment && Le(this.accumulatedFirstMoment.map(function (t) {\n      return t.variable;\n    })), null != this.accumulatedSecondMoment && Le(this.accumulatedSecondMoment.map(function (t) {\n      return t.variable;\n    }));\n  }, n.prototype.getWeights = function () {\n    return r(this, void 0, void 0, function () {\n      var t;\n      return o(this, function (e) {\n        switch (e.label) {\n          case 0:\n            return t = this.accumulatedFirstMoment.concat(this.accumulatedSecondMoment), [4, this.saveIterations()];\n\n          case 1:\n            return [2, [e.sent()].concat(t.map(function (t) {\n              return {\n                name: t.originalName,\n                tensor: t.variable\n              };\n            }))];\n        }\n      });\n    });\n  }, n.prototype.setWeights = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e,\n          n = this;\n      return o(this, function (r) {\n        switch (r.label) {\n          case 0:\n            return [4, this.extractIterations(t)];\n\n          case 1:\n            return t = r.sent(), Pe(function () {\n              n.accBeta1.assign(dl(n.beta1, n.iterations_ + 1)), n.accBeta2.assign(dl(n.beta2, n.iterations_ + 1));\n            }), e = t.length / 2, !1, this.accumulatedFirstMoment = t.slice(0, e).map(function (t) {\n              return {\n                originalName: t.name,\n                variable: t.tensor.variable(!1)\n              };\n            }), this.accumulatedSecondMoment = t.slice(e, 2 * e).map(function (t) {\n              return {\n                originalName: t.name,\n                variable: t.tensor.variable(!1)\n              };\n            }), [2];\n        }\n      });\n    });\n  }, n.prototype.getConfig = function () {\n    return {\n      learningRate: this.learningRate,\n      beta1: this.beta1,\n      beta2: this.beta2,\n      epsilon: this.epsilon\n    };\n  }, n.fromConfig = function (t, e) {\n    return new t(e.learningRate, e.beta1, e.beta2, e.epsilon);\n  }, n.className = \"Adam\", n;\n}(qh);\n\nMh(jh);\n\nvar Kh = function (t) {\n  function n(e, n, r, o, a) {\n    void 0 === o && (o = null), void 0 === a && (a = 0);\n    var i = t.call(this) || this;\n    return i.learningRate = e, i.beta1 = n, i.beta2 = r, i.epsilon = o, i.decay = a, i.accumulatedFirstMoment = [], i.accumulatedWeightedInfNorm = [], Pe(function () {\n      i.iteration = yn(0).variable(), i.accBeta1 = yn(n).variable();\n    }), null == o && (i.epsilon = Dt.backend.epsilon()), i;\n  }\n\n  return e(n, t), n.prototype.applyGradients = function (t) {\n    var e = this,\n        n = Array.isArray(t) ? t.map(function (t) {\n      return t.name;\n    }) : Object.keys(t);\n    Pe(function () {\n      var r = yl(1, e.accBeta1),\n          o = rl(-e.learningRate, e.iteration.mul(e.decay).add(1));\n      n.forEach(function (n, a) {\n        var i = Dt.registeredVariables[n];\n        null == e.accumulatedFirstMoment[a] && (e.accumulatedFirstMoment[a] = {\n          originalName: n + \"/m\",\n          variable: Dn(i).variable(!1)\n        }), null == e.accumulatedWeightedInfNorm[a] && (e.accumulatedWeightedInfNorm[a] = {\n          originalName: n + \"/v\",\n          variable: Dn(i).variable(!1)\n        });\n        var s = Array.isArray(t) ? t[a].tensor : t[n];\n\n        if (null != s) {\n          var u = e.accumulatedFirstMoment[a].variable,\n              l = e.accumulatedWeightedInfNorm[a].variable,\n              c = u.mul(e.beta1).add(s.mul(1 - e.beta1)),\n              h = l.mul(e.beta2),\n              p = s.abs(),\n              f = h.maximum(p);\n          u.assign(c), l.assign(f);\n          var d = o.div(r).mul(c.div(f.add(e.epsilon))).add(i);\n          i.assign(d);\n        }\n      }), e.iteration.assign(e.iteration.add(1)), e.accBeta1.assign(e.accBeta1.mul(e.beta1));\n    }), this.incrementIterations();\n  }, n.prototype.dispose = function () {\n    this.accBeta1.dispose(), this.iteration.dispose(), null != this.accumulatedFirstMoment && Le(this.accumulatedFirstMoment.map(function (t) {\n      return t.variable;\n    })), null != this.accumulatedWeightedInfNorm && Le(this.accumulatedWeightedInfNorm.map(function (t) {\n      return t.variable;\n    }));\n  }, n.prototype.getWeights = function () {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (t) {\n        throw new Error(\"getWeights() is not implemented for Adamax yet.\");\n      });\n    });\n  }, n.prototype.setWeights = function (t) {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (t) {\n        throw new Error(\"setWeights() is not implemented for Adamax yet.\");\n      });\n    });\n  }, n.prototype.getConfig = function () {\n    return {\n      learningRate: this.learningRate,\n      beta1: this.beta1,\n      beta2: this.beta2,\n      epsilon: this.epsilon,\n      decay: this.decay\n    };\n  }, n.fromConfig = function (t, e) {\n    return new t(e.learningRate, e.beta1, e.beta2, e.epsilon, e.decay);\n  }, n.className = \"Adamax\", n;\n}(qh);\n\nMh(Kh);\n\nvar Xh = function (t) {\n  function n(e) {\n    var n = t.call(this) || this;\n    return n.learningRate = e, n.setLearningRate(e), n;\n  }\n\n  return e(n, t), n.prototype.applyGradients = function (t) {\n    var e = this;\n    (Array.isArray(t) ? t.map(function (t) {\n      return t.name;\n    }) : Object.keys(t)).forEach(function (n, r) {\n      var o = Array.isArray(t) ? t[r].tensor : t[n];\n\n      if (null != o) {\n        var a = Dt.registeredVariables[n];\n        Pe(function () {\n          var t = e.c.mul(o).add(a);\n          a.assign(t);\n        });\n      }\n    }), this.incrementIterations();\n  }, n.prototype.setLearningRate = function (t) {\n    this.learningRate = t, null != this.c && this.c.dispose(), this.c = We(yn(-t));\n  }, n.prototype.dispose = function () {\n    this.c.dispose();\n  }, n.prototype.getWeights = function () {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (t) {\n        switch (t.label) {\n          case 0:\n            return [4, this.saveIterations()];\n\n          case 1:\n            return [2, [t.sent()]];\n        }\n      });\n    });\n  }, n.prototype.setWeights = function (t) {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (e) {\n        switch (e.label) {\n          case 0:\n            return [4, this.extractIterations(t)];\n\n          case 1:\n            if (0 !== (t = e.sent()).length) throw new Error(\"SGD optimizer does not have settable weights.\");\n            return [2];\n        }\n      });\n    });\n  }, n.prototype.getConfig = function () {\n    return {\n      learningRate: this.learningRate\n    };\n  }, n.fromConfig = function (t, e) {\n    return new t(e.learningRate);\n  }, n.className = \"SGD\", n;\n}(qh);\n\nMh(Xh);\n\nvar Yh = function (t) {\n  function n(e, n, r) {\n    void 0 === r && (r = !1);\n    var o = t.call(this, e) || this;\n    return o.learningRate = e, o.momentum = n, o.useNesterov = r, o.accumulations = [], o.m = yn(o.momentum), o;\n  }\n\n  return e(n, t), n.prototype.applyGradients = function (t) {\n    var e = this;\n    (Array.isArray(t) ? t.map(function (t) {\n      return t.name;\n    }) : Object.keys(t)).forEach(function (n, r) {\n      var o = Dt.registeredVariables[n];\n\n      if (null == e.accumulations[r]) {\n        e.accumulations[r] = {\n          originalName: n + \"/momentum\",\n          variable: Pe(function () {\n            return Dn(o).variable(!1);\n          })\n        };\n      }\n\n      var a = e.accumulations[r].variable,\n          i = Array.isArray(t) ? t[r].tensor : t[n];\n      null != i && Pe(function () {\n        var t,\n            n = e.m.mul(a).add(i);\n        t = e.useNesterov ? e.c.mul(i.add(n.mul(e.m))).add(o) : e.c.mul(n).add(o), a.assign(n), o.assign(t);\n      });\n    }), this.incrementIterations();\n  }, n.prototype.dispose = function () {\n    this.m.dispose(), null != this.accumulations && Le(this.accumulations.map(function (t) {\n      return t.variable;\n    }));\n  }, n.prototype.setMomentum = function (t) {\n    this.momentum = t;\n  }, n.prototype.getWeights = function () {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (t) {\n        switch (t.label) {\n          case 0:\n            return [4, this.saveIterations()];\n\n          case 1:\n            return [2, [t.sent()].concat(this.accumulations.map(function (t) {\n              return {\n                name: t.originalName,\n                tensor: t.variable\n              };\n            }))];\n        }\n      });\n    });\n  }, n.prototype.setWeights = function (t) {\n    return r(this, void 0, void 0, function () {\n      return o(this, function (e) {\n        switch (e.label) {\n          case 0:\n            return [4, this.extractIterations(t)];\n\n          case 1:\n            return t = e.sent(), !1, this.accumulations = t.map(function (t) {\n              return {\n                originalName: t.name,\n                variable: t.tensor.variable(!1)\n              };\n            }), [2];\n        }\n      });\n    });\n  }, n.prototype.getConfig = function () {\n    return {\n      learningRate: this.learningRate,\n      momentum: this.momentum,\n      useNesterov: this.useNesterov\n    };\n  }, n.fromConfig = function (t, e) {\n    return new t(e.learningRate, e.momentum, e.useNesterov);\n  }, n.className = \"MomentumOptimizer\", n;\n}(Xh);\n\nMh(Yh);\n\nvar Qh = function (t) {\n  function n(e, n, r, o, a) {\n    void 0 === n && (n = .9), void 0 === r && (r = 0), void 0 === o && (o = null), void 0 === a && (a = !1);\n    var i = t.call(this) || this;\n    return i.learningRate = e, i.decay = n, i.momentum = r, i.epsilon = o, i.accumulatedMeanSquares = [], i.accumulatedMoments = [], i.accumulatedMeanGrads = [], i.centered = a, null == o && (i.epsilon = Dt.backend.epsilon()), i;\n  }\n\n  return e(n, t), n.prototype.applyGradients = function (t) {\n    var e = this;\n    (Array.isArray(t) ? t.map(function (t) {\n      return t.name;\n    }) : Object.keys(t)).forEach(function (n, r) {\n      var o = Dt.registeredVariables[n];\n      null == e.accumulatedMeanSquares[r] && (e.accumulatedMeanSquares[r] = {\n        originalName: n + \"/rms\",\n        variable: Pe(function () {\n          return Dn(o).variable(!1);\n        })\n      }), null == e.accumulatedMoments[r] && (e.accumulatedMoments[r] = {\n        originalName: n + \"/momentum\",\n        variable: Pe(function () {\n          return Dn(o).variable(!1);\n        })\n      }), null == e.accumulatedMeanGrads[r] && e.centered && (e.accumulatedMeanGrads[r] = {\n        originalName: n + \"/mg\",\n        variable: Pe(function () {\n          return Dn(o).variable(!1);\n        })\n      });\n      var a = Array.isArray(t) ? t[r].tensor : t[n];\n\n      if (null != a) {\n        var i = e.accumulatedMeanSquares[r].variable,\n            s = e.accumulatedMoments[r].variable;\n        Pe(function () {\n          var t = i.mul(e.decay).add(a.square().mul(1 - e.decay));\n\n          if (e.centered) {\n            var n = e.accumulatedMeanGrads[r].variable,\n                u = n.mul(e.decay).add(a.mul(1 - e.decay)),\n                l = s.mul(e.momentum).add(a.mul(e.learningRate).div(t.sub(u.square().add(e.epsilon)).sqrt()));\n            i.assign(t), n.assign(u), s.assign(l);\n            var c = o.sub(l);\n            o.assign(c);\n          } else {\n            var h = i.mul(e.decay).add(a.square().mul(1 - e.decay));\n            l = s.mul(e.momentum).add(a.mul(e.learningRate).div(h.add(e.epsilon).sqrt()));\n            i.assign(h), s.assign(l);\n            c = o.sub(l);\n            o.assign(c);\n          }\n        });\n      }\n    }), this.incrementIterations();\n  }, n.prototype.dispose = function () {\n    null != this.accumulatedMeanSquares && Le(this.accumulatedMeanSquares.map(function (t) {\n      return t.variable;\n    })), null != this.accumulatedMeanGrads && this.centered && Le(this.accumulatedMeanGrads.map(function (t) {\n      return t.variable;\n    })), null != this.accumulatedMoments && Le(this.accumulatedMoments.map(function (t) {\n      return t.variable;\n    }));\n  }, n.prototype.getWeights = function () {\n    return r(this, void 0, void 0, function () {\n      var t;\n      return o(this, function (e) {\n        switch (e.label) {\n          case 0:\n            return t = this.accumulatedMeanSquares.concat(this.accumulatedMoments), this.centered && t.push.apply(t, this.accumulatedMeanGrads), [4, this.saveIterations()];\n\n          case 1:\n            return [2, [e.sent()].concat(t.map(function (t) {\n              return {\n                name: t.originalName,\n                tensor: t.variable\n              };\n            }))];\n        }\n      });\n    });\n  }, n.prototype.setWeights = function (t) {\n    return r(this, void 0, void 0, function () {\n      var e;\n      return o(this, function (n) {\n        switch (n.label) {\n          case 0:\n            return [4, this.extractIterations(t)];\n\n          case 1:\n            return t = n.sent(), e = this.centered ? t.length / 3 : t.length / 2, !1, this.accumulatedMeanSquares = t.slice(0, e).map(function (t) {\n              return {\n                originalName: t.name,\n                variable: t.tensor.variable(!1)\n              };\n            }), this.accumulatedMoments = t.slice(e, 2 * e).map(function (t) {\n              return {\n                originalName: t.name,\n                variable: t.tensor.variable(!1)\n              };\n            }), this.centered && (this.accumulatedMeanGrads = t.slice(2 * e, 3 * e).map(function (t) {\n              return {\n                originalName: t.name,\n                variable: t.tensor.variable(!1)\n              };\n            })), [2];\n        }\n      });\n    });\n  }, n.prototype.getConfig = function () {\n    return {\n      learningRate: this.learningRate,\n      decay: this.decay,\n      momentum: this.momentum,\n      epsilon: this.epsilon,\n      centered: this.centered\n    };\n  }, n.fromConfig = function (t, e) {\n    return new t(e.learningRate, e.decay, e.momentum, e.epsilon, e.centered);\n  }, n.className = \"RMSProp\", n;\n}(qh);\n\nMh(Qh);\n\nvar Jh = function () {\n  function t() {}\n\n  return t.sgd = function (t) {\n    return new Xh(t);\n  }, t.momentum = function (t, e, n) {\n    return void 0 === n && (n = !1), new Yh(t, e, n);\n  }, t.rmsprop = function (t, e, n, r, o) {\n    return void 0 === e && (e = .9), void 0 === n && (n = 0), void 0 === r && (r = null), void 0 === o && (o = !1), new Qh(t, e, n, r, o);\n  }, t.adam = function (t, e, n, r) {\n    return void 0 === t && (t = .001), void 0 === e && (e = .9), void 0 === n && (n = .999), void 0 === r && (r = null), new jh(t, e, n, r);\n  }, t.adadelta = function (t, e, n) {\n    return void 0 === t && (t = .001), void 0 === e && (e = .95), void 0 === n && (n = null), new Hh(t, e, n);\n  }, t.adamax = function (t, e, n, r, o) {\n    return void 0 === t && (t = .002), void 0 === e && (e = .9), void 0 === n && (n = .999), void 0 === r && (r = null), void 0 === o && (o = 0), new Kh(t, e, n, r, o);\n  }, t.adagrad = function (t, e) {\n    return void 0 === e && (e = .1), new $h(t, e);\n  }, t;\n}(),\n    Zh = {\n  sgd: Jh.sgd,\n  momentum: Jh.momentum,\n  adadelta: Jh.adadelta,\n  adagrad: Jh.adagrad,\n  rmsprop: Jh.rmsprop,\n  adamax: Jh.adamax,\n  adam: Jh.adam\n},\n    tp = \"undefined\" != typeof requestAnimationFrame ? requestAnimationFrame : \"undefined\" != typeof setImmediate ? setImmediate : function (t) {\n  return t();\n};\n\nfunction ep() {\n  return new Promise(function (t) {\n    return tp(function () {\n      return t();\n    });\n  });\n}\n\nht = Nc;\nexport { Hh as AdadeltaOptimizer, $h as AdagradOptimizer, jh as AdamOptimizer, Kh as AdamaxOptimizer, $r as DataStorage, s as ENV, a as Environment, jr as KernelBackend, Yh as MomentumOptimizer, qh as Optimizer, Qh as RMSPropOptimizer, vt as Rank, Zl as Reduction, Xh as SGDOptimizer, ft as Tensor, lt as TensorBuffer, dt as Variable, is as abs, ss as acos, us as acosh, Zu as add, tl as addN, el as addStrict, Tu as all, Du as any, _u as argMax, Ou as argMin, ls as asin, cs as asinh, hs as atan, nl as atan2, ps as atanh, Cu as avgPool, Ke as backend, co as backend_util, Ll as basicLSTMCell, Qs as batchNorm, Js as batchNorm2d, Zs as batchNorm3d, tu as batchNorm4d, Ys as batchNormalization, js as batchNormalization2d, Ks as batchNormalization3d, Xs as batchNormalization4d, Qn as batchToSpaceND, Dh as browser, Xn as buffer, Jn as cast, fs as ceil, ds as clipByValue, Zn as clone, fn as complex, _n as concat, On as concat1d, Mn as concat2d, Fn as concat3d, Bn as concat4d, ou as conv1d, au as conv2d, su as conv2dDerFilter, cu as conv2dTranspose, iu as conv3d, vs as cos, ms as cosh, tr as cumsum, Vr as customGrad, Oe as deprecationWarn, er as depthToSpace, uu as depthwiseConv2d, _e as disableDeprecationWarnings, Le as dispose, Me as disposeVariables, rl as div, ol as divStrict, pu as dot, Ql as dropout, Sl as elu, De as enableDebugMode, Te as enableProdMode, l as environment, zu as equal, Vu as equalStrict, gs as erf, ys as exp, nr as expandDims, xs as expm1, rr as eye, ql as fft, Nn as fill, He as findBackend, $e as findBackendFactory, bs as floor, al as floorDiv, nc as frame, Sc as fused, Bl as gather, Yl as gatherND, Ge as getBackend, Pr as grad, Lr as grads, Gu as greater, qu as greaterEqual, Hu as greaterEqualStrict, $u as greaterStrict, ec as hammingWindow, tc as hannWindow, Hl as ifft, vn as imag, Rc as image, Nh as io, jl as irfft, _s as isFinite, Ds as isInf, Ts as isNaN, We as keep, Nl as leakyRelu, ju as less, Ku as lessEqual, Xu as lessEqualStrict, Yu as lessStrict, gc as linalg, kn as linspace, _l as localResponseNormalization, ws as log, Cs as log1p, Es as logSigmoid, Hr as logSoftmax, Mu as logSumExp, bl as logicalAnd, wl as logicalNot, Cl as logicalOr, El as logicalXor, fc as losses, hu as matMul, Ah as math, Fu as max, wu as maxPool, il as maximum, sl as maximumStrict, Bu as mean, Fe as memory, Pu as min, ul as minimum, ll as minimumStrict, cl as mod, hl as modStrict, Lu as moments, Ul as movingAverage, pl as mul, fl as mulStrict, Wl as multiRNNCell, or as multinomial, Rs as neg, ep as nextFrame, Ol as norm, Qu as notEqual, Ju as notEqualStrict, ar as oneHot, In as ones, Tn as onesLike, pn as op, fu as outerProduct, ir as pad, sr as pad1d, ur as pad2d, lr as pad3d, cr as pad4d, Eu as pool, dl as pow, vl as powStrict, kl as prelu, Yn as print, Uu as prod, Be as profile, hr as rand, pr as randomNormal, fr as randomUniform, An as range, Ve as ready, dn as real, Is as reciprocal, je as registerBackend, Al as relu, qe as removeBackend, dr as reshape, du as reverse, vu as reverse1d, mu as reverse2d, gu as reverse3d, yu as reverse4d, $l as rfft, Ss as round, Ns as rsqrt, yn as scalar, Gl as scatterND, Tl as selu, lu as separableConv2d, Fh as serialization, ze as setBackend, Xe as setPlatform, wr as setdiff1dAsync, ks as sigmoid, As as sign, rc as signal, Os as sin, Ms as sinh, Ru as slice, Iu as slice1d, Su as slice2d, Nu as slice3d, ku as slice4d, qr as softmax, Fs as softplus, vr as spaceToBatchND, Xl as sparseToDense, Kl as spectral, Pn as split, Bs as sqrt, Ps as square, ml as squaredDifference, gl as squaredDifferenceStrict, mr as squeeze, gr as stack, Ls as step, zl as stridedSlice, yl as sub, xl as subStrict, Wu as sum, Ws as tan, Us as tanh, mn as tensor, xn as tensor1d, bn as tensor2d, wn as tensor3d, Cn as tensor4d, En as tensor5d, Rn as tensor6d, kt as tensor_util, zh as test_util, Pe as tidy, yr as tile, Ue as time, Vl as topk, Zh as train, Dl as transpose, xr as truncatedNormal, Pl as unsortedSegmentSum, br as unstack, Z as util, Wr as valueAndGrad, Ur as valueAndGrads, bt as variable, zr as variableGrads, Vh as version_core, Gh as webgl, Rl as where, Il as whereAsync, Sn as zeros, Dn as zerosLike };","map":null,"metadata":{},"sourceType":"module"}