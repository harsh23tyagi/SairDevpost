{"ast":null,"code":"import _slicedToArray from \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"simple-peer\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./videochatstyles.css\";\nlet client = {};\nvar peer;\n\nconst Videochat = () => {\n  const _useState = useState({\n    clientID: -1\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        clientInfo = _useState2[0],\n        setClientInfo = _useState2[1];\n\n  var str = null;\n  var clientID;\n  const socket = socketIOClient(\"http://127.0.0.1:5000\"); //   var peer = new Peer({\n  //     initiator: true,\n  //     trickle: false\n  //     //   stream: stream\n  //   });\n\n  var onsubmit; //   const onsubmit = async e => {\n  //     e.preventDefault();\n  //     document.querySelector(\"#yourID\").value = \"\";\n  //     var id = Math.floor(Math.random() * 999999);\n  //     // console.log(id);\n  //     document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n  //     // var text = document.getElementById(\"connectingID\").textContent;\n  //     peer = new Peer({\n  //       initiator: window.location.hash === \"#init\",\n  //       trickle: false\n  //       //   stream: stream\n  //     });\n  //     console.log(peer);\n  //     peer.on(\"error\", function(err) {\n  //       console.log(\"error\", err);\n  //     });\n  //     peer.on(\"signal\", function(data) {\n  //       console.log(\"SIGNAL\", JSON.stringify(data));\n  //       document.querySelector(\"#yourID\").value = JSON.stringify(data);\n  //     });\n  //     peer.on(\"data\", data => {\n  //       console.log(\"HEL\" + data);\n  //       document.getElementById(\"reading\").value = data;\n  //     });\n  //   };\n\n  const startChat = async e => {\n    e.preventDefault();\n    var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n    console.log(peer); // console.log\n\n    peer.signal(otherID);\n  };\n\n  const sendTextMessage = async e => {\n    e.preventDefault();\n    var message = document.getElementById(\"message\").value;\n    peer.send(message);\n  };\n\n  const startVideoChat = async e => {\n    e.preventDefault();\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {// var text = document.getElementById(\"connectingID\").textContent;\n    });\n    peer.on(\"stream\", stream => {\n      var vid = document.getElementById(\"peervid\");\n      vid.srcObj = stream;\n      vid.play();\n    });\n  };\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      peer = new Peer({\n        initiator: window.location.hash === \"#init\",\n        trickle: false,\n        stream: stream\n      });\n      var vid = document.getElementById(\"peervid\");\n      vid.srcObj = stream;\n      vid.play(); // on submit chat\n\n      onsubmit = async e => {\n        e.preventDefault();\n        document.querySelector(\"#yourID\").value = \"\";\n        var id = Math.floor(Math.random() * 999999); // console.log(id);\n\n        document.getElementById(\"clientID\").textContent = \"ClientID: \" + id; // var text = document.getElementById(\"connectingID\").textContent;\n        // peer = new Peer({\n        //   initiator: window.location.hash === \"#init\",\n        //   trickle: false\n        //   //   stream: stream\n        // });\n\n        console.log(peer);\n        peer.on(\"error\", function (err) {\n          console.log(\"error\", err);\n        });\n        peer.on(\"signal\", function (data) {\n          console.log(\"SIGNAL\", JSON.stringify(data));\n          document.querySelector(\"#yourID\").value = JSON.stringify(data);\n        });\n        peer.on(\"data\", data => {\n          console.log(\"HEL\" + data);\n          document.getElementById(\"reading\").value = data;\n        });\n      };\n    });\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onsubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Get Info\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => startChat(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter the ID to connect with your friend\",\n    name: \"name\",\n    id: \"connectingID\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"clientID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Your ID: \")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"IDPeer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Your Token: \"), React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"yourID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Create Connection\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => sendTextMessage(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"messageLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Write Your Message: \"), React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Send Text Message\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => startVideoChat(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Start Video Chat\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"msgbox\",\n    class: \"message-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"reading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"block_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"video-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    id: \"peervid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"video-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }))));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js"],"names":["React","Fragment","useState","useEffect","Peer","socketIOClient","client","peer","Videochat","clientID","clientInfo","setClientInfo","str","socket","onsubmit","startChat","e","preventDefault","otherID","JSON","parse","document","getElementById","value","console","log","signal","sendTextMessage","message","send","startVideoChat","navigator","mediaDevices","getUserMedia","video","audio","then","stream","on","vid","srcObj","play","initiator","window","location","hash","trickle","querySelector","id","Math","floor","random","textContent","err","data","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,uBAAP;AAEA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,IAAJ;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACcN,QAAQ,CAAC;AAC3CO,IAAAA,QAAQ,EAAE,CAAC;AADgC,GAAD,CADtB;AAAA;AAAA,QACfC,UADe;AAAA,QACHC,aADG;;AAKtB,MAAIC,GAAG,GAAG,IAAV;AACA,MAAIH,QAAJ;AACA,QAAMI,MAAM,GAAGR,cAAc,CAAC,uBAAD,CAA7B,CAPsB,CAStB;AACA;AACA;AACA;AACA;;AAEA,MAAIS,QAAJ,CAfsB,CAgBtB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,SAAS,GAAG,MAAMC,CAAN,IAAW;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAnD,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ,EAH2B,CAI3B;;AACAA,IAAAA,IAAI,CAACmB,MAAL,CAAYR,OAAZ;AACD,GAND;;AAQA,QAAMS,eAAe,GAAG,MAAMX,CAAN,IAAW;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIW,OAAO,GAAGP,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAjD;AACAhB,IAAAA,IAAI,CAACsB,IAAL,CAAUD,OAAV;AACD,GAJD;;AAKA,QAAME,cAAc,GAAG,MAAMd,CAAN,IAAW;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAc,IAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KADhB,EAEGC,IAFH,CAEQC,MAAM,IAAI,CACd;AACD,KAJH;AAKA9B,IAAAA,IAAI,CAAC+B,EAAL,CAAQ,QAAR,EAAkBD,MAAM,IAAI;AAC1B,UAAIE,GAAG,GAAGlB,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAV;AACAiB,MAAAA,GAAG,CAACC,MAAJ,GAAaH,MAAb;AACAE,MAAAA,GAAG,CAACE,IAAJ;AACD,KAJD;AAKD,GAZD;;AAcAtC,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KADhB,EAEGC,IAFH,CAEQC,MAAM,IAAI;AACd9B,MAAAA,IAAI,GAAG,IAAIH,IAAJ,CAAS;AACdsC,QAAAA,SAAS,EAAEC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,KAAyB,OADtB;AAEdC,QAAAA,OAAO,EAAE,KAFK;AAGdT,QAAAA,MAAM,EAAEA;AAHM,OAAT,CAAP;AAKA,UAAIE,GAAG,GAAGlB,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAV;AACAiB,MAAAA,GAAG,CAACC,MAAJ,GAAaH,MAAb;AACAE,MAAAA,GAAG,CAACE,IAAJ,GARc,CAUd;;AACA3B,MAAAA,QAAQ,GAAG,MAAME,CAAN,IAAW;AACpBA,QAAAA,CAAC,CAACC,cAAF;AACAI,QAAAA,QAAQ,CAAC0B,aAAT,CAAuB,SAAvB,EAAkCxB,KAAlC,GAA0C,EAA1C;AACA,YAAIyB,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAT,CAHoB,CAIpB;;AACA9B,QAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoC8B,WAApC,GAAkD,eAAeJ,EAAjE,CALoB,CAOpB;AACA;AACA;AACA;AACA;AACA;;AACAxB,QAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACAA,QAAAA,IAAI,CAAC+B,EAAL,CAAQ,OAAR,EAAiB,UAASe,GAAT,EAAc;AAC7B7B,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB4B,GAArB;AACD,SAFD;AAIA9C,QAAAA,IAAI,CAAC+B,EAAL,CAAQ,QAAR,EAAkB,UAASgB,IAAT,EAAe;AAC/B9B,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,IAAI,CAACoC,SAAL,CAAeD,IAAf,CAAtB;AACAjC,UAAAA,QAAQ,CAAC0B,aAAT,CAAuB,SAAvB,EAAkCxB,KAAlC,GAA0CJ,IAAI,CAACoC,SAAL,CAAeD,IAAf,CAA1C;AACD,SAHD;AAKA/C,QAAAA,IAAI,CAAC+B,EAAL,CAAQ,MAAR,EAAgBgB,IAAI,IAAI;AACtB9B,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAQ6B,IAApB;AACAjC,UAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,GAA2C+B,IAA3C;AACD,SAHD;AAID,OA3BD;AA4BD,KAzCH;AA0CD,GA3CQ,CAAT;AA4CA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEtC,CAAC,IAAIF,QAAQ,CAACE,CAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEA,CAAC,IAAID,SAAS,CAACC,CAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,0CAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,EAAE,EAAC,cAJL;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAVF,EAaE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,EAAE,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAU,IAAA,KAAK,EAAC,cAAhB;AAA+B,IAAA,IAAI,EAAC,GAApC;AAAwC,IAAA,EAAE,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbF,EAkBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,KAAK,EAAC,mBAHR;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CATF,EAmCE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEA,CAAC,IAAIW,eAAe,CAACX,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,EAAE,EAAC,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAU,IAAA,KAAK,EAAC,cAAhB;AAA+B,IAAA,IAAI,EAAC,GAApC;AAAwC,IAAA,EAAE,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,KAAK,EAAC,mBAHR;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAnCF,EA+CE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEA,CAAC,IAAIc,cAAc,CAACd,CAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,KAAK,EAAC,kBAHR;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA/CF,CAFF,EAgEE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAiB,IAAA,KAAK,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,KAAK,EAAC,cAAhB;AAA+B,IAAA,IAAI,EAAC,GAApC;AAAwC,IAAA,EAAE,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhEF,EAmEE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,EAAE,EAAC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CAnEF,CADF;AA8ED,CAlMD;;AAoMA,eAAeR,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"simple-peer\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./videochatstyles.css\";\n\nlet client = {};\nvar peer;\nconst Videochat = () => {\n  const [clientInfo, setClientInfo] = useState({\n    clientID: -1\n  });\n\n  var str = null;\n  var clientID;\n  const socket = socketIOClient(\"http://127.0.0.1:5000\");\n\n  //   var peer = new Peer({\n  //     initiator: true,\n  //     trickle: false\n  //     //   stream: stream\n  //   });\n\n  var onsubmit;\n  //   const onsubmit = async e => {\n  //     e.preventDefault();\n  //     document.querySelector(\"#yourID\").value = \"\";\n  //     var id = Math.floor(Math.random() * 999999);\n  //     // console.log(id);\n  //     document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n\n  //     // var text = document.getElementById(\"connectingID\").textContent;\n  //     peer = new Peer({\n  //       initiator: window.location.hash === \"#init\",\n  //       trickle: false\n  //       //   stream: stream\n  //     });\n  //     console.log(peer);\n  //     peer.on(\"error\", function(err) {\n  //       console.log(\"error\", err);\n  //     });\n\n  //     peer.on(\"signal\", function(data) {\n  //       console.log(\"SIGNAL\", JSON.stringify(data));\n  //       document.querySelector(\"#yourID\").value = JSON.stringify(data);\n  //     });\n\n  //     peer.on(\"data\", data => {\n  //       console.log(\"HEL\" + data);\n  //       document.getElementById(\"reading\").value = data;\n  //     });\n  //   };\n\n  const startChat = async e => {\n    e.preventDefault();\n    var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n    console.log(peer);\n    // console.log\n    peer.signal(otherID);\n  };\n\n  const sendTextMessage = async e => {\n    e.preventDefault();\n    var message = document.getElementById(\"message\").value;\n    peer.send(message);\n  };\n  const startVideoChat = async e => {\n    e.preventDefault();\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        // var text = document.getElementById(\"connectingID\").textContent;\n      });\n    peer.on(\"stream\", stream => {\n      var vid = document.getElementById(\"peervid\");\n      vid.srcObj = stream;\n      vid.play();\n    });\n  };\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        peer = new Peer({\n          initiator: window.location.hash === \"#init\",\n          trickle: false,\n          stream: stream\n        });\n        var vid = document.getElementById(\"peervid\");\n        vid.srcObj = stream;\n        vid.play();\n\n        // on submit chat\n        onsubmit = async e => {\n          e.preventDefault();\n          document.querySelector(\"#yourID\").value = \"\";\n          var id = Math.floor(Math.random() * 999999);\n          // console.log(id);\n          document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n\n          // var text = document.getElementById(\"connectingID\").textContent;\n          // peer = new Peer({\n          //   initiator: window.location.hash === \"#init\",\n          //   trickle: false\n          //   //   stream: stream\n          // });\n          console.log(peer);\n          peer.on(\"error\", function(err) {\n            console.log(\"error\", err);\n          });\n\n          peer.on(\"signal\", function(data) {\n            console.log(\"SIGNAL\", JSON.stringify(data));\n            document.querySelector(\"#yourID\").value = JSON.stringify(data);\n          });\n\n          peer.on(\"data\", data => {\n            console.log(\"HEL\" + data);\n            document.getElementById(\"reading\").value = data;\n          });\n        };\n      });\n  });\n  return (\n    <Fragment>\n      {/* <button onClick={() => handleNewMessage()}>Emit new message</button> */}\n      <div>\n        <form className=\"form\" onSubmit={e => onsubmit(e)}>\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Get Info\"\n            required\n          />\n        </form>\n        <form className=\"form\" onSubmit={e => startChat(e)}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter the ID to connect with your friend\"\n              name=\"name\"\n              id=\"connectingID\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label id=\"clientID\">Your ID: </label>\n          </div>\n          <div className=\"form-group\">\n            <label id=\"IDPeer\">Your Token: </label>\n            <textarea class=\"form-control\" rows=\"5\" id=\"yourID\" />\n          </div>\n\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Create Connection\"\n            required\n          />\n        </form>\n\n        <form className=\"form\" onSubmit={e => sendTextMessage(e)}>\n          <div className=\"form-group\">\n            <label id=\"messageLabel\">Write Your Message: </label>\n            <textarea class=\"form-control\" rows=\"5\" id=\"message\" />\n          </div>\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Send Text Message\"\n            required\n          />\n        </form>\n        <form className=\"form\" onSubmit={e => startVideoChat(e)}>\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Start Video Chat\"\n            required\n          />\n        </form>\n      </div>\n\n      {/* <div className=\"container parent-box row \">\n        <div className=\"col-sm-4 d-flex justify-content-center video-box\" />{\" \"}\n        <div className=\"col-sm-4 d-flex justify-content-center video-box\" />\n      </div> */}\n\n      <div id=\"msgbox\" class=\"message-box\">\n        <textarea class=\"form-control\" rows=\"5\" id=\"reading\" />\n      </div>\n      <div id=\"block_container\">\n        <div className=\"video-box\">\n          <video id=\"peervid\" />\n        </div>\n        <div className=\"video-box\">\n          <video />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}