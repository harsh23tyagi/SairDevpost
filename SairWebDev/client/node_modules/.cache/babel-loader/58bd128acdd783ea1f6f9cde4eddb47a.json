{"ast":null,"code":"import _slicedToArray from \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"peerjs\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./videochatstyles.css\";\nlet client = {};\n\nconst Videochat = () => {\n  const _useState = useState({\n    clientID: -1\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        clientInfo = _useState2[0],\n        setClientInfo = _useState2[1];\n\n  var str = null;\n  var clientID;\n  const socket = socketIOClient(\"http://127.0.0.1:5000\");\n\n  const onsubmit = async e => {\n    e.preventDefault();\n    var id = Math.floor(Math.random() * 999999);\n    console.log(id);\n    document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n    var text = document.getElementById(\"connectingID\").textContent;\n    var peer = new Peer({\n      initiator: location.hash === \"#init\",\n      trickle: false //   stream: stream\n\n    });\n    peer.on(\"signal\", data => {\n      document.getElementById(\"IDPeer\").textContent = JSON.stringify(data);\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onsubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter the ID to connect with your friend\",\n    name: \"name\",\n    id: \"connectingID\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"clientID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Your ID: \")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"IDPeer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Peer ID: \")), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Start Video Chat\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"block_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"video-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"video-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js"],"names":["React","Fragment","useState","useEffect","Peer","socketIOClient","client","Videochat","clientID","clientInfo","setClientInfo","str","socket","onsubmit","e","preventDefault","id","Math","floor","random","console","log","document","getElementById","textContent","text","peer","initiator","location","hash","trickle","on","data","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"peerjs\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./videochatstyles.css\";\nlet client = {};\n\nconst Videochat = () => {\n  const [clientInfo, setClientInfo] = useState({\n    clientID: -1\n  });\n\n  var str = null;\n  var clientID;\n  const socket = socketIOClient(\"http://127.0.0.1:5000\");\n\n  const onsubmit = async e => {\n    e.preventDefault();\n    var id = Math.floor(Math.random() * 999999);\n    console.log(id);\n    document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n\n    var text = document.getElementById(\"connectingID\").textContent;\n    var peer = new Peer({\n      initiator: location.hash === \"#init\",\n      trickle: false\n      //   stream: stream\n    });\n    peer.on(\"signal\", data => {\n      document.getElementById(\"IDPeer\").textContent = JSON.stringify(data);\n    });\n  };\n  return (\n    <Fragment>\n      {/* <button onClick={() => handleNewMessage()}>Emit new message</button> */}\n      <div>\n        <form className=\"form\" onSubmit={e => onsubmit(e)}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter the ID to connect with your friend\"\n              name=\"name\"\n              id=\"connectingID\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label id=\"clientID\">Your ID: </label>\n          </div>\n          <div className=\"form-group\">\n            <label id=\"IDPeer\">Peer ID: </label>\n          </div>\n\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Start Video Chat\"\n            required\n          />\n        </form>\n      </div>\n      {/* <div className=\"container parent-box row \">\n        <div className=\"col-sm-4 d-flex justify-content-center video-box\" />{\" \"}\n        <div className=\"col-sm-4 d-flex justify-content-center video-box\" />\n      </div> */}\n\n      <div id=\"block_container\">\n        <div className=\"video-box\">\n          <video />\n        </div>\n        <div className=\"video-box\">\n          <video />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}