{"ast":null,"code":"var _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/videosegmentation.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport img from \"./image1.jpg\";\nimport * as bodyPix from \"@tensorflow-models/body-pix\";\n\nconst videosegmentation = () => {\n  const loadAndUseBodyPix = async e => {\n    // async function loadAndUseBodyPix() {\n    e.preventDefault();\n    const net = await bodyPix.load(); // BodyPix model loaded\n\n    const imageElement = document.getElementById(\"image\");\n    console.log(\"Loaded\"); // load the BodyPix model from a checkpoint\n    // arguments for estimating person segmentation.\n\n    const outputStride = 16;\n    const segmentationThreshold = 0.5;\n    const personSegmentation = await net.estimatePersonSegmentation(imageElement, outputStride, segmentationThreshold);\n    console.log(personSegmentation);\n    console.log(\"Reached\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Reached Video Segmentation Page\", React.createElement(\"img\", {\n    src: img,\n    id: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => loadAndUseBodyPix(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Register\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};\n\nconsole.log(\"Hello\");\nconsole.log(\"Bigshot\");\nexport default videosegmentation;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/videosegmentation.js"],"names":["React","axios","img","bodyPix","videosegmentation","loadAndUseBodyPix","e","preventDefault","net","load","imageElement","document","getElementById","console","log","outputStride","segmentationThreshold","personSegmentation","estimatePersonSegmentation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,iBAAiB,GAAG,MAAMC,CAAN,IAAW;AACnC;AACAA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAG,MAAML,OAAO,CAACM,IAAR,EAAlB,CAHmC,CAInC;;AACA,UAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EANmC,CAOnC;AAEA;;AACA,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,qBAAqB,GAAG,GAA9B;AAEA,UAAMC,kBAAkB,GAAG,MAAMT,GAAG,CAACU,0BAAJ,CAC/BR,YAD+B,EAE/BK,YAF+B,EAG/BC,qBAH+B,CAAjC;AAKAH,IAAAA,OAAO,CAACC,GAAR,CAAYG,kBAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GApBD;;AAsBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AAAK,IAAA,GAAG,EAAEZ,GAAV;AAAe,IAAA,EAAE,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEI,CAAC,IAAID,iBAAiB,CAACC,CAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADF;AAcD,CArCD;;AAsCAO,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEAD,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,eAAeV,iBAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport img from \"./image1.jpg\";\nimport * as bodyPix from \"@tensorflow-models/body-pix\";\n\nconst videosegmentation = () => {\n  const loadAndUseBodyPix = async e => {\n    // async function loadAndUseBodyPix() {\n    e.preventDefault();\n    const net = await bodyPix.load();\n    // BodyPix model loaded\n    const imageElement = document.getElementById(\"image\");\n    console.log(\"Loaded\");\n    // load the BodyPix model from a checkpoint\n\n    // arguments for estimating person segmentation.\n    const outputStride = 16;\n    const segmentationThreshold = 0.5;\n\n    const personSegmentation = await net.estimatePersonSegmentation(\n      imageElement,\n      outputStride,\n      segmentationThreshold\n    );\n    console.log(personSegmentation);\n    console.log(\"Reached\");\n  };\n\n  return (\n    <div>\n      Reached Video Segmentation Page\n      <img src={img} id=\"image\" />\n      <form className=\"form\" onSubmit={e => loadAndUseBodyPix(e)}>\n        <input\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          value=\"Register\"\n          required\n        />\n      </form>\n    </div>\n  );\n};\nconsole.log(\"Hello\");\n\nconsole.log(\"Bigshot\");\nexport default videosegmentation;\n"]},"metadata":{},"sourceType":"module"}