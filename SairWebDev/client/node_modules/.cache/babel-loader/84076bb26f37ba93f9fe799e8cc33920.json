{"ast":null,"code":"import _slicedToArray from \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"simple-peer\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./videochatstyles.css\";\nlet client = {};\n\nconst Videochat = () => {\n  const _useState = useState({\n    clientID: -1\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        clientInfo = _useState2[0],\n        setClientInfo = _useState2[1];\n\n  var str = null;\n  var clientID;\n  const socket = socketIOClient(\"http://127.0.0.1:5000\"); //   var peer = new Peer({\n  //     initiator: true,\n  //     trickle: false\n  //     //   stream: stream\n  //   });\n\n  var peer = null;\n\n  const onsubmit = async e => {\n    e.preventDefault();\n    document.querySelector(\"#yourID\").value = \"\";\n    var id = Math.floor(Math.random() * 999999); // console.log(id);\n\n    document.getElementById(\"clientID\").textContent = \"ClientID: \" + id; // var text = document.getElementById(\"connectingID\").textContent;\n\n    peer = new Peer({\n      initiator: window.location.hash === \"#init\",\n      trickle: false //   stream: stream\n\n    });\n    console.log(peer);\n    peer.on(\"error\", function (err) {\n      console.log(\"error\", err);\n    });\n    peer.on(\"signal\", function (data) {\n      console.log(\"SIGNAL\", JSON.stringify(data));\n      document.querySelector(\"#yourID\").value = JSON.stringify(data);\n    });\n  };\n\n  const startChat = async e => {\n    e.preventDefault();\n    var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n    peer.signal(otherID);\n  };\n\n  const sendTextMessage = async e => {\n    e.preventDefault();\n    var message = document.getElementById(\"message\").value;\n    peer.send(message);\n  };\n\n  peer.on(\"data\", data => {\n    console.log(\"HEL\");\n    document.getElementById(\"reading\").textContent = data;\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onsubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Get Info\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => startChat(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter the ID to connect with your friend\",\n    name: \"name\",\n    id: \"connectingID\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"clientID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Your ID: \")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"IDPeer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Your Token: \"), React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"yourID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Start Video Chat\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => sendTextMessage(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"messageLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Write Your Message: \"), React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    id: \"msgbox\",\n    class: \"message-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"reading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"block_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"video-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"video-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js"],"names":["React","Fragment","useState","useEffect","Peer","socketIOClient","client","Videochat","clientID","clientInfo","setClientInfo","str","socket","peer","onsubmit","e","preventDefault","document","querySelector","value","id","Math","floor","random","getElementById","textContent","initiator","window","location","hash","trickle","console","log","on","err","data","JSON","stringify","startChat","otherID","parse","signal","sendTextMessage","message","send"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"simple-peer\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./videochatstyles.css\";\n\nlet client = {};\n\nconst Videochat = () => {\n  const [clientInfo, setClientInfo] = useState({\n    clientID: -1\n  });\n\n  var str = null;\n  var clientID;\n  const socket = socketIOClient(\"http://127.0.0.1:5000\");\n\n  //   var peer = new Peer({\n  //     initiator: true,\n  //     trickle: false\n  //     //   stream: stream\n  //   });\n  var peer = null;\n  const onsubmit = async e => {\n    e.preventDefault();\n    document.querySelector(\"#yourID\").value = \"\";\n    var id = Math.floor(Math.random() * 999999);\n    // console.log(id);\n    document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n\n    // var text = document.getElementById(\"connectingID\").textContent;\n    peer = new Peer({\n      initiator: window.location.hash === \"#init\",\n      trickle: false\n      //   stream: stream\n    });\n    console.log(peer);\n    peer.on(\"error\", function(err) {\n      console.log(\"error\", err);\n    });\n\n    peer.on(\"signal\", function(data) {\n      console.log(\"SIGNAL\", JSON.stringify(data));\n      document.querySelector(\"#yourID\").value = JSON.stringify(data);\n    });\n  };\n\n  const startChat = async e => {\n    e.preventDefault();\n    var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n    peer.signal(otherID);\n  };\n\n  const sendTextMessage = async e => {\n    e.preventDefault();\n    var message = document.getElementById(\"message\").value;\n    peer.send(message);\n  };\n  peer.on(\"data\", data => {\n    console.log(\"HEL\");\n    document.getElementById(\"reading\").textContent = data;\n  });\n  return (\n    <Fragment>\n      {/* <button onClick={() => handleNewMessage()}>Emit new message</button> */}\n      <div>\n        <form className=\"form\" onSubmit={e => onsubmit(e)}>\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Get Info\"\n            required\n          />\n        </form>\n        <form className=\"form\" onSubmit={e => startChat(e)}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter the ID to connect with your friend\"\n              name=\"name\"\n              id=\"connectingID\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label id=\"clientID\">Your ID: </label>\n          </div>\n          <div className=\"form-group\">\n            <label id=\"IDPeer\">Your Token: </label>\n            <textarea class=\"form-control\" rows=\"5\" id=\"yourID\" />\n          </div>\n\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Start Video Chat\"\n            required\n          />\n        </form>\n\n        <form className=\"form\" onSubmit={e => sendTextMessage(e)}>\n          <div className=\"form-group\">\n            <label id=\"messageLabel\">Write Your Message: </label>\n            <textarea class=\"form-control\" rows=\"5\" id=\"message\" />\n          </div>\n        </form>\n      </div>\n\n      {/* <div className=\"container parent-box row \">\n        <div className=\"col-sm-4 d-flex justify-content-center video-box\" />{\" \"}\n        <div className=\"col-sm-4 d-flex justify-content-center video-box\" />\n      </div> */}\n\n      <div id=\"msgbox\" class=\"message-box\">\n        <textarea class=\"form-control\" rows=\"5\" id=\"reading\" />\n      </div>\n      <div id=\"block_container\">\n        <div className=\"video-box\">\n          <video />\n        </div>\n        <div className=\"video-box\">\n          <video />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}