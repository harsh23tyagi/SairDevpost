{"ast":null,"code":"var _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/videochat.js\";\nimport React, { Fragment } from \"react\";\nimport * as peer from \"simple-peer\"; // import * as sock from \"socket.io\";\n//let peer = require(\"simple-peer\");\n\nimport io from \"socket.io-client\";\nlet socket = io();\nconst video = document.querySelector(\"video\");\nlet client = {}; //Getting strem\n//asking user permission\n//navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n\nconst videochat = () => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Video Chat App\"), React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row h-100 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 col-sm-6 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"embed-responsive embed-respnsive-16by9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    src: \"\",\n    className: \"embed-responsive-item\",\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col-12 col-sm-6 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"embed-responsive embed-respnsive-16by9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })))), React.createElement(\"script\", {\n    src: \"/socket.io/socket.io.js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), \";\");\n};\n\nnavigator.mediaDevices.getUserMedia({\n  video: true,\n  audio: true\n}).then(stream => {\n  socket.emit(\"newClientAdded\");\n  video.srcObject = stream;\n  video.play();\n\n  function initPeer(type) {\n    let peer = new peer.Peer({\n      initiator: type == \"init\" ? true : false,\n      stream: stream,\n      trickle: false\n    });\n    peer.on(\"stream\", function (stream) {// CreateVideo(stream);\n    });\n    peer.on(\"close\", function () {\n      document.getElementById(\"peerVideo\").remove();\n      peer.destroy();\n    });\n    return peer;\n  }\n}).catch(error => {\n  console.log(error);\n});\nexport default videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/videochat.js"],"names":["React","Fragment","peer","io","socket","video","document","querySelector","client","videochat","navigator","mediaDevices","getUserMedia","audio","then","stream","emit","srcObject","play","initPeer","type","Peer","initiator","trickle","on","getElementById","remove","destroy","catch","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB,C,CACA;AACA;;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAM,GAAGD,EAAE,EAAf;AACA,MAAME,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA,IAAIC,MAAM,GAAG,EAAb,C,CAEA;AACA;AAEA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,GAAG,EAAC,EAAX;AAAc,IAAA,SAAS,EAAC,uBAAxB;AAAgD,IAAA,KAAK,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,EAQE;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADF,CAFF,EAkBE;AAAQ,IAAA,GAAG,EAAC,yBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,MADF;AAsBD,CAvBD;;AAyBAC,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEP,EAAAA,KAAK,EAAE,IAAT;AAAeQ,EAAAA,KAAK,EAAE;AAAtB,CADhB,EAEGC,IAFH,CAEQC,MAAM,IAAI;AACdX,EAAAA,MAAM,CAACY,IAAP,CAAY,gBAAZ;AACAX,EAAAA,KAAK,CAACY,SAAN,GAAkBF,MAAlB;AACAV,EAAAA,KAAK,CAACa,IAAN;;AAEA,WAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,QAAIlB,IAAI,GAAG,IAAIA,IAAI,CAACmB,IAAT,CAAc;AACvBC,MAAAA,SAAS,EAAEF,IAAI,IAAI,MAAR,GAAiB,IAAjB,GAAwB,KADZ;AAEvBL,MAAAA,MAAM,EAAEA,MAFe;AAGvBQ,MAAAA,OAAO,EAAE;AAHc,KAAd,CAAX;AAKArB,IAAAA,IAAI,CAACsB,EAAL,CAAQ,QAAR,EAAkB,UAAST,MAAT,EAAiB,CACjC;AACD,KAFD;AAGAb,IAAAA,IAAI,CAACsB,EAAL,CAAQ,OAAR,EAAiB,YAAW;AAC1BlB,MAAAA,QAAQ,CAACmB,cAAT,CAAwB,WAAxB,EAAqCC,MAArC;AACAxB,MAAAA,IAAI,CAACyB,OAAL;AACD,KAHD;AAIA,WAAOzB,IAAP;AACD;AACF,CAtBH,EAuBG0B,KAvBH,CAuBSC,KAAK,IAAI;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,CAzBH;AA0BA,eAAepB,SAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport * as peer from \"simple-peer\";\n// import * as sock from \"socket.io\";\n//let peer = require(\"simple-peer\");\nimport io from \"socket.io-client\";\n\nlet socket = io();\nconst video = document.querySelector(\"video\");\nlet client = {};\n\n//Getting strem\n//asking user permission\n\n//navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n\nconst videochat = () => {\n  return (\n    <Fragment>\n      <h1>Video Chat App</h1>\n      <div className=\"container-fluid\">\n        <div className=\"row h-100 w-100\">\n          {/* First Person Video */}\n          <div className=\"col-12 col-sm-6 d-flex justify-content-center\">\n            <div className=\"embed-responsive embed-respnsive-16by9\">\n              <video src=\"\" className=\"embed-responsive-item\" muted />\n            </div>\n          </div>\n          {/* Second Person's Video created dynamically */}\n          <div className=\"col-12 col-sm-6 d-flex justify-content-center\">\n            <div className=\"embed-responsive embed-respnsive-16by9\">\n              {/* Video element will be generated dynamically */}\n            </div>\n          </div>\n        </div>\n      </div>\n      <script src=\"/socket.io/socket.io.js\" />;\n    </Fragment>\n  );\n};\n\nnavigator.mediaDevices\n  .getUserMedia({ video: true, audio: true })\n  .then(stream => {\n    socket.emit(\"newClientAdded\");\n    video.srcObject = stream;\n    video.play();\n\n    function initPeer(type) {\n      let peer = new peer.Peer({\n        initiator: type == \"init\" ? true : false,\n        stream: stream,\n        trickle: false\n      });\n      peer.on(\"stream\", function(stream) {\n        // CreateVideo(stream);\n      });\n      peer.on(\"close\", function() {\n        document.getElementById(\"peerVideo\").remove();\n        peer.destroy();\n      });\n      return peer;\n    }\n  })\n  .catch(error => {\n    console.log(error);\n  });\nexport default videochat;\n"]},"metadata":{},"sourceType":"module"}