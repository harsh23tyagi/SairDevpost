{"ast":null,"code":"// import React, { Fragment, useState, useEffect } from \"react\";\n// import Peer from \"simple-peer\";\n// import socketIOClient from \"socket.io-client\";\n// import \"./videochatstyles.css\";\n// import { triggerAsyncId } from \"async_hooks\";\n// let client = {};\n// var peer;\n// const Videochat = () => {\n//   const [clientInfo, setClientInfo] = useState({\n//     clientID: -1\n//   });\n//   var str = null;\n//   var clientID;\n//   const socket = socketIOClient(\"http://127.0.0.1:5000\");\n//   //   var peer = new Peer({\n//   //     initiator: true,\n//   //     trickle: false\n//   //     //   stream: stream\n//   //   });\n//   //   useEffect(()=>{\n//   //       navigator.mediaDevices.getUserMedia({video: true, audio:false})\n//   //   })\n//   const onsubmit = async e => {\n//     e.preventDefault();\n//     document.querySelector(\"#yourID\").value = \"\";\n//     var id = Math.floor(Math.random() * 999999);\n//     // console.log(id);\n//     document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n//     // var text = document.getElementById(\"connectingID\").textContent;\n//     peer = new Peer({\n//       initiator: window.location.hash === \"#init\",\n//       trickle: false\n//       //   stream: stream\n//     });\n//     console.log(peer);\n//     peer.on(\"error\", function(err) {\n//       console.log(\"error\", err);\n//     });\n//     peer.on(\"signal\", function(data) {\n//       console.log(\"SIGNAL\", JSON.stringify(data));\n//       document.querySelector(\"#yourID\").value = JSON.stringify(data);\n//     });\n//     peer.on(\"data\", data => {\n//       console.log(\"HEL\" + data);\n//       document.getElementById(\"reading\").value = data;\n//     });\n//     // peer.on(\"stream\", stream => {\n//     //   var vid = document.getElementById(\"peervid\");\n//     //   vid.srcObject = stream;\n//     //   vid.play();\n//     // });\n//   };\n//   const startChat = async e => {\n//     e.preventDefault();\n//     var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n//     console.log(peer);\n//     // console.log\n//     peer.signal(otherID);\n//   };\n//   const sendTextMessage = async e => {\n//     e.preventDefault();\n//     var message = document.getElementById(\"message\").value;\n//     peer.send(message);\n//   };\n//   //   const startVideoChat = async e => {\n//   //     e.preventDefault();\n//   //     navigator.mediaDevices\n//   //       .getUserMedia({ video: true, audio: true })\n//   //       .then(stream => {\n//   //         document.querySelector(\"#yourID\").value = \"\";\n//   //         var id = Math.floor(Math.random() * 999999);\n//   //         // console.log(id);\n//   //         document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n//   //         // var text = document.getElementById(\"connectingID\").textContent;\n//   //         // var peer = new Peer({\n//   //         //   initiator: window.location.hash === \"#init\",\n//   //         //   trickle: false,\n//   //         //   stream: stream\n//   //         // });\n//   //       });\n//   //     peer.on(\"stream\", stream => {\n//   //       var vid = document.getElementById(\"peervid\");\n//   //       vid.srcObj = stream;\n//   //       vid.play();\n//   //     });\n//   //   };\n//   return (\n//     <Fragment>\n//       {/* <button onClick={() => handleNewMessage()}>Emit new message</button> */}\n//       <div>\n//         <form className=\"form\" onSubmit={e => onsubmit(e)}>\n//           <input\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//             value=\"Get Info\"\n//             required\n//           />\n//         </form>\n//         <form className=\"form\" onSubmit={e => startChat(e)}>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter the ID to connect with your friend\"\n//               name=\"name\"\n//               id=\"connectingID\"\n//               required\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label id=\"clientID\">Your ID: </label>\n//           </div>\n//           <div className=\"form-group\">\n//             <label id=\"IDPeer\">Your Token: </label>\n//             <textarea class=\"form-control\" rows=\"5\" id=\"yourID\" />\n//           </div>\n//           <input\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//             value=\"Create Connection\"\n//             required\n//           />\n//         </form>\n//         <form className=\"form\" onSubmit={e => sendTextMessage(e)}>\n//           <div className=\"form-group\">\n//             <label id=\"messageLabel\">Write Your Message: </label>\n//             <textarea class=\"form-control\" rows=\"5\" id=\"message\" />\n//           </div>\n//           <input\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//             value=\"Send Text Message\"\n//             required\n//           />\n//         </form>\n//         <form className=\"form\">\n//           <input\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//             value=\"Start Video Chat\"\n//             required\n//           />\n//         </form>\n//       </div>\n//       {/* <div className=\"container parent-box row \">\n//         <div className=\"col-sm-4 d-flex justify-content-center video-box\" />{\" \"}\n//         <div className=\"col-sm-4 d-flex justify-content-center video-box\" />\n//       </div> */}\n//       <div id=\"msgbox\" class=\"message-box\">\n//         <textarea class=\"form-control\" rows=\"5\" id=\"reading\" />\n//       </div>\n//       <div id=\"block_container\">\n//         <div className=\"video-box\">\n//           <video id=\"peervid\" />\n//         </div>\n//         <div className=\"video-box\">\n//           <video />\n//         </div>\n//       </div>\n//     </Fragment>\n//   );\n// };\n// export default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js"],"names":[],"mappingssourcesContent":["// import React, { Fragment, useState, useEffect } from \"react\";\n// import Peer from \"simple-peer\";\n// import socketIOClient from \"socket.io-client\";\n// import \"./videochatstyles.css\";\n// import { triggerAsyncId } from \"async_hooks\";\n\n// let client = {};\n// var peer;\n// const Videochat = () => {\n//   const [clientInfo, setClientInfo] = useState({\n//     clientID: -1\n//   });\n\n//   var str = null;\n//   var clientID;\n//   const socket = socketIOClient(\"http://127.0.0.1:5000\");\n\n//   //   var peer = new Peer({\n//   //     initiator: true,\n//   //     trickle: false\n//   //     //   stream: stream\n//   //   });\n\n//   //   useEffect(()=>{\n//   //       navigator.mediaDevices.getUserMedia({video: true, audio:false})\n//   //   })\n//   const onsubmit = async e => {\n//     e.preventDefault();\n//     document.querySelector(\"#yourID\").value = \"\";\n//     var id = Math.floor(Math.random() * 999999);\n//     // console.log(id);\n//     document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n\n//     // var text = document.getElementById(\"connectingID\").textContent;\n//     peer = new Peer({\n//       initiator: window.location.hash === \"#init\",\n//       trickle: false\n//       //   stream: stream\n//     });\n//     console.log(peer);\n//     peer.on(\"error\", function(err) {\n//       console.log(\"error\", err);\n//     });\n\n//     peer.on(\"signal\", function(data) {\n//       console.log(\"SIGNAL\", JSON.stringify(data));\n//       document.querySelector(\"#yourID\").value = JSON.stringify(data);\n//     });\n\n//     peer.on(\"data\", data => {\n//       console.log(\"HEL\" + data);\n//       document.getElementById(\"reading\").value = data;\n//     });\n\n//     // peer.on(\"stream\", stream => {\n//     //   var vid = document.getElementById(\"peervid\");\n//     //   vid.srcObject = stream;\n//     //   vid.play();\n//     // });\n//   };\n\n//   const startChat = async e => {\n//     e.preventDefault();\n//     var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n//     console.log(peer);\n//     // console.log\n//     peer.signal(otherID);\n//   };\n\n//   const sendTextMessage = async e => {\n//     e.preventDefault();\n//     var message = document.getElementById(\"message\").value;\n//     peer.send(message);\n//   };\n//   //   const startVideoChat = async e => {\n//   //     e.preventDefault();\n//   //     navigator.mediaDevices\n//   //       .getUserMedia({ video: true, audio: true })\n//   //       .then(stream => {\n//   //         document.querySelector(\"#yourID\").value = \"\";\n//   //         var id = Math.floor(Math.random() * 999999);\n//   //         // console.log(id);\n//   //         document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n\n//   //         // var text = document.getElementById(\"connectingID\").textContent;\n//   //         // var peer = new Peer({\n//   //         //   initiator: window.location.hash === \"#init\",\n//   //         //   trickle: false,\n//   //         //   stream: stream\n//   //         // });\n//   //       });\n//   //     peer.on(\"stream\", stream => {\n//   //       var vid = document.getElementById(\"peervid\");\n//   //       vid.srcObj = stream;\n//   //       vid.play();\n//   //     });\n//   //   };\n\n//   return (\n//     <Fragment>\n//       {/* <button onClick={() => handleNewMessage()}>Emit new message</button> */}\n//       <div>\n//         <form className=\"form\" onSubmit={e => onsubmit(e)}>\n//           <input\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//             value=\"Get Info\"\n//             required\n//           />\n//         </form>\n//         <form className=\"form\" onSubmit={e => startChat(e)}>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter the ID to connect with your friend\"\n//               name=\"name\"\n//               id=\"connectingID\"\n//               required\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label id=\"clientID\">Your ID: </label>\n//           </div>\n//           <div className=\"form-group\">\n//             <label id=\"IDPeer\">Your Token: </label>\n//             <textarea class=\"form-control\" rows=\"5\" id=\"yourID\" />\n//           </div>\n\n//           <input\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//             value=\"Create Connection\"\n//             required\n//           />\n//         </form>\n\n//         <form className=\"form\" onSubmit={e => sendTextMessage(e)}>\n//           <div className=\"form-group\">\n//             <label id=\"messageLabel\">Write Your Message: </label>\n//             <textarea class=\"form-control\" rows=\"5\" id=\"message\" />\n//           </div>\n//           <input\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//             value=\"Send Text Message\"\n//             required\n//           />\n//         </form>\n//         <form className=\"form\">\n//           <input\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//             value=\"Start Video Chat\"\n//             required\n//           />\n//         </form>\n//       </div>\n\n//       {/* <div className=\"container parent-box row \">\n//         <div className=\"col-sm-4 d-flex justify-content-center video-box\" />{\" \"}\n//         <div className=\"col-sm-4 d-flex justify-content-center video-box\" />\n//       </div> */}\n\n//       <div id=\"msgbox\" class=\"message-box\">\n//         <textarea class=\"form-control\" rows=\"5\" id=\"reading\" />\n//       </div>\n//       <div id=\"block_container\">\n//         <div className=\"video-box\">\n//           <video id=\"peervid\" />\n//         </div>\n//         <div className=\"video-box\">\n//           <video />\n//         </div>\n//       </div>\n//     </Fragment>\n//   );\n// };\n\n// export default Videochat;\n"]},"metadata":{},"sourceType":"module"}