{"ast":null,"code":"import _slicedToArray from \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/VideochatWSeg.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"simple-peer\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./videochatstyles.css\"; //=====================================================P2P=======================================\n\nlet client = {};\nvar peer;\n\nconst Videochat = () => {\n  const _useState = useState({\n    clientID: -1\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        clientInfo = _useState2[0],\n        setClientInfo = _useState2[1];\n\n  var str = null;\n  var clientID;\n  const socket = socketIOClient(\"http://localhost:5000\");\n\n  const demoKickOff = async e => {\n    e.preventDefault();\n    state.net = await bodyPix.load(+guiState.input.mobileNetArchitecture); // document.getElementById(\"loading\").style.display = \"none\";\n\n    document.getElementById(\"main\").style.display = \"inline-block\";\n    await loadVideo();\n    let cameras = await getVideoInputs();\n    setupFPS();\n    setupGui(cameras);\n    segmentBodyInRealTime();\n  };\n\n  useEffect(() => {\n    console.log(\"Enrered\");\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      console.log(\"ACCESSING\");\n      document.getElementById(\"getInfo\").addEventListener(\"click\", () => {\n        document.querySelector(\"#yourID\").value = \"\";\n        var id = Math.floor(Math.random() * 999999); // console.log(id);\n\n        document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n        peer = new Peer({\n          initiator: window.location.hash === \"#init\",\n          trickle: false,\n          stream: stream\n        });\n        peer.on(\"error\", function (err) {\n          console.log(\"error\", err);\n        });\n        peer.on(\"signal\", function (data) {\n          console.log(\"SIGNAL\", JSON.stringify(data));\n          document.querySelector(\"#yourID\").value = JSON.stringify(data);\n        });\n        peer.on(\"data\", data => {\n          console.log(\"HEL\" + data);\n          document.getElementById(\"reading\").value = data;\n        });\n        peer.on(\"stream\", stream => {\n          var vid = document.getElementById(\"peervid\");\n          vid.srcObject = stream;\n          vid.play();\n        });\n      });\n      document.getElementById(\"createConnection\").addEventListener(\"click\", () => {\n        var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n        console.log(peer); // console.log\n\n        peer.signal(otherID);\n      });\n    });\n  });\n\n  const onsubmit = async e => {\n    e.preventDefault();\n    document.querySelector(\"#yourID\").value = \"\";\n    var id = Math.floor(Math.random() * 999999); // console.log(id);\n\n    document.getElementById(\"clientID\").textContent = \"ClientID: \" + id; // var text = document.getElementById(\"connectingID\").textContent;\n\n    peer = new Peer({\n      initiator: window.location.hash === \"#init\",\n      trickle: false //   stream: stream\n\n    });\n    console.log(peer);\n    peer.on(\"error\", function (err) {\n      console.log(\"error\", err);\n    });\n    peer.on(\"signal\", function (data) {\n      console.log(\"SIGNAL\", JSON.stringify(data));\n      document.querySelector(\"#yourID\").value = JSON.stringify(data);\n    });\n    peer.on(\"data\", data => {\n      console.log(\"HEL\" + data);\n      document.getElementById(\"reading\").value = data;\n    });\n    peer.on(\"stream\", stream => {\n      var vid = document.getElementById(\"peervid\");\n      vid.srcObject = stream;\n      vid.onplay();\n    });\n  };\n\n  const startChat = async e => {\n    e.preventDefault();\n    var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n    console.log(peer); // console.log\n\n    peer.signal(otherID);\n  };\n\n  const sendTextMessage = async e => {\n    e.preventDefault();\n    var message = document.getElementById(\"message\").value;\n    peer.send(message);\n  }; //   const startVideoChat = async e => {\n  //     e.preventDefault();\n  //     navigator.mediaDevices\n  //       .getUserMedia({ video: true, audio: true })\n  //       .then(stream => {\n  //         document.querySelector(\"#yourID\").value = \"\";\n  //         var id = Math.floor(Math.random() * 999999);\n  //         // console.log(id);\n  //         document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n  //         // var text = document.getElementById(\"connectingID\").textContent;\n  //         // var peer = new Peer({\n  //         //   initiator: window.location.hash === \"#init\",\n  //         //   trickle: false,\n  //         //   stream: stream\n  //         // });\n  //       });\n  //     peer.on(\"stream\", stream => {\n  //       var vid = document.getElementById(\"peervid\");\n  //       vid.srcObj = stream;\n  //       vid.play();\n  //     });\n  //   };\n\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    // type=\"submit\"\n    id: \"getInfo\",\n    className: \"btn btn-primary\",\n    value: \"Get Info\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter the ID to connect with your friend\",\n    name: \"name\",\n    id: \"connectingID\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"clientID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Your ID: \")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"IDPeer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Your Token: \"), React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"yourID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"btn btn-primary\",\n    value: \"Create Connection\",\n    id: \"createConnection\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => sendTextMessage(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"messageLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Write Your Message: \"), React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Send Text Message\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Start Video Chat\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"msgbox\",\n    class: \"message-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"reading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"block_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"video-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    id: \"peervid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"video-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => demoKickOff(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Get Device Label\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Start Recording\",\n    id: \"startRec\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Stop Recording\",\n    id: \"stopRec\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"stats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"info\",\n    className: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"main\",\n    className: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    id: \"video\",\n    className: \"videoClass\",\n    playsInline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }), React.createElement(\"canvas\", {\n    id: \"output\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    id: \"bijli\",\n    controls: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    id: \"colors\",\n    className: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  })));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/VideochatWSeg.js"],"names":["React","Fragment","useState","useEffect","Peer","socketIOClient","client","peer","Videochat","clientID","clientInfo","setClientInfo","str","socket","demoKickOff","e","preventDefault","state","net","bodyPix","load","guiState","input","mobileNetArchitecture","document","getElementById","style","display","loadVideo","cameras","getVideoInputs","setupFPS","setupGui","segmentBodyInRealTime","console","log","navigator","mediaDevices","getUserMedia","video","audio","then","stream","addEventListener","querySelector","value","id","Math","floor","random","textContent","initiator","window","location","hash","trickle","on","err","data","JSON","stringify","vid","srcObject","play","otherID","parse","signal","onsubmit","onplay","startChat","sendTextMessage","message","send"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"simple-peer\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./videochatstyles.css\";\n//=====================================================P2P=======================================\nlet client = {};\nvar peer;\nconst Videochat = () => {\n  const [clientInfo, setClientInfo] = useState({\n    clientID: -1\n  });\n\n  var str = null;\n  var clientID;\n  const socket = socketIOClient(\"http://localhost:5000\");\n\n  const demoKickOff = async e => {\n    e.preventDefault();\n    state.net = await bodyPix.load(+guiState.input.mobileNetArchitecture);\n\n    // document.getElementById(\"loading\").style.display = \"none\";\n    document.getElementById(\"main\").style.display = \"inline-block\";\n\n    await loadVideo();\n\n    let cameras = await getVideoInputs();\n\n    setupFPS();\n    setupGui(cameras);\n\n    segmentBodyInRealTime();\n  };\n\n  useEffect(() => {\n    console.log(\"Enrered\");\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        console.log(\"ACCESSING\");\n        document.getElementById(\"getInfo\").addEventListener(\"click\", () => {\n          document.querySelector(\"#yourID\").value = \"\";\n          var id = Math.floor(Math.random() * 999999);\n          // console.log(id);\n          document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n\n          peer = new Peer({\n            initiator: window.location.hash === \"#init\",\n            trickle: false,\n            stream: stream\n          });\n\n          peer.on(\"error\", function(err) {\n            console.log(\"error\", err);\n          });\n\n          peer.on(\"signal\", function(data) {\n            console.log(\"SIGNAL\", JSON.stringify(data));\n            document.querySelector(\"#yourID\").value = JSON.stringify(data);\n          });\n\n          peer.on(\"data\", data => {\n            console.log(\"HEL\" + data);\n            document.getElementById(\"reading\").value = data;\n          });\n\n          peer.on(\"stream\", stream => {\n            var vid = document.getElementById(\"peervid\");\n            vid.srcObject = stream;\n            vid.play();\n          });\n        });\n\n        document\n          .getElementById(\"createConnection\")\n          .addEventListener(\"click\", () => {\n            var otherID = JSON.parse(\n              document.getElementById(\"connectingID\").value\n            );\n            console.log(peer);\n            // console.log\n            peer.signal(otherID);\n          });\n      });\n  });\n  const onsubmit = async e => {\n    e.preventDefault();\n    document.querySelector(\"#yourID\").value = \"\";\n    var id = Math.floor(Math.random() * 999999);\n    // console.log(id);\n    document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n\n    // var text = document.getElementById(\"connectingID\").textContent;\n\n    peer = new Peer({\n      initiator: window.location.hash === \"#init\",\n      trickle: false\n      //   stream: stream\n    });\n\n    console.log(peer);\n    peer.on(\"error\", function(err) {\n      console.log(\"error\", err);\n    });\n\n    peer.on(\"signal\", function(data) {\n      console.log(\"SIGNAL\", JSON.stringify(data));\n      document.querySelector(\"#yourID\").value = JSON.stringify(data);\n    });\n\n    peer.on(\"data\", data => {\n      console.log(\"HEL\" + data);\n      document.getElementById(\"reading\").value = data;\n    });\n\n    peer.on(\"stream\", stream => {\n      var vid = document.getElementById(\"peervid\");\n      vid.srcObject = stream;\n      vid.onplay();\n    });\n  };\n\n  const startChat = async e => {\n    e.preventDefault();\n    var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n    console.log(peer);\n    // console.log\n    peer.signal(otherID);\n  };\n\n  const sendTextMessage = async e => {\n    e.preventDefault();\n    var message = document.getElementById(\"message\").value;\n    peer.send(message);\n  };\n  //   const startVideoChat = async e => {\n  //     e.preventDefault();\n  //     navigator.mediaDevices\n  //       .getUserMedia({ video: true, audio: true })\n  //       .then(stream => {\n  //         document.querySelector(\"#yourID\").value = \"\";\n  //         var id = Math.floor(Math.random() * 999999);\n  //         // console.log(id);\n  //         document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n\n  //         // var text = document.getElementById(\"connectingID\").textContent;\n  //         // var peer = new Peer({\n  //         //   initiator: window.location.hash === \"#init\",\n  //         //   trickle: false,\n  //         //   stream: stream\n  //         // });\n  //       });\n  //     peer.on(\"stream\", stream => {\n  //       var vid = document.getElementById(\"peervid\");\n  //       vid.srcObj = stream;\n  //       vid.play();\n  //     });\n  //   };\n\n  return (\n    <Fragment>\n      {/* <button onClick={() => handleNewMessage()}>Emit new message</button> */}\n      <div>\n        <form className=\"form\">\n          {/* onSubmit={e => onsubmit(e)}> */}\n          <input\n            // type=\"submit\"\n            id=\"getInfo\"\n            className=\"btn btn-primary\"\n            value=\"Get Info\"\n            required\n          />\n        </form>\n        <form className=\"form\">\n          {/* onSubmit={e => startChat(e)} */}\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter the ID to connect with your friend\"\n              name=\"name\"\n              id=\"connectingID\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label id=\"clientID\">Your ID: </label>\n          </div>\n          <div className=\"form-group\">\n            <label id=\"IDPeer\">Your Token: </label>\n            <textarea class=\"form-control\" rows=\"5\" id=\"yourID\" />\n          </div>\n\n          <input\n            className=\"btn btn-primary\"\n            value=\"Create Connection\"\n            id=\"createConnection\"\n            required\n          />\n        </form>\n\n        <form className=\"form\" onSubmit={e => sendTextMessage(e)}>\n          <div className=\"form-group\">\n            <label id=\"messageLabel\">Write Your Message: </label>\n            <textarea class=\"form-control\" rows=\"5\" id=\"message\" />\n          </div>\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Send Text Message\"\n            required\n          />\n        </form>\n        <form className=\"form\">\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Start Video Chat\"\n            required\n          />\n        </form>\n      </div>\n\n      {/* <div className=\"container parent-box row \">\n        <div className=\"col-sm-4 d-flex justify-content-center video-box\" />{\" \"}\n        <div className=\"col-sm-4 d-flex justify-content-center video-box\" />\n      </div> */}\n\n      <div id=\"msgbox\" class=\"message-box\">\n        <textarea class=\"form-control\" rows=\"5\" id=\"reading\" />\n      </div>\n      <div id=\"block_container\">\n        <div className=\"video-box\">\n          <video id=\"peervid\" />\n        </div>\n        <div className=\"video-box\">\n          <video />\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <form className=\"form\" onSubmit={e => demoKickOff(e)}>\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Get Device Label\"\n            required\n          />\n        </form>\n\n        <div>\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Start Recording\"\n            id=\"startRec\"\n            required\n          />\n\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Stop Recording\"\n            id=\"stopRec\"\n            required\n          />\n        </div>\n      </div>\n      <div id=\"stats\" />\n      <div id=\"info\" className=\"info\" />\n\n      <div id=\"main\" className=\"info\">\n        <video id=\"video\" className=\"videoClass\" playsInline />\n        <canvas id=\"output\" />\n      </div>\n      <div className=\"container\">\n        <video id=\"bijli\" controls></video>\n        <ul id=\"colors\" className=\"info\" />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}