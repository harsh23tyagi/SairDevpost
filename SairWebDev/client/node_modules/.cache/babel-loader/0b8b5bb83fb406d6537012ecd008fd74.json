{"ast":null,"code":"import _slicedToArray from \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochat.js\";\nimport React, { Fragment, useState } from \"react\"; // let Peer = require(\"simple-peer\");\n\nimport * as Peer from \"simple-peer\";\nimport socketIOClient from \"socket.io-client\";\nconst video = document.querySelector(\"video\");\nlet client = {}; // We can also pass an object with width and height for the video parameter of the getUSerMedia\n\nconst Videochat = () => {\n  const _useState = useState({\n    response: \"false\",\n    endpoint: \"http://127.0.0.1:5000\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        socketinfo = _useState2[0],\n        setsocketinfo = _useState2[1];\n\n  const socket = socketIOClient(socketinfo.endpoint);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row h-100 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"e\", React.createElement(\"div\", {\n    className: \"col-12 col-6 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"embed-responsive embed-responseive-16by9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    className: \"embed-responsive-item\",\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))))));\n  navigator.mediaDevices.getUserMedia({\n    video: true,\n    audio: true\n  }).then(stream => {\n    // notify backend\n    socket.emit(\"NewClient\", \"NewClient Added from vid chat\");\n    video.srcObject = stream;\n    video.play();\n  }).catch(err => document.write(err));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochat.js"],"names":["React","Fragment","useState","Peer","socketIOClient","video","document","querySelector","client","Videochat","response","endpoint","socketinfo","setsocketinfo","socket","navigator","mediaDevices","getUserMedia","audio","then","stream","emit","srcObject","play","catch","err","write"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C,C,CAEA;;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA,IAAIC,MAAM,GAAG,EAAb,C,CAEA;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACcP,QAAQ,CAAC;AAC3CQ,IAAAA,QAAQ,EAAE,OADiC;AAE3CC,IAAAA,QAAQ,EAAE;AAFiC,GAAD,CADtB;AAAA;AAAA,QACfC,UADe;AAAA,QACHC,aADG;;AAKtB,QAAMC,MAAM,GAAGV,cAAc,CAACQ,UAAU,CAACD,QAAZ,CAA7B;AAEA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEE;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,uBAAjB;AAAyC,IAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,CADF,CADF,CADF;AAeAI,EAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEZ,IAAAA,KAAK,EAAE,IAAT;AAAea,IAAAA,KAAK,EAAE;AAAtB,GADhB,EAEGC,IAFH,CAEQC,MAAM,IAAI;AACd;AACAN,IAAAA,MAAM,CAACO,IAAP,CAAY,WAAZ,EAAyB,+BAAzB;AACAhB,IAAAA,KAAK,CAACiB,SAAN,GAAkBF,MAAlB;AACAf,IAAAA,KAAK,CAACkB,IAAN;AACD,GAPH,EAQGC,KARH,CAQSC,GAAG,IAAInB,QAAQ,CAACoB,KAAT,CAAeD,GAAf,CARhB;AASD,CA/BD;;AAiCA,eAAehB,SAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\n\n// let Peer = require(\"simple-peer\");\nimport * as Peer from \"simple-peer\";\nimport socketIOClient from \"socket.io-client\";\nconst video = document.querySelector(\"video\");\nlet client = {};\n\n// We can also pass an object with width and height for the video parameter of the getUSerMedia\nconst Videochat = () => {\n  const [socketinfo, setsocketinfo] = useState({\n    response: \"false\",\n    endpoint: \"http://127.0.0.1:5000\"\n  });\n  const socket = socketIOClient(socketinfo.endpoint);\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className=\"row h-100 w-100\">\n          e\n          <div className=\"col-12 col-6 d-flex justify-content-center\">\n            <div className=\"embed-responsive embed-responseive-16by9\">\n              <video className=\"embed-responsive-item\" muted />\n              {/* We muted the above video as we dont want to hear our own voice  also the above raios and sizes fix the video to cover the entire screen*/}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n  navigator.mediaDevices\n    .getUserMedia({ video: true, audio: true })\n    .then(stream => {\n      // notify backend\n      socket.emit(\"NewClient\", \"NewClient Added from vid chat\");\n      video.srcObject = stream;\n      video.play();\n    })\n    .catch(err => document.write(err));\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}