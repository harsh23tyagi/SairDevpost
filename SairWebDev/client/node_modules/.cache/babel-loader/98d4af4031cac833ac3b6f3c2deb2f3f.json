{"ast":null,"code":"import _slicedToArray from \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochat.js\";\nimport React, { Fragment, useState, useEffect } from \"react\"; // let Peer = require(\"simple-peer\");\n// import * as Peer from \"simple-peer\";\n\nlet Peer = require(\"simple-peer\");\n\nimport socketIOClient from \"socket.io-client\"; // const video = document.querySelector(\"video\");\n\nlet client = {}; // We can also pass an object with width and height for the video parameter of the getUSerMedia\n\nconst Videochat = () => {\n  const _useState = useState({\n    response: \"false\",\n    endpoint: \"http://127.0.0.1:5000\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        socketinfo = _useState2[0],\n        setsocketinfo = _useState2[1];\n\n  const socket = socketIOClient(socketinfo.endpoint);\n  var str = null;\n  useEffect(() => {\n    const video = document.querySelector(\"video\"); //Getting our own video\n\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      socket.emit(\"NewClient\");\n      video.srcObject = stream;\n      video.play();\n    }).catch(err => document.write(err));\n    console.log(\"Own Video Started\"); //Initializing Peer\n\n    function InitPeer(type) {\n      let peer = new Peer({\n        initiator: type == \"init\" ? true : false,\n        stream: stream,\n        trickle: false\n      });\n      peer.on(\"stream\", function (stream) {\n        createVideo(stream);\n      });\n      peer.on(\"close\", function () {\n        document.getElementById(\"peerVideo\").remove();\n        peer.destroy();\n      });\n      return peer;\n    } //function makePeer to send the offer\n\n\n    function makePeer() {\n      client.gotAnswer = false;\n      let peer = InitPeer(\"init\");\n      peer.on(\"signal\", function (data) {\n        if (!client.gotAnswer) {\n          socket.emit(\"offer\", data);\n        }\n      });\n      client.peer = peer;\n    } // FrontAnswer to respond to the offer sent my another client\n\n\n    function frontAnswer() {\n      let peer = InitPeer(\"notInit\");\n      peer.on(\"signal\", data => {\n        socket.emit(\"Answer\", data);\n      });\n      peer.signal(offer);\n    } //signal answer- handles answer from the backend\n\n\n    function signalAnswer(answer) {\n      client.gotAnswer = true;\n      let peer = client.peer;\n      peer.signal(answer);\n    } //creating a video element\n\n\n    function createVideo(stream) {\n      let video = document.createElement(\"video\");\n      video.id = \"peerVideo\";\n      video.srcObject = stream;\n      video.class = \"embed-responsive-item\";\n      document.querySelector(\"#peerDiv\").appendChild(video);\n      video.play();\n    }\n\n    function sessionActive() {\n      document.write(\"Session already in use- Please come back later\");\n    } //create a socket connection\n\n\n    socket.on(\"BackOffer\", frontAnswer);\n    socket.on(\"BackAnswer\", signalAnswer);\n    socket.on(\"SessionActive\", sessionActive);\n    socket.on(\"CreatePeer\", makePeer); //ends the function for useEffect hook\n    //\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row h-100 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Gekk\"), React.createElement(\"div\", {\n    className: \"col-12 col-6 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"embed-responsive embed-responseive-16by9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    className: \"embed-responsive-item\",\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col-12 col-6 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"peerVideo\",\n    className: \"embed-responsive embed-responseive-16by9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })))));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochat.js"],"names":["React","Fragment","useState","useEffect","Peer","require","socketIOClient","client","Videochat","response","endpoint","socketinfo","setsocketinfo","socket","str","video","document","querySelector","navigator","mediaDevices","getUserMedia","audio","then","stream","emit","srcObject","play","catch","err","write","console","log","InitPeer","type","peer","initiator","trickle","on","createVideo","getElementById","remove","destroy","makePeer","gotAnswer","data","frontAnswer","signal","offer","signalAnswer","answer","createElement","id","class","appendChild","sessionActive"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n\n// let Peer = require(\"simple-peer\");\n// import * as Peer from \"simple-peer\";\nlet Peer = require(\"simple-peer\");\nimport socketIOClient from \"socket.io-client\";\n// const video = document.querySelector(\"video\");\nlet client = {};\n\n// We can also pass an object with width and height for the video parameter of the getUSerMedia\nconst Videochat = () => {\n  const [socketinfo, setsocketinfo] = useState({\n    response: \"false\",\n    endpoint: \"http://127.0.0.1:5000\"\n  });\n  const socket = socketIOClient(socketinfo.endpoint);\n  var str = null;\n\n  useEffect(() => {\n    const video = document.querySelector(\"video\");\n\n    //Getting our own video\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        socket.emit(\"NewClient\");\n        video.srcObject = stream;\n        video.play();\n      })\n      .catch(err => document.write(err));\n\n    console.log(\"Own Video Started\");\n\n    //Initializing Peer\n    function InitPeer(type) {\n      let peer = new Peer({\n        initiator: type == \"init\" ? true : false,\n        stream: stream,\n        trickle: false\n      });\n      peer.on(\"stream\", function(stream) {\n        createVideo(stream);\n      });\n      peer.on(\"close\", function() {\n        document.getElementById(\"peerVideo\").remove();\n        peer.destroy();\n      });\n      return peer;\n    }\n\n    //function makePeer to send the offer\n    function makePeer() {\n      client.gotAnswer = false;\n      let peer = InitPeer(\"init\");\n      peer.on(\"signal\", function(data) {\n        if (!client.gotAnswer) {\n          socket.emit(\"offer\", data);\n        }\n      });\n      client.peer = peer;\n    }\n\n    // FrontAnswer to respond to the offer sent my another client\n    function frontAnswer() {\n      let peer = InitPeer(\"notInit\");\n      peer.on(\"signal\", data => {\n        socket.emit(\"Answer\", data);\n      });\n      peer.signal(offer);\n    }\n\n    //signal answer- handles answer from the backend\n    function signalAnswer(answer) {\n      client.gotAnswer = true;\n      let peer = client.peer;\n      peer.signal(answer);\n    }\n    //creating a video element\n\n    function createVideo(stream) {\n      let video = document.createElement(\"video\");\n      video.id = \"peerVideo\";\n      video.srcObject = stream;\n      video.class = \"embed-responsive-item\";\n      document.querySelector(\"#peerDiv\").appendChild(video);\n      video.play();\n    }\n\n    function sessionActive() {\n      document.write(\"Session already in use- Please come back later\");\n    }\n\n    //create a socket connection\n    socket.on(\"BackOffer\", frontAnswer);\n    socket.on(\"BackAnswer\", signalAnswer);\n    socket.on(\"SessionActive\", sessionActive);\n    socket.on(\"CreatePeer\", makePeer);\n    //ends the function for useEffect hook\n\n    //\n  }, []);\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className=\"row h-100 w-100\">\n          <p>Gekk</p>\n          <div className=\"col-12 col-6 d-flex justify-content-center\">\n            <div className=\"embed-responsive embed-responseive-16by9\">\n              <video className=\"embed-responsive-item\" muted />\n              {/* We muted the above video as we dont want to hear our own voice  also the above raios and sizes fix the video to cover the entire screen*/}\n            </div>\n          </div>\n\n          <div className=\"col-12 col-6 d-flex justify-content-center\">\n            <div\n              id=\"peerVideo\"\n              className=\"embed-responsive embed-responseive-16by9\"\n            >\n              {/* We muted the above video as we dont want to hear our own voice  also the above raios and sizes fix the video to cover the entire screen*/}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}