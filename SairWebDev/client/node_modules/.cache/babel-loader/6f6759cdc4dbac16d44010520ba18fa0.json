{"ast":null,"code":"var _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochatroom2.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nlet Peer = require(\"simple-peer\");\n\nlet socket = socketIOClient(\"http:127.0.0.1:5000\");\nconst video = document.querySelector(\"video\");\nconst filter = document.querySelector(\"#filter\");\nconst checkboxTheme = document.querySelector(\"#theme\");\nlet client = {};\nlet currentFilter; //get stream\n\nuseEffect(() => {\n  navigator.mediaDevices.getUserMedia({\n    video: true,\n    audio: true\n  }).then(stream => {\n    socket.emit(\"NewClient\");\n    video.srcObject = stream;\n    video.play();\n    filter.addEventListener(\"change\", event => {\n      currentFilter = event.target.value;\n      video.style.filter = currentFilter;\n      SendFilter(currentFilter);\n      event.preventDefault;\n    }); //used to initialize a peer\n\n    function InitPeer(type) {\n      let peer = new Peer({\n        initiator: type == \"init\" ? true : false,\n        stream: stream,\n        trickle: false\n      });\n      peer.on(\"stream\", function (stream) {\n        CreateVideo(stream);\n      }); //This isn't working in chrome; works perfectly in firefox.\n      // peer.on('close', function () {\n      //     document.getElementById(\"peerVideo\").remove();\n      //     peer.destroy()\n      // })\n\n      peer.on(\"data\", function (data) {\n        let decodedData = new TextDecoder(\"utf-8\").decode(data);\n        let peervideo = document.querySelector(\"#peerVideo\");\n        peervideo.style.filter = decodedData;\n      });\n      return peer;\n    } //for peer of type init\n\n\n    function MakePeer() {\n      client.gotAnswer = false;\n      let peer = InitPeer(\"init\");\n      peer.on(\"signal\", function (data) {\n        if (!client.gotAnswer) {\n          socket.emit(\"Offer\", data);\n        }\n      });\n      client.peer = peer;\n    } //for peer of type not init\n\n\n    function FrontAnswer(offer) {\n      let peer = InitPeer(\"notInit\");\n      peer.on(\"signal\", data => {\n        socket.emit(\"Answer\", data);\n      });\n      peer.signal(offer);\n      client.peer = peer;\n    }\n\n    function SignalAnswer(answer) {\n      client.gotAnswer = true;\n      let peer = client.peer;\n      peer.signal(answer);\n    }\n\n    function CreateVideo(stream) {\n      CreateDiv();\n      let video = document.createElement(\"video\");\n      video.id = \"peerVideo\";\n      video.srcObject = stream;\n      video.setAttribute(\"class\", \"embed-responsive-item\");\n      document.querySelector(\"#peerDiv\").appendChild(video);\n      video.play(); //wait for 1 sec\n\n      setTimeout(() => SendFilter(currentFilter), 1000);\n      video.addEventListener(\"click\", () => {\n        if (video.volume != 0) video.volume = 0;else video.volume = 1;\n      });\n    }\n\n    function SessionActive() {\n      document.write(\"Session Active. Please come back later\");\n    }\n\n    function SendFilter(filter) {\n      if (client.peer) {\n        client.peer.send(filter);\n      }\n    }\n\n    function RemovePeer() {\n      document.getElementById(\"peerVideo\").remove();\n      document.getElementById(\"muteText\").remove();\n\n      if (client.peer) {\n        client.peer.destroy();\n      }\n    }\n\n    socket.on(\"BackOffer\", FrontAnswer);\n    socket.on(\"BackAnswer\", SignalAnswer);\n    socket.on(\"SessionActive\", SessionActive);\n    socket.on(\"CreatePeer\", MakePeer);\n    socket.on(\"Disconnect\", RemovePeer);\n  }).catch(err => document.write(err));\n  checkboxTheme.addEventListener(\"click\", () => {\n    if (checkboxTheme.checked == true) {\n      document.body.style.backgroundColor = \"#212529\";\n\n      if (document.querySelector(\"#muteText\")) {\n        document.querySelector(\"#muteText\").style.color = \"#fff\";\n      }\n    } else {\n      document.body.style.backgroundColor = \"#fff\";\n\n      if (document.querySelector(\"#muteText\")) {\n        document.querySelector(\"#muteText\").style.color = \"#212529\";\n      }\n    }\n  });\n\n  function CreateDiv() {\n    let div = document.createElement(\"div\");\n    div.setAttribute(\"class\", \"centered\");\n    div.id = \"muteText\";\n    div.innerHTML = \"Click to Mute/Unmute\";\n    document.querySelector(\"#peerDiv\").appendChild(div);\n    if (checkboxTheme.checked == true) document.querySelector(\"#muteText\").style.color = \"#fff\";\n  }\n}, []);\n\nconst Videochatroom2 = () => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"peerVideo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }));\n};\n\nexport default Videochatroom2;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochatroom2.js"],"names":["React","Fragment","useEffect","socketIOClient","Peer","require","socket","video","document","querySelector","filter","checkboxTheme","client","currentFilter","navigator","mediaDevices","getUserMedia","audio","then","stream","emit","srcObject","play","addEventListener","event","target","value","style","SendFilter","preventDefault","InitPeer","type","peer","initiator","trickle","on","CreateVideo","data","decodedData","TextDecoder","decode","peervideo","MakePeer","gotAnswer","FrontAnswer","offer","signal","SignalAnswer","answer","CreateDiv","createElement","id","setAttribute","appendChild","setTimeout","volume","SessionActive","write","send","RemovePeer","getElementById","remove","destroy","catch","err","checked","body","backgroundColor","color","div","innerHTML","Videochatroom2"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nlet Peer = require(\"simple-peer\");\nlet socket = socketIOClient(\"http:127.0.0.1:5000\");\nconst video = document.querySelector(\"video\");\nconst filter = document.querySelector(\"#filter\");\nconst checkboxTheme = document.querySelector(\"#theme\");\nlet client = {};\nlet currentFilter;\n//get stream\n\nuseEffect(() => {\n  navigator.mediaDevices\n    .getUserMedia({ video: true, audio: true })\n    .then(stream => {\n      socket.emit(\"NewClient\");\n      video.srcObject = stream;\n      video.play();\n\n      filter.addEventListener(\"change\", event => {\n        currentFilter = event.target.value;\n        video.style.filter = currentFilter;\n        SendFilter(currentFilter);\n        event.preventDefault;\n      });\n\n      //used to initialize a peer\n      function InitPeer(type) {\n        let peer = new Peer({\n          initiator: type == \"init\" ? true : false,\n          stream: stream,\n          trickle: false\n        });\n        peer.on(\"stream\", function(stream) {\n          CreateVideo(stream);\n        });\n        //This isn't working in chrome; works perfectly in firefox.\n        // peer.on('close', function () {\n        //     document.getElementById(\"peerVideo\").remove();\n        //     peer.destroy()\n        // })\n        peer.on(\"data\", function(data) {\n          let decodedData = new TextDecoder(\"utf-8\").decode(data);\n          let peervideo = document.querySelector(\"#peerVideo\");\n          peervideo.style.filter = decodedData;\n        });\n        return peer;\n      }\n\n      //for peer of type init\n      function MakePeer() {\n        client.gotAnswer = false;\n        let peer = InitPeer(\"init\");\n        peer.on(\"signal\", function(data) {\n          if (!client.gotAnswer) {\n            socket.emit(\"Offer\", data);\n          }\n        });\n        client.peer = peer;\n      }\n\n      //for peer of type not init\n      function FrontAnswer(offer) {\n        let peer = InitPeer(\"notInit\");\n        peer.on(\"signal\", data => {\n          socket.emit(\"Answer\", data);\n        });\n        peer.signal(offer);\n        client.peer = peer;\n      }\n\n      function SignalAnswer(answer) {\n        client.gotAnswer = true;\n        let peer = client.peer;\n        peer.signal(answer);\n      }\n\n      function CreateVideo(stream) {\n        CreateDiv();\n\n        let video = document.createElement(\"video\");\n        video.id = \"peerVideo\";\n        video.srcObject = stream;\n        video.setAttribute(\"class\", \"embed-responsive-item\");\n        document.querySelector(\"#peerDiv\").appendChild(video);\n        video.play();\n        //wait for 1 sec\n        setTimeout(() => SendFilter(currentFilter), 1000);\n\n        video.addEventListener(\"click\", () => {\n          if (video.volume != 0) video.volume = 0;\n          else video.volume = 1;\n        });\n      }\n\n      function SessionActive() {\n        document.write(\"Session Active. Please come back later\");\n      }\n\n      function SendFilter(filter) {\n        if (client.peer) {\n          client.peer.send(filter);\n        }\n      }\n\n      function RemovePeer() {\n        document.getElementById(\"peerVideo\").remove();\n        document.getElementById(\"muteText\").remove();\n        if (client.peer) {\n          client.peer.destroy();\n        }\n      }\n\n      socket.on(\"BackOffer\", FrontAnswer);\n      socket.on(\"BackAnswer\", SignalAnswer);\n      socket.on(\"SessionActive\", SessionActive);\n      socket.on(\"CreatePeer\", MakePeer);\n      socket.on(\"Disconnect\", RemovePeer);\n    })\n    .catch(err => document.write(err));\n\n  checkboxTheme.addEventListener(\"click\", () => {\n    if (checkboxTheme.checked == true) {\n      document.body.style.backgroundColor = \"#212529\";\n      if (document.querySelector(\"#muteText\")) {\n        document.querySelector(\"#muteText\").style.color = \"#fff\";\n      }\n    } else {\n      document.body.style.backgroundColor = \"#fff\";\n      if (document.querySelector(\"#muteText\")) {\n        document.querySelector(\"#muteText\").style.color = \"#212529\";\n      }\n    }\n  });\n\n  function CreateDiv() {\n    let div = document.createElement(\"div\");\n    div.setAttribute(\"class\", \"centered\");\n    div.id = \"muteText\";\n    div.innerHTML = \"Click to Mute/Unmute\";\n    document.querySelector(\"#peerDiv\").appendChild(div);\n    if (checkboxTheme.checked == true)\n      document.querySelector(\"#muteText\").style.color = \"#fff\";\n  }\n}, []);\nconst Videochatroom2 = () => {\n  return (\n    <Fragment>\n      <video />\n      <div id=\"peerVideo\" />\n    </Fragment>\n  );\n};\n\nexport default Videochatroom2;\n"]},"metadata":{},"sourceType":"module"}