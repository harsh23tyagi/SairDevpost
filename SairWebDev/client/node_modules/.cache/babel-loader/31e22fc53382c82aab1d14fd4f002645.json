{"ast":null,"code":"import _slicedToArray from \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochat.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\"; // let Peer = require(\"simple-peer\");\n// import * as Peer from \"simple-peer\";\n\nimport Peer from \"peerjs\"; // let Peer = require(\"simple-peer\");\n// const video = document.querySelector(\"video\");\n\nlet client = {}; // We can also pass an object with width and height for the video parameter of the getUSerMedia\n\nconst Videochat = () => {\n  const _useState = useState({\n    response: \"false\",\n    endpoint: \"http://127.0.0.1:5000\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        socketinfo = _useState2[0],\n        setsocketinfo = _useState2[1];\n\n  const socket = socketIOClient(socketinfo.endpoint);\n  var str = null;\n  useEffect(() => {\n    const video = document.querySelector(\"video\"); //Getting our own video\n\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      socket.emit(\"NewClient\");\n      video.srcObject = stream;\n      video.play(); //Initializing Peer\n\n      function InitPeer(type) {\n        if (type == \"init\") {\n          console.log(\"BBKIVINES\");\n        }\n\n        var peer = new Peer({\n          initiator: type == \"init\" ? true : false,\n          stream: stream,\n          trickle: false\n        });\n        console.log(peer);\n        createVideo(stream);\n        peer.on(\"stream\", stream => {\n          console.log(\"Streaming\"); // createVideo(stream);\n        });\n        peer.on(\"close\", function () {\n          document.getElementById(\"peerVideo\").remove();\n          peer.destroy();\n        });\n        return peer;\n      } //function makePeer to send the offer\n\n\n      function makePeer() {\n        console.log(\"Starting to make peer\");\n        client.gotAnswer = false;\n        let peer = InitPeer(\"init\");\n        console.log(peer);\n        peer.on(\"signal\", function (data) {\n          if (!client.gotAnswer) {\n            socket.emit(\"offer\", data);\n          }\n        });\n        client.peer = peer;\n      } // FrontAnswer to respond to the offer sent my another client\n\n\n      function frontAnswer(offer) {\n        let peer = InitPeer(\"notInit\");\n        peer.on(\"signal\", data => {\n          socket.emit(\"Answer\", data);\n        });\n        peer.signal(offer);\n      } //signal answer- handles answer from the backend\n\n\n      function signalAnswer(answer) {\n        client.gotAnswer = true;\n        let peer = client.peer;\n        peer.signal(answer);\n      } //creating a video element\n\n\n      function createVideo(stream) {\n        let video = document.createElement(\"video\");\n        video.id = \"peerVideo\";\n        video.srcObject = stream;\n        video.class = \"embed-responsive-item\";\n        document.querySelector(\"#peerVideo\").appendChild(video);\n        video.play();\n      }\n\n      function sessionActive() {\n        document.write(\"Session already in use- Please come back later\");\n      }\n\n      socket.on(\"BackOffer\", frontAnswer);\n      socket.on(\"BackAnswer\", signalAnswer);\n      socket.on(\"SessionActive\", sessionActive);\n      socket.on(\"CreatePeer\", makePeer);\n    }).catch(err => document.write(err));\n    console.log(\"Own Video Started\"); //create a socket connection\n    //ends the function for useEffect hook\n    //\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row h-100 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Gekk\"), React.createElement(\"div\", {\n    className: \"col-6 col-6 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"embed-responsive embed-responseive-16by9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    className: \"embed-responsive-item\",\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"row h-100 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-6 col-6 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"peerVideo\",\n    className: \"embed-responsive embed-responseive-16by9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })))));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochat.js"],"names":["React","Fragment","useState","useEffect","socketIOClient","Peer","client","Videochat","response","endpoint","socketinfo","setsocketinfo","socket","str","video","document","querySelector","navigator","mediaDevices","getUserMedia","audio","then","stream","emit","srcObject","play","InitPeer","type","console","log","peer","initiator","trickle","createVideo","on","getElementById","remove","destroy","makePeer","gotAnswer","data","frontAnswer","offer","signal","signalAnswer","answer","createElement","id","class","appendChild","sessionActive","write","catch","err"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n// let Peer = require(\"simple-peer\");\n// import * as Peer from \"simple-peer\";\nimport Peer from \"peerjs\";\n// let Peer = require(\"simple-peer\");\n\n// const video = document.querySelector(\"video\");\nlet client = {};\n\n// We can also pass an object with width and height for the video parameter of the getUSerMedia\nconst Videochat = () => {\n  const [socketinfo, setsocketinfo] = useState({\n    response: \"false\",\n    endpoint: \"http://127.0.0.1:5000\"\n  });\n  const socket = socketIOClient(socketinfo.endpoint);\n  var str = null;\n\n  useEffect(() => {\n    const video = document.querySelector(\"video\");\n\n    //Getting our own video\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        socket.emit(\"NewClient\");\n        video.srcObject = stream;\n        video.play();\n\n        //Initializing Peer\n        function InitPeer(type) {\n          if (type == \"init\") {\n            console.log(\"BBKIVINES\");\n          }\n          var peer = new Peer({\n            initiator: type == \"init\" ? true : false,\n            stream: stream,\n            trickle: false\n          });\n          console.log(peer);\n          createVideo(stream);\n          peer.on(\"stream\", stream => {\n            console.log(\"Streaming\");\n            // createVideo(stream);\n          });\n          peer.on(\"close\", function() {\n            document.getElementById(\"peerVideo\").remove();\n            peer.destroy();\n          });\n          return peer;\n        }\n\n        //function makePeer to send the offer\n        function makePeer() {\n          console.log(\"Starting to make peer\");\n          client.gotAnswer = false;\n          let peer = InitPeer(\"init\");\n          console.log(peer);\n          peer.on(\"signal\", function(data) {\n            if (!client.gotAnswer) {\n              socket.emit(\"offer\", data);\n            }\n          });\n          client.peer = peer;\n        }\n\n        // FrontAnswer to respond to the offer sent my another client\n        function frontAnswer(offer) {\n          let peer = InitPeer(\"notInit\");\n          peer.on(\"signal\", data => {\n            socket.emit(\"Answer\", data);\n          });\n          peer.signal(offer);\n        }\n\n        //signal answer- handles answer from the backend\n        function signalAnswer(answer) {\n          client.gotAnswer = true;\n          let peer = client.peer;\n          peer.signal(answer);\n        }\n        //creating a video element\n\n        function createVideo(stream) {\n          let video = document.createElement(\"video\");\n          video.id = \"peerVideo\";\n          video.srcObject = stream;\n          video.class = \"embed-responsive-item\";\n          document.querySelector(\"#peerVideo\").appendChild(video);\n          video.play();\n        }\n\n        function sessionActive() {\n          document.write(\"Session already in use- Please come back later\");\n        }\n        socket.on(\"BackOffer\", frontAnswer);\n        socket.on(\"BackAnswer\", signalAnswer);\n        socket.on(\"SessionActive\", sessionActive);\n        socket.on(\"CreatePeer\", makePeer);\n      })\n      .catch(err => document.write(err));\n\n    console.log(\"Own Video Started\");\n\n    //create a socket connection\n\n    //ends the function for useEffect hook\n\n    //\n  }, []);\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className=\"row h-100 w-100\">\n          <p>Gekk</p>\n          <div className=\"col-6 col-6 d-flex justify-content-center\">\n            <div className=\"embed-responsive embed-responseive-16by9\">\n              <video className=\"embed-responsive-item\" muted />\n              {/* We muted the above video as we dont want to hear our own voice  also the above raios and sizes fix the video to cover the entire screen*/}\n            </div>\n          </div>\n        </div>\n        <div className=\"row h-100 w-100\">\n          <div className=\"col-6 col-6 d-flex justify-content-center\">\n            <div\n              id=\"peerVideo\"\n              className=\"embed-responsive embed-responseive-16by9\"\n            >\n              {/* We muted the above video as we dont want to hear our own voice  also the above raios and sizes fix the video to cover the entire screen*/}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}