{"ast":null,"code":"import _slicedToArray from \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"peerjs\";\nimport socketIOClient from \"socket.io-client\";\nlet client = {};\n\nconst Videochat = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        clientInfo = _useState2[0],\n        setClientInfo = _useState2[1];\n\n  const socket = socketIOClient(\"http://127.0.0.1:5000\");\n  var str = null;\n  socket.on(\"hello\", pt => {\n    console.log(pt);\n  }); //   socket.emit(\"NewClient\", window.location.host);\n  //   useEffect(() => {\n  //     const video = document.querySelector(\"video\");\n  //     navigator.mediaDevices\n  //       .getUserMedia({ video: true, audio: true })\n  //       .then(stream => {\n  //         video.srcObject = stream;\n  //         video.play();\n  //       });\n  //   });\n  //   useEffect(() => {\n  //     socket.on(\"hello\", id => {\n  //       console.log(\"Here\" + id);\n  //       setClientInfo(id);\n  //     });\n  //   });\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Video\", React.createElement(\"video\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"peerVid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Video2\", React.createElement(\"video\", {\n    id: \"videoP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js"],"names":["React","Fragment","useState","useEffect","Peer","socketIOClient","client","Videochat","clientInfo","setClientInfo","socket","str","on","pt","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,IAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACcL,QAAQ,CAAC,CAAD,CADtB;AAAA;AAAA,QACfM,UADe;AAAA,QACHC,aADG;;AAEtB,QAAMC,MAAM,GAAGL,cAAc,CAAC,uBAAD,CAA7B;AACA,MAAIM,GAAG,GAAG,IAAV;AAEAD,EAAAA,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmBC,EAAE,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACD,GAFD,EALsB,CAQtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAME;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE;AAAO,IAAA,EAAE,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CADF;AAaD,CAtCD;;AAwCA,eAAeN,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"peerjs\";\nimport socketIOClient from \"socket.io-client\";\n\nlet client = {};\n\nconst Videochat = () => {\n  const [clientInfo, setClientInfo] = useState(0);\n  const socket = socketIOClient(\"http://127.0.0.1:5000\");\n  var str = null;\n\n  socket.on(\"hello\", pt => {\n    console.log(pt);\n  });\n  //   socket.emit(\"NewClient\", window.location.host);\n\n  //   useEffect(() => {\n  //     const video = document.querySelector(\"video\");\n  //     navigator.mediaDevices\n  //       .getUserMedia({ video: true, audio: true })\n  //       .then(stream => {\n  //         video.srcObject = stream;\n  //         video.play();\n  //       });\n  //   });\n  //   useEffect(() => {\n  //     socket.on(\"hello\", id => {\n  //       console.log(\"Here\" + id);\n  //       setClientInfo(id);\n  //     });\n  //   });\n  return (\n    <Fragment>\n      {/* <button onClick={() => handleNewMessage()}>Emit new message</button> */}\n      <div>\n        Video\n        <video />\n      </div>\n      <div id=\"peerVid\">\n        Video2\n        <video id=\"videoP\" />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}