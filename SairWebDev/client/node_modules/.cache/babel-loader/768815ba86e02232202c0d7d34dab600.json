{"ast":null,"code":"import _slicedToArray from \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochat.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\"; // let Peer = require(\"simple-peer\");\n// import * as Peer from \"simple-peer\";\n\nimport Peer from \"peerjs\"; // let Peer = require(\"simple-peer\");\n// const video = document.querySelector(\"video\");\n\nlet client = {}; // We can also pass an object with width and height for the video parameter of the getUSerMedia\n\nconst Videochat = () => {\n  const _useState = useState({\n    response: \"false\",\n    endpoint: \"http://127.0.0.1:5000\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        socketinfo = _useState2[0],\n        setsocketinfo = _useState2[1];\n\n  const socket = socketIOClient(socketinfo.endpoint);\n  var str = null;\n  useEffect(() => {\n    const video = document.querySelector(\"video\"); //Getting our own video\n\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      socket.emit(\"NewClient\");\n      video.srcObject = stream;\n      video.play(); //Initializing Peer\n\n      function InitPeer(type) {\n        let peer = new Peer({\n          initiator: type == \"init\" ? true : false,\n          stream: stream,\n          trickle: false\n        });\n        peer.on(\"stream\", function (stream) {\n          CreateVideo(stream);\n        }); //This isn't working in chrome; works perfectly in firefox.\n        // peer.on('close', function () {\n        //     document.getElementById(\"peerVideo\").remove();\n        //     peer.destroy()\n        // })\n\n        peer.on(\"data\", function (data) {\n          let decodedData = new TextDecoder(\"utf-8\").decode(data);\n          let peervideo = document.querySelector(\"#peerVideo\");\n          peervideo.style.filter = decodedData;\n        });\n        return peer;\n      } //for peer of type init\n\n\n      function MakePeer() {\n        client.gotAnswer = false;\n        let peer = InitPeer(\"init\");\n        peer.on(\"signal\", function (data) {\n          if (!client.gotAnswer) {\n            socket.emit(\"Offer\", data);\n          }\n        });\n        client.peer = peer;\n      } //for peer of type not init\n\n\n      function FrontAnswer(offer) {\n        let peer = InitPeer(\"notInit\");\n        peer.on(\"signal\", data => {\n          socket.emit(\"Answer\", data);\n        });\n        peer.signal(offer);\n        client.peer = peer;\n      }\n\n      function SignalAnswer(answer) {\n        client.gotAnswer = true;\n        let peer = client.peer;\n        peer.signal(answer);\n      }\n\n      function CreateVideo(stream) {\n        CreateDiv();\n        let video = document.createElement(\"video\");\n        video.id = \"peerVideo\";\n        video.srcObject = stream;\n        video.setAttribute(\"class\", \"embed-responsive-item\");\n        document.querySelector(\"#peerDiv\").appendChild(video);\n        video.play(); //wait for 1 sec\n\n        setTimeout(() => SendFilter(currentFilter), 1000);\n        video.addEventListener(\"click\", () => {\n          if (video.volume != 0) video.volume = 0;else video.volume = 1;\n        });\n      }\n\n      function SessionActive() {\n        document.write(\"Session Active. Please come back later\");\n      }\n\n      function RemovePeer() {\n        document.getElementById(\"peerVideo\").remove();\n        document.getElementById(\"muteText\").remove();\n\n        if (client.peer) {\n          client.peer.destroy();\n        }\n      }\n\n      socket.on(\"BackOffer\", FrontAnswer);\n      socket.on(\"BackAnswer\", SignalAnswer);\n      socket.on(\"SessionActive\", SessionActive);\n      socket.on(\"CreatePeer\", MakePeer);\n      socket.on(\"Disconnect\", RemovePeer);\n    }).catch(err => document.write(err));\n    console.log(\"Own Video Started\"); //create a socket connection\n    //ends the function for useEffect hook\n    //\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row h-100 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Gekk\"), React.createElement(\"div\", {\n    className: \"col-6 col-6 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"embed-responsive embed-responseive-16by9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    className: \"embed-responsive-item\",\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"row h-100 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-6 col-6 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"peerVideo\",\n    className: \"embed-responsive embed-responseive-16by9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })))));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochat.js"],"names":["React","Fragment","useState","useEffect","socketIOClient","Peer","client","Videochat","response","endpoint","socketinfo","setsocketinfo","socket","str","video","document","querySelector","navigator","mediaDevices","getUserMedia","audio","then","stream","emit","srcObject","play","InitPeer","type","peer","initiator","trickle","on","CreateVideo","data","decodedData","TextDecoder","decode","peervideo","style","filter","MakePeer","gotAnswer","FrontAnswer","offer","signal","SignalAnswer","answer","CreateDiv","createElement","id","setAttribute","appendChild","setTimeout","SendFilter","currentFilter","addEventListener","volume","SessionActive","write","RemovePeer","getElementById","remove","destroy","catch","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;AACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;AAEA;;AACA,IAAIC,MAAM,GAAG,EAAb,C,CAEA;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACcL,QAAQ,CAAC;AAC3CM,IAAAA,QAAQ,EAAE,OADiC;AAE3CC,IAAAA,QAAQ,EAAE;AAFiC,GAAD,CADtB;AAAA;AAAA,QACfC,UADe;AAAA,QACHC,aADG;;AAKtB,QAAMC,MAAM,GAAGR,cAAc,CAACM,UAAU,CAACD,QAAZ,CAA7B;AACA,MAAII,GAAG,GAAG,IAAV;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd,CADc,CAGd;;AACAC,IAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEL,MAAAA,KAAK,EAAE,IAAT;AAAeM,MAAAA,KAAK,EAAE;AAAtB,KADhB,EAEGC,IAFH,CAEQC,MAAM,IAAI;AACdV,MAAAA,MAAM,CAACW,IAAP,CAAY,WAAZ;AACAT,MAAAA,KAAK,CAACU,SAAN,GAAkBF,MAAlB;AACAR,MAAAA,KAAK,CAACW,IAAN,GAHc,CAKd;;AACA,eAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,YAAIC,IAAI,GAAG,IAAIvB,IAAJ,CAAS;AAClBwB,UAAAA,SAAS,EAAEF,IAAI,IAAI,MAAR,GAAiB,IAAjB,GAAwB,KADjB;AAElBL,UAAAA,MAAM,EAAEA,MAFU;AAGlBQ,UAAAA,OAAO,EAAE;AAHS,SAAT,CAAX;AAKAF,QAAAA,IAAI,CAACG,EAAL,CAAQ,QAAR,EAAkB,UAAST,MAAT,EAAiB;AACjCU,UAAAA,WAAW,CAACV,MAAD,CAAX;AACD,SAFD,EANsB,CAStB;AACA;AACA;AACA;AACA;;AACAM,QAAAA,IAAI,CAACG,EAAL,CAAQ,MAAR,EAAgB,UAASE,IAAT,EAAe;AAC7B,cAAIC,WAAW,GAAG,IAAIC,WAAJ,CAAgB,OAAhB,EAAyBC,MAAzB,CAAgCH,IAAhC,CAAlB;AACA,cAAII,SAAS,GAAGtB,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAhB;AACAqB,UAAAA,SAAS,CAACC,KAAV,CAAgBC,MAAhB,GAAyBL,WAAzB;AACD,SAJD;AAKA,eAAON,IAAP;AACD,OA1Ba,CA4Bd;;;AACA,eAASY,QAAT,GAAoB;AAClBlC,QAAAA,MAAM,CAACmC,SAAP,GAAmB,KAAnB;AACA,YAAIb,IAAI,GAAGF,QAAQ,CAAC,MAAD,CAAnB;AACAE,QAAAA,IAAI,CAACG,EAAL,CAAQ,QAAR,EAAkB,UAASE,IAAT,EAAe;AAC/B,cAAI,CAAC3B,MAAM,CAACmC,SAAZ,EAAuB;AACrB7B,YAAAA,MAAM,CAACW,IAAP,CAAY,OAAZ,EAAqBU,IAArB;AACD;AACF,SAJD;AAKA3B,QAAAA,MAAM,CAACsB,IAAP,GAAcA,IAAd;AACD,OAtCa,CAwCd;;;AACA,eAASc,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,YAAIf,IAAI,GAAGF,QAAQ,CAAC,SAAD,CAAnB;AACAE,QAAAA,IAAI,CAACG,EAAL,CAAQ,QAAR,EAAkBE,IAAI,IAAI;AACxBrB,UAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ,EAAsBU,IAAtB;AACD,SAFD;AAGAL,QAAAA,IAAI,CAACgB,MAAL,CAAYD,KAAZ;AACArC,QAAAA,MAAM,CAACsB,IAAP,GAAcA,IAAd;AACD;;AAED,eAASiB,YAAT,CAAsBC,MAAtB,EAA8B;AAC5BxC,QAAAA,MAAM,CAACmC,SAAP,GAAmB,IAAnB;AACA,YAAIb,IAAI,GAAGtB,MAAM,CAACsB,IAAlB;AACAA,QAAAA,IAAI,CAACgB,MAAL,CAAYE,MAAZ;AACD;;AAED,eAASd,WAAT,CAAqBV,MAArB,EAA6B;AAC3ByB,QAAAA,SAAS;AAET,YAAIjC,KAAK,GAAGC,QAAQ,CAACiC,aAAT,CAAuB,OAAvB,CAAZ;AACAlC,QAAAA,KAAK,CAACmC,EAAN,GAAW,WAAX;AACAnC,QAAAA,KAAK,CAACU,SAAN,GAAkBF,MAAlB;AACAR,QAAAA,KAAK,CAACoC,YAAN,CAAmB,OAAnB,EAA4B,uBAA5B;AACAnC,QAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCmC,WAAnC,CAA+CrC,KAA/C;AACAA,QAAAA,KAAK,CAACW,IAAN,GAR2B,CAS3B;;AACA2B,QAAAA,UAAU,CAAC,MAAMC,UAAU,CAACC,aAAD,CAAjB,EAAkC,IAAlC,CAAV;AAEAxC,QAAAA,KAAK,CAACyC,gBAAN,CAAuB,OAAvB,EAAgC,MAAM;AACpC,cAAIzC,KAAK,CAAC0C,MAAN,IAAgB,CAApB,EAAuB1C,KAAK,CAAC0C,MAAN,GAAe,CAAf,CAAvB,KACK1C,KAAK,CAAC0C,MAAN,GAAe,CAAf;AACN,SAHD;AAID;;AAED,eAASC,aAAT,GAAyB;AACvB1C,QAAAA,QAAQ,CAAC2C,KAAT,CAAe,wCAAf;AACD;;AAED,eAASC,UAAT,GAAsB;AACpB5C,QAAAA,QAAQ,CAAC6C,cAAT,CAAwB,WAAxB,EAAqCC,MAArC;AACA9C,QAAAA,QAAQ,CAAC6C,cAAT,CAAwB,UAAxB,EAAoCC,MAApC;;AACA,YAAIvD,MAAM,CAACsB,IAAX,EAAiB;AACftB,UAAAA,MAAM,CAACsB,IAAP,CAAYkC,OAAZ;AACD;AACF;;AAEDlD,MAAAA,MAAM,CAACmB,EAAP,CAAU,WAAV,EAAuBW,WAAvB;AACA9B,MAAAA,MAAM,CAACmB,EAAP,CAAU,YAAV,EAAwBc,YAAxB;AACAjC,MAAAA,MAAM,CAACmB,EAAP,CAAU,eAAV,EAA2B0B,aAA3B;AACA7C,MAAAA,MAAM,CAACmB,EAAP,CAAU,YAAV,EAAwBS,QAAxB;AACA5B,MAAAA,MAAM,CAACmB,EAAP,CAAU,YAAV,EAAwB4B,UAAxB;AACD,KA7FH,EA8FGI,KA9FH,CA8FSC,GAAG,IAAIjD,QAAQ,CAAC2C,KAAT,CAAeM,GAAf,CA9FhB;AAgGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EApGc,CAsGd;AAEA;AAEA;AACD,GA3GQ,EA2GN,EA3GM,CAAT;AA6GA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,uBAAjB;AAAyC,IAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,CADF,EAUE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,SAAS,EAAC,0CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVF,CADF,CADF;AAyBD,CA9ID;;AAgJA,eAAe3D,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n// let Peer = require(\"simple-peer\");\n// import * as Peer from \"simple-peer\";\nimport Peer from \"peerjs\";\n// let Peer = require(\"simple-peer\");\n\n// const video = document.querySelector(\"video\");\nlet client = {};\n\n// We can also pass an object with width and height for the video parameter of the getUSerMedia\nconst Videochat = () => {\n  const [socketinfo, setsocketinfo] = useState({\n    response: \"false\",\n    endpoint: \"http://127.0.0.1:5000\"\n  });\n  const socket = socketIOClient(socketinfo.endpoint);\n  var str = null;\n\n  useEffect(() => {\n    const video = document.querySelector(\"video\");\n\n    //Getting our own video\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        socket.emit(\"NewClient\");\n        video.srcObject = stream;\n        video.play();\n\n        //Initializing Peer\n        function InitPeer(type) {\n          let peer = new Peer({\n            initiator: type == \"init\" ? true : false,\n            stream: stream,\n            trickle: false\n          });\n          peer.on(\"stream\", function(stream) {\n            CreateVideo(stream);\n          });\n          //This isn't working in chrome; works perfectly in firefox.\n          // peer.on('close', function () {\n          //     document.getElementById(\"peerVideo\").remove();\n          //     peer.destroy()\n          // })\n          peer.on(\"data\", function(data) {\n            let decodedData = new TextDecoder(\"utf-8\").decode(data);\n            let peervideo = document.querySelector(\"#peerVideo\");\n            peervideo.style.filter = decodedData;\n          });\n          return peer;\n        }\n\n        //for peer of type init\n        function MakePeer() {\n          client.gotAnswer = false;\n          let peer = InitPeer(\"init\");\n          peer.on(\"signal\", function(data) {\n            if (!client.gotAnswer) {\n              socket.emit(\"Offer\", data);\n            }\n          });\n          client.peer = peer;\n        }\n\n        //for peer of type not init\n        function FrontAnswer(offer) {\n          let peer = InitPeer(\"notInit\");\n          peer.on(\"signal\", data => {\n            socket.emit(\"Answer\", data);\n          });\n          peer.signal(offer);\n          client.peer = peer;\n        }\n\n        function SignalAnswer(answer) {\n          client.gotAnswer = true;\n          let peer = client.peer;\n          peer.signal(answer);\n        }\n\n        function CreateVideo(stream) {\n          CreateDiv();\n\n          let video = document.createElement(\"video\");\n          video.id = \"peerVideo\";\n          video.srcObject = stream;\n          video.setAttribute(\"class\", \"embed-responsive-item\");\n          document.querySelector(\"#peerDiv\").appendChild(video);\n          video.play();\n          //wait for 1 sec\n          setTimeout(() => SendFilter(currentFilter), 1000);\n\n          video.addEventListener(\"click\", () => {\n            if (video.volume != 0) video.volume = 0;\n            else video.volume = 1;\n          });\n        }\n\n        function SessionActive() {\n          document.write(\"Session Active. Please come back later\");\n        }\n\n        function RemovePeer() {\n          document.getElementById(\"peerVideo\").remove();\n          document.getElementById(\"muteText\").remove();\n          if (client.peer) {\n            client.peer.destroy();\n          }\n        }\n\n        socket.on(\"BackOffer\", FrontAnswer);\n        socket.on(\"BackAnswer\", SignalAnswer);\n        socket.on(\"SessionActive\", SessionActive);\n        socket.on(\"CreatePeer\", MakePeer);\n        socket.on(\"Disconnect\", RemovePeer);\n      })\n      .catch(err => document.write(err));\n\n    console.log(\"Own Video Started\");\n\n    //create a socket connection\n\n    //ends the function for useEffect hook\n\n    //\n  }, []);\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className=\"row h-100 w-100\">\n          <p>Gekk</p>\n          <div className=\"col-6 col-6 d-flex justify-content-center\">\n            <div className=\"embed-responsive embed-responseive-16by9\">\n              <video className=\"embed-responsive-item\" muted />\n              {/* We muted the above video as we dont want to hear our own voice  also the above raios and sizes fix the video to cover the entire screen*/}\n            </div>\n          </div>\n        </div>\n        <div className=\"row h-100 w-100\">\n          <div className=\"col-6 col-6 d-flex justify-content-center\">\n            <div\n              id=\"peerVideo\"\n              className=\"embed-responsive embed-responseive-16by9\"\n            >\n              {/* We muted the above video as we dont want to hear our own voice  also the above raios and sizes fix the video to cover the entire screen*/}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}