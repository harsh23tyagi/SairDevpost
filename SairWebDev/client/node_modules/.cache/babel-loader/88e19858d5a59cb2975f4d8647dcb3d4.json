{"ast":null,"code":"import _slicedToArray from \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"peerjs\";\nimport socketIOClient from \"socket.io-client\";\nlet client = {};\n\nconst Videochat = () => {\n  const _useState = useState({\n    response: \"false\",\n    endpoint: \"http://127.0.0.1:5000\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        socketinfo = _useState2[0],\n        setsocketinfo = _useState2[1];\n\n  const socket = socketIOClient(socketinfo.endpoint);\n  var str = null;\n  useEffect(() => {\n    console.log(\"Trying to establish connection\");\n    socket.emit(\"CheckConnection\", \"Message\");\n    console.log(\"Connection Established\");\n    const video = document.querySelector(\"video\");\n    const clientId = window.location.hostname.toString(); //Taking media services\n\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      socket.emit(\"NewClient\", clientId);\n      video.srcObject = stream;\n      video.play();\n      socket.on(\"CreatePeer\", data => {\n        console.log(data);\n\n        if (data == \"1\") {\n          var vid = document.createElement(\"video\");\n          vid.id = \"video2\";\n          document.querySelector(\"#peerVid\").appendChild(vid);\n          let peer = new Peer({\n            initiator: true,\n            stream: stream,\n            trickle: false\n          });\n          peer.on(\"stream\", stream => {\n            vid.srcObject = stream;\n            vid.play();\n          });\n        }\n      });\n    });\n  });\n\n  function initPeer() {}\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Video\", React.createElement(\"video\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"peerVid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Video2\"));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js"],"names":["React","Fragment","useState","useEffect","Peer","socketIOClient","client","Videochat","response","endpoint","socketinfo","setsocketinfo","socket","str","console","log","emit","video","document","querySelector","clientId","window","location","hostname","toString","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","play","on","data","vid","createElement","id","appendChild","peer","initiator","trickle","initPeer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,IAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACcL,QAAQ,CAAC;AAC3CM,IAAAA,QAAQ,EAAE,OADiC;AAE3CC,IAAAA,QAAQ,EAAE;AAFiC,GAAD,CADtB;AAAA;AAAA,QACfC,UADe;AAAA,QACHC,aADG;;AAKtB,QAAMC,MAAM,GAAGP,cAAc,CAACK,UAAU,CAACD,QAAZ,CAA7B;AACA,MAAII,GAAG,GAAG,IAAV;AACAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAH,IAAAA,MAAM,CAACI,IAAP,CAAY,iBAAZ,EAA+B,SAA/B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,UAAME,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,QAAzB,EAAjB,CALc,CAMd;;AACAC,IAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEV,MAAAA,KAAK,EAAE,IAAT;AAAeW,MAAAA,KAAK,EAAE;AAAtB,KADhB,EAEGC,IAFH,CAEQC,MAAM,IAAI;AACdlB,MAAAA,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAyBI,QAAzB;AACAH,MAAAA,KAAK,CAACc,SAAN,GAAkBD,MAAlB;AACAb,MAAAA,KAAK,CAACe,IAAN;AAEApB,MAAAA,MAAM,CAACqB,EAAP,CAAU,YAAV,EAAwBC,IAAI,IAAI;AAC9BpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAZ;;AACA,YAAIA,IAAI,IAAI,GAAZ,EAAiB;AACf,cAAIC,GAAG,GAAGjB,QAAQ,CAACkB,aAAT,CAAuB,OAAvB,CAAV;AACAD,UAAAA,GAAG,CAACE,EAAJ,GAAS,QAAT;AACAnB,UAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCmB,WAAnC,CAA+CH,GAA/C;AACA,cAAII,IAAI,GAAG,IAAInC,IAAJ,CAAS;AAClBoC,YAAAA,SAAS,EAAE,IADO;AAElBV,YAAAA,MAAM,EAAEA,MAFU;AAGlBW,YAAAA,OAAO,EAAE;AAHS,WAAT,CAAX;AAKAF,UAAAA,IAAI,CAACN,EAAL,CAAQ,QAAR,EAAkBH,MAAM,IAAI;AAC1BK,YAAAA,GAAG,CAACJ,SAAJ,GAAgBD,MAAhB;AACAK,YAAAA,GAAG,CAACH,IAAJ;AACD,WAHD;AAID;AACF,OAhBD;AAiBD,KAxBH;AAyBD,GAhCQ,CAAT;;AAiCA,WAASU,QAAT,GAAoB,CAAE;;AACtB,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF;AASD,CAlDD;;AAoDA,eAAenC,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"peerjs\";\nimport socketIOClient from \"socket.io-client\";\n\nlet client = {};\n\nconst Videochat = () => {\n  const [socketinfo, setsocketinfo] = useState({\n    response: \"false\",\n    endpoint: \"http://127.0.0.1:5000\"\n  });\n  const socket = socketIOClient(socketinfo.endpoint);\n  var str = null;\n  useEffect(() => {\n    console.log(\"Trying to establish connection\");\n    socket.emit(\"CheckConnection\", \"Message\");\n    console.log(\"Connection Established\");\n    const video = document.querySelector(\"video\");\n    const clientId = window.location.hostname.toString();\n    //Taking media services\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        socket.emit(\"NewClient\", clientId);\n        video.srcObject = stream;\n        video.play();\n\n        socket.on(\"CreatePeer\", data => {\n          console.log(data);\n          if (data == \"1\") {\n            var vid = document.createElement(\"video\");\n            vid.id = \"video2\";\n            document.querySelector(\"#peerVid\").appendChild(vid);\n            let peer = new Peer({\n              initiator: true,\n              stream: stream,\n              trickle: false\n            });\n            peer.on(\"stream\", stream => {\n              vid.srcObject = stream;\n              vid.play();\n            });\n          }\n        });\n      });\n  });\n  function initPeer() {}\n  return (\n    <Fragment>\n      <div>\n        Video\n        <video />\n      </div>\n      <div id=\"peerVid\">Video2</div>\n    </Fragment>\n  );\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}