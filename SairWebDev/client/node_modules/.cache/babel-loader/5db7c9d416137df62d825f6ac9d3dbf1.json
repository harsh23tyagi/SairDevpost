{"ast":null,"code":"import _slicedToArray from \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"simple-peer\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./videochatstyles.css\";\nlet client = {};\n\nconst Videochat = () => {\n  const _useState = useState({\n    clientID: -1\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        clientInfo = _useState2[0],\n        setClientInfo = _useState2[1];\n\n  var str = null;\n  var clientID;\n  const socket = socketIOClient(\"http://127.0.0.1:5000\");\n  var peer = new Peer({\n    initiator: true,\n    trickle: false //   stream: stream\n\n  });\n\n  const onsubmit = async e => {\n    e.preventDefault();\n    var id = Math.floor(Math.random() * 999999); // console.log(id);\n\n    document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n    var text = document.getElementById(\"connectingID\").textContent;\n    var peer = new Peer({\n      initiator: true,\n      trickle: false //   stream: stream\n\n    });\n    console.log(peer);\n    peer.on(\"error\", function (err) {\n      console.log(\"error\", err);\n    });\n    peer.on(\"signal\", function (data) {\n      console.log(\"SIGNAL\", JSON.stringify(data));\n      document.querySelector(\"#yourID\").value = JSON.stringify(data);\n    });\n  };\n\n  const startChat = async e => {\n    e.preventDefault();\n    var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n    peer.signal(otherID);\n  }; //   peer.on(\"signal\", data => {\n  //     console.log(\"HEL\");\n  //     document.getElementById(\"IDPeer\").textContent = JSON.stringify(data);\n  //   });\n\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onsubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Get Info\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => startChat(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter the ID to connect with your friend\",\n    name: \"name\",\n    id: \"connectingID\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"clientID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Your ID: \")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"IDPeer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Peer ID: \"), React.createElement(\"textarea\", {\n    class: \"form-control\",\n    rows: \"5\",\n    id: \"#yourID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Start Video Chat\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"block_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"video-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"video-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))));\n};\n\nexport default Videochat;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/VideoChatting/Videochat.js"],"names":["React","Fragment","useState","useEffect","Peer","socketIOClient","client","Videochat","clientID","clientInfo","setClientInfo","str","socket","peer","initiator","trickle","onsubmit","e","preventDefault","id","Math","floor","random","document","getElementById","textContent","text","console","log","on","err","data","JSON","stringify","querySelector","value","startChat","otherID","parse","signal"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport Peer from \"simple-peer\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./videochatstyles.css\";\n\nlet client = {};\n\nconst Videochat = () => {\n  const [clientInfo, setClientInfo] = useState({\n    clientID: -1\n  });\n\n  var str = null;\n  var clientID;\n  const socket = socketIOClient(\"http://127.0.0.1:5000\");\n\n  var peer = new Peer({\n    initiator: true,\n    trickle: false\n    //   stream: stream\n  });\n  const onsubmit = async e => {\n    e.preventDefault();\n    var id = Math.floor(Math.random() * 999999);\n    // console.log(id);\n    document.getElementById(\"clientID\").textContent = \"ClientID: \" + id;\n\n    var text = document.getElementById(\"connectingID\").textContent;\n    var peer = new Peer({\n      initiator: true,\n      trickle: false\n      //   stream: stream\n    });\n    console.log(peer);\n    peer.on(\"error\", function(err) {\n      console.log(\"error\", err);\n    });\n\n    peer.on(\"signal\", function(data) {\n      console.log(\"SIGNAL\", JSON.stringify(data));\n      document.querySelector(\"#yourID\").value = JSON.stringify(data);\n    });\n  };\n\n  const startChat = async e => {\n    e.preventDefault();\n    var otherID = JSON.parse(document.getElementById(\"connectingID\").value);\n    peer.signal(otherID);\n  };\n  //   peer.on(\"signal\", data => {\n  //     console.log(\"HEL\");\n  //     document.getElementById(\"IDPeer\").textContent = JSON.stringify(data);\n  //   });\n  return (\n    <Fragment>\n      {/* <button onClick={() => handleNewMessage()}>Emit new message</button> */}\n      <div>\n        <form className=\"form\" onSubmit={e => onsubmit(e)}>\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Get Info\"\n            required\n          />\n        </form>\n        <form className=\"form\" onSubmit={e => startChat(e)}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter the ID to connect with your friend\"\n              name=\"name\"\n              id=\"connectingID\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label id=\"clientID\">Your ID: </label>\n          </div>\n          <div className=\"form-group\">\n            <label id=\"IDPeer\">Peer ID: </label>\n            <textarea class=\"form-control\" rows=\"5\" id=\"#yourID\" />\n          </div>\n\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Start Video Chat\"\n            required\n          />\n        </form>\n      </div>\n      {/* <div className=\"container parent-box row \">\n        <div className=\"col-sm-4 d-flex justify-content-center video-box\" />{\" \"}\n        <div className=\"col-sm-4 d-flex justify-content-center video-box\" />\n      </div> */}\n\n      <div id=\"block_container\">\n        <div className=\"video-box\">\n          <video />\n        </div>\n        <div className=\"video-box\">\n          <video />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Videochat;\n"]},"metadata":{},"sourceType":"module"}