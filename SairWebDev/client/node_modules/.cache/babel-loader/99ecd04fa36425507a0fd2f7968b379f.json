{"ast":null,"code":"var _jsxFileName = \"/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochatroom2.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nlet Peer = require(\"simple-peer\");\n\nlet socket = socketIOClient(\"http:127.0.0.1:5000\"); // const filter = document.querySelector(\"#filter\");\n\nconst checkboxTheme = document.querySelector(\"#theme\");\nlet client = {};\nlet currentFilter; //get stream\n\nconst Videochatroom2 = () => {\n  useEffect(() => {\n    const video = document.querySelector(\"video\");\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      socket.emit(\"NewClient\");\n      video.srcObject = stream;\n      video.play(); // filter.addEventListener(\"change\", event => {\n      //   currentFilter = event.target.value;\n      //   video.style.filter = currentFilter;\n      //   SendFilter(currentFilter);\n      //   event.preventDefault;\n      // });\n      //used to initialize a peer\n\n      function InitPeer(type) {\n        let peer = new Peer({\n          initiator: type == \"init\" ? true : false,\n          stream: stream,\n          trickle: false\n        });\n        peer.on(\"stream\", function (stream) {\n          CreateVideo(stream);\n        }); //This isn't working in chrome; works perfectly in firefox.\n        // peer.on('close', function () {\n        //     document.getElementById(\"peerVideo\").remove();\n        //     peer.destroy()\n        // })\n\n        peer.on(\"data\", function (data) {\n          let decodedData = new TextDecoder(\"utf-8\").decode(data);\n          let peervideo = document.querySelector(\"#peerVideo\");\n          peervideo.style.filter = decodedData;\n        });\n        return peer;\n      } //for peer of type init\n\n\n      function MakePeer() {\n        client.gotAnswer = false;\n        let peer = InitPeer(\"init\");\n        peer.on(\"signal\", function (data) {\n          if (!client.gotAnswer) {\n            socket.emit(\"Offer\", data);\n          }\n        });\n        client.peer = peer;\n      } //for peer of type not init\n\n\n      function FrontAnswer(offer) {\n        let peer = InitPeer(\"notInit\");\n        peer.on(\"signal\", data => {\n          socket.emit(\"Answer\", data);\n        });\n        peer.signal(offer);\n        client.peer = peer;\n      }\n\n      function SignalAnswer(answer) {\n        client.gotAnswer = true;\n        let peer = client.peer;\n        peer.signal(answer);\n      }\n\n      function CreateVideo(stream) {\n        CreateDiv();\n        let video = document.createElement(\"video\");\n        video.id = \"peerVideo\";\n        video.srcObject = stream;\n        video.setAttribute(\"class\", \"embed-responsive-item\");\n        document.querySelector(\"#peerDiv\").appendChild(video);\n        video.play(); //wait for 1 sec\n\n        setTimeout(() => SendFilter(currentFilter), 1000);\n        video.addEventListener(\"click\", () => {\n          if (video.volume != 0) video.volume = 0;else video.volume = 1;\n        });\n      }\n\n      function SessionActive() {\n        document.write(\"Session Active. Please come back later\");\n      }\n\n      function SendFilter(filter) {\n        if (client.peer) {\n          client.peer.send(filter);\n        }\n      }\n\n      function RemovePeer() {\n        document.getElementById(\"peerVideo\").remove();\n        document.getElementById(\"muteText\").remove();\n\n        if (client.peer) {\n          client.peer.destroy();\n        }\n      }\n\n      socket.on(\"BackOffer\", FrontAnswer);\n      socket.on(\"BackAnswer\", SignalAnswer);\n      socket.on(\"SessionActive\", SessionActive);\n      socket.on(\"CreatePeer\", MakePeer);\n      socket.on(\"Disconnect\", RemovePeer);\n    }).catch(err => document.write(err)); // checkboxTheme.addEventListener(\"click\", () => {\n    //   if (checkboxTheme.checked == true) {\n    //     document.body.style.backgroundColor = \"#212529\";\n    //     if (document.querySelector(\"#muteText\")) {\n    //       document.querySelector(\"#muteText\").style.color = \"#fff\";\n    //     }\n    //   } else {\n    //     document.body.style.backgroundColor = \"#fff\";\n    //     if (document.querySelector(\"#muteText\")) {\n    //       document.querySelector(\"#muteText\").style.color = \"#212529\";\n    //     }\n    //   }\n    // });\n\n    function CreateDiv() {\n      let div = document.createElement(\"div\");\n      div.setAttribute(\"class\", \"centered\");\n      div.id = \"muteText\";\n      div.innerHTML = \"Click to Mute/Unmute\";\n      document.querySelector(\"#peerDiv\").appendChild(div);\n      if (checkboxTheme.checked == true) document.querySelector(\"#muteText\").style.color = \"#fff\";\n    }\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"row h-10 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    id: \"filter\",\n    class: \"w-100 bg-dark text-light ml-2 mt-2 select font-weight-bold border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Normal\"), React.createElement(\"option\", {\n    value: \"grayscale(100%)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"B & W\"), React.createElement(\"option\", {\n    value: \"sepia(100%)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Old School\"), React.createElement(\"option\", {\n    value: \"contrast(150%)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Lumination\"), React.createElement(\"option\", {\n    value: \"blur(20px)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Hidden Mist\"), React.createElement(\"option\", {\n    value: \"invert(100%)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Dracula\"), React.createElement(\"option\", {\n    value: \"hue-rotate(180deg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"X-men Beast\"), React.createElement(\"option\", {\n    value: \"saturate(25)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Super Saiyan God\"))), React.createElement(\"div\", {\n    class: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    class: \"row h-90 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col-12 col-sm-6 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"embed-responsive embed-responsive-16by9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    class: \"embed-responsive-item\",\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"col-12 col-sm-6 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"peerDiv\",\n    class: \"embed-responsive embed-responsive-16by9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })))));\n};\n\nexport default Videochatroom2;","map":{"version":3,"sources":["/Users/harshtyagi/Documents/Sair/React2/Middleware/client/src/components/videosegmentation/Videochatroom2.js"],"names":["React","Fragment","useEffect","socketIOClient","Peer","require","socket","checkboxTheme","document","querySelector","client","currentFilter","Videochatroom2","video","navigator","mediaDevices","getUserMedia","audio","then","stream","emit","srcObject","play","InitPeer","type","peer","initiator","trickle","on","CreateVideo","data","decodedData","TextDecoder","decode","peervideo","style","filter","MakePeer","gotAnswer","FrontAnswer","offer","signal","SignalAnswer","answer","CreateDiv","createElement","id","setAttribute","appendChild","setTimeout","SendFilter","addEventListener","volume","SessionActive","write","send","RemovePeer","getElementById","remove","destroy","catch","err","div","innerHTML","checked","color"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nlet Peer = require(\"simple-peer\");\nlet socket = socketIOClient(\"http:127.0.0.1:5000\");\n\n// const filter = document.querySelector(\"#filter\");\nconst checkboxTheme = document.querySelector(\"#theme\");\nlet client = {};\nlet currentFilter;\n//get stream\n\nconst Videochatroom2 = () => {\n  useEffect(() => {\n    const video = document.querySelector(\"video\");\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        socket.emit(\"NewClient\");\n        video.srcObject = stream;\n        video.play();\n\n        // filter.addEventListener(\"change\", event => {\n        //   currentFilter = event.target.value;\n        //   video.style.filter = currentFilter;\n        //   SendFilter(currentFilter);\n        //   event.preventDefault;\n        // });\n\n        //used to initialize a peer\n        function InitPeer(type) {\n          let peer = new Peer({\n            initiator: type == \"init\" ? true : false,\n            stream: stream,\n            trickle: false\n          });\n          peer.on(\"stream\", function(stream) {\n            CreateVideo(stream);\n          });\n          //This isn't working in chrome; works perfectly in firefox.\n          // peer.on('close', function () {\n          //     document.getElementById(\"peerVideo\").remove();\n          //     peer.destroy()\n          // })\n          peer.on(\"data\", function(data) {\n            let decodedData = new TextDecoder(\"utf-8\").decode(data);\n            let peervideo = document.querySelector(\"#peerVideo\");\n            peervideo.style.filter = decodedData;\n          });\n          return peer;\n        }\n\n        //for peer of type init\n        function MakePeer() {\n          client.gotAnswer = false;\n          let peer = InitPeer(\"init\");\n          peer.on(\"signal\", function(data) {\n            if (!client.gotAnswer) {\n              socket.emit(\"Offer\", data);\n            }\n          });\n          client.peer = peer;\n        }\n\n        //for peer of type not init\n        function FrontAnswer(offer) {\n          let peer = InitPeer(\"notInit\");\n          peer.on(\"signal\", data => {\n            socket.emit(\"Answer\", data);\n          });\n          peer.signal(offer);\n          client.peer = peer;\n        }\n\n        function SignalAnswer(answer) {\n          client.gotAnswer = true;\n          let peer = client.peer;\n          peer.signal(answer);\n        }\n\n        function CreateVideo(stream) {\n          CreateDiv();\n\n          let video = document.createElement(\"video\");\n          video.id = \"peerVideo\";\n          video.srcObject = stream;\n          video.setAttribute(\"class\", \"embed-responsive-item\");\n          document.querySelector(\"#peerDiv\").appendChild(video);\n          video.play();\n          //wait for 1 sec\n          setTimeout(() => SendFilter(currentFilter), 1000);\n\n          video.addEventListener(\"click\", () => {\n            if (video.volume != 0) video.volume = 0;\n            else video.volume = 1;\n          });\n        }\n\n        function SessionActive() {\n          document.write(\"Session Active. Please come back later\");\n        }\n\n        function SendFilter(filter) {\n          if (client.peer) {\n            client.peer.send(filter);\n          }\n        }\n\n        function RemovePeer() {\n          document.getElementById(\"peerVideo\").remove();\n          document.getElementById(\"muteText\").remove();\n          if (client.peer) {\n            client.peer.destroy();\n          }\n        }\n\n        socket.on(\"BackOffer\", FrontAnswer);\n        socket.on(\"BackAnswer\", SignalAnswer);\n        socket.on(\"SessionActive\", SessionActive);\n        socket.on(\"CreatePeer\", MakePeer);\n        socket.on(\"Disconnect\", RemovePeer);\n      })\n      .catch(err => document.write(err));\n\n    // checkboxTheme.addEventListener(\"click\", () => {\n    //   if (checkboxTheme.checked == true) {\n    //     document.body.style.backgroundColor = \"#212529\";\n    //     if (document.querySelector(\"#muteText\")) {\n    //       document.querySelector(\"#muteText\").style.color = \"#fff\";\n    //     }\n    //   } else {\n    //     document.body.style.backgroundColor = \"#fff\";\n    //     if (document.querySelector(\"#muteText\")) {\n    //       document.querySelector(\"#muteText\").style.color = \"#212529\";\n    //     }\n    //   }\n    // });\n\n    function CreateDiv() {\n      let div = document.createElement(\"div\");\n      div.setAttribute(\"class\", \"centered\");\n      div.id = \"muteText\";\n      div.innerHTML = \"Click to Mute/Unmute\";\n      document.querySelector(\"#peerDiv\").appendChild(div);\n      if (checkboxTheme.checked == true)\n        document.querySelector(\"#muteText\").style.color = \"#fff\";\n    }\n  }, []);\n  return (\n    <Fragment>\n      <div class=\"container-fluid\">\n        <div class=\"row h-10 w-100\">\n          <div class=\"col\">\n            <select\n              id=\"filter\"\n              class=\"w-100 bg-dark text-light ml-2 mt-2 select font-weight-bold border\"\n            >\n              <option value=\"none\">Normal</option>\n              <option value=\"grayscale(100%)\">B & W</option>\n              <option value=\"sepia(100%)\">Old School</option>\n              <option value=\"contrast(150%)\">Lumination</option>\n              <option value=\"blur(20px)\">Hidden Mist</option>\n              <option value=\"invert(100%)\">Dracula</option>\n              <option value=\"hue-rotate(180deg\">X-men Beast</option>\n              <option value=\"saturate(25)\">Super Saiyan God</option>\n            </select>\n          </div>\n          <div class=\"col\">\n            {/* <div class=\"float-right mt-3\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"theme\">\n                    <label class=\"form-check-label\" for=\"theme\">\n                        Dark Theme\n                    </label>\n                </div> */}\n          </div>\n        </div>\n        <div class=\"row h-90 w-100\">\n          <div class=\"col-12 col-sm-6 d-flex justify-content-center\">\n            <div class=\"embed-responsive embed-responsive-16by9\">\n              <video class=\"embed-responsive-item\" muted />\n            </div>\n          </div>\n          <div class=\"col-12 col-sm-6 d-flex justify-content-center\">\n            <div id=\"peerDiv\" class=\"embed-responsive embed-responsive-16by9\" />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Videochatroom2;\n"]},"metadata":{},"sourceType":"module"}